#!/bin/bash

EXTERNALDEPS_FILE=source/dentist/modules.d


#!/bin/bash


function main()
{
    echo -n 'Updating `dentist.modules` ... '

    get_updated_modules "$EXTERNALDEPS_FILE" > "$EXTERNALDEPS_FILE~"

    if ! cmp -s "$EXTERNALDEPS_FILE" "$EXTERNALDEPS_FILE~";
    then
        mv "$EXTERNALDEPS_FILE~" "$EXTERNALDEPS_FILE"

        echo 'done'
    else
        echo 'skipped'
    fi
}

function get_updated_modules()
{
    MODULES=($(
        find source -name '*.d' |
            xargs grep -hE '^module [^;]+;$' |
            sed -E 's/^module\s+([^;]+);$/\1/' |
            # NOTE: `app` module is excluded to fix linker error in unit tests;
            #       it is irrelevant anyway. :o)
            grep -vE '^app$' |
            LC_ALL=C sort
    ))

    echo "/**"
    echo "    This module lists all modules in DENTIST. This is used to derive a list of"
    echo "    all external dependencies in DENTIST."
    echo
    echo "    DO NOT EDIT! This file is generated by \`update-modules.sh\`."
    echo
    echo "    See_also: \`dentist.common.external.externalDependencies\`"
    echo "    Copyright: Â© 2018 Arne Ludwig <arne.ludwig@posteo.de>"
    echo "    License: Subject to the terms of the MIT license, as written in the"
    echo "             included LICENSE file."
    echo "    Authors: Arne Ludwig <arne.ludwig@posteo.de>"
    echo "*/"
    echo "module dentist.modules;"
    echo
    echo
    echo "import std.meta : AliasSeq;"

    for MODULE in ${MODULES[*]};
    do
        echo "static import $MODULE;"
    done

    echo
    echo
    echo "alias modules = AliasSeq!("

    for MODULE in ${MODULES[*]};
    do
        echo "    $MODULE,"
    done

    echo ");"
}

function clean_up()
{
    rm -f "$EXTERNALDEPS_FILE~"
}

function on_error()
{
    echo failed
}

trap clean_up EXIT
trap on_error ERR
set -e  # exit when any command fails

main
