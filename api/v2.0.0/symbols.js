// symbol index generated by DDOX - do not edit
var symbols = [
{name: 'dentist.commands.collectPileUps.filter', kind: "module", path: './dentist/commands/collectPileUps/filter.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.AlignmentChainFilter', kind: "interfacedeclaration", path: './dentist/commands/collectPileUps/filter/AlignmentChainFilter.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.AlignmentChainFilter.opCall', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/AlignmentChainFilter.opCall.html', attributes: ["abstract"]},
{name: 'dentist.commands.collectPileUps.filter.AmbiguousAlignmentChainsFilter', kind: "classdeclaration", path: './dentist/commands/collectPileUps/filter/AmbiguousAlignmentChainsFilter.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.AmbiguousAlignmentChainsFilter.opCall', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/AmbiguousAlignmentChainsFilter.opCall.html', attributes: ["override"]},
{name: 'dentist.commands.collectPileUps.filter.AmbiguousAlignmentChainsFilter.this', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/AmbiguousAlignmentChainsFilter.this.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.AmbiguousAlignmentChainsFilter.unusedReads', kind: "variabledeclaration", path: './dentist/commands/collectPileUps/filter/AmbiguousAlignmentChainsFilter.unusedReads.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.AmbiguousAlignmentChainsFilter.getUniquelyAlignedRead', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/AmbiguousAlignmentChainsFilter.getUniquelyAlignedRead.html', attributes: ["auto"]},
{name: 'dentist.commands.collectPileUps.filter.AmbiguousAlignmentChainsFilter.groupByReadLocus', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/AmbiguousAlignmentChainsFilter.groupByReadLocus.html', attributes: ["static"]},
{name: 'dentist.commands.collectPileUps.filter.ContainedAlignmentChainsFilter', kind: "classdeclaration", path: './dentist/commands/collectPileUps/filter/ContainedAlignmentChainsFilter.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.ContainedAlignmentChainsFilter.opCall', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/ContainedAlignmentChainsFilter.opCall.html', attributes: ["override"]},
{name: 'dentist.commands.collectPileUps.filter.ContainedAlignmentChainsFilter.this', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/ContainedAlignmentChainsFilter.this.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.filterContainedAlignmentChains', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/filterContainedAlignmentChains.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.ImproperAlignmentChainsFilter', kind: "classdeclaration", path: './dentist/commands/collectPileUps/filter/ImproperAlignmentChainsFilter.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.ImproperAlignmentChainsFilter.opCall', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/ImproperAlignmentChainsFilter.opCall.html', attributes: ["override"]},
{name: 'dentist.commands.collectPileUps.filter.ImproperAlignmentChainsFilter.properAlignmentAllowance', kind: "variabledeclaration", path: './dentist/commands/collectPileUps/filter/ImproperAlignmentChainsFilter.properAlignmentAllowance.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.ImproperAlignmentChainsFilter.this', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/ImproperAlignmentChainsFilter.this.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.LQAlignmentChainsFilter', kind: "classdeclaration", path: './dentist/commands/collectPileUps/filter/LQAlignmentChainsFilter.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.LQAlignmentChainsFilter.maxAlignmentError', kind: "variabledeclaration", path: './dentist/commands/collectPileUps/filter/LQAlignmentChainsFilter.maxAlignmentError.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.LQAlignmentChainsFilter.opCall', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/LQAlignmentChainsFilter.opCall.html', attributes: ["override"]},
{name: 'dentist.commands.collectPileUps.filter.LQAlignmentChainsFilter.this', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/LQAlignmentChainsFilter.this.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.ReadFilter', kind: "classdeclaration", path: './dentist/commands/collectPileUps/filter/ReadFilter.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.ReadFilter.getDiscardedReadIds', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/ReadFilter.getDiscardedReadIds.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.ReadFilter.opCall', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/ReadFilter.opCall.html', attributes: ["override"]},
{name: 'dentist.commands.collectPileUps.filter.ReadFilter.this', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/ReadFilter.this.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.ReadFilter.unusedReads', kind: "variabledeclaration", path: './dentist/commands/collectPileUps/filter/ReadFilter.unusedReads.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.RedundantAlignmentChainsFilter', kind: "classdeclaration", path: './dentist/commands/collectPileUps/filter/RedundantAlignmentChainsFilter.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.RedundantAlignmentChainsFilter.getDiscardedReadIds', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/RedundantAlignmentChainsFilter.getDiscardedReadIds.html', attributes: ["override"]},
{name: 'dentist.commands.collectPileUps.filter.RedundantAlignmentChainsFilter.this', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/RedundantAlignmentChainsFilter.this.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.WeaklyAnchoredAlignmentChainsFilter', kind: "classdeclaration", path: './dentist/commands/collectPileUps/filter/WeaklyAnchoredAlignmentChainsFilter.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.WeaklyAnchoredAlignmentChainsFilter.isWeaklyAnchored', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/WeaklyAnchoredAlignmentChainsFilter.isWeaklyAnchored.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.WeaklyAnchoredAlignmentChainsFilter.minAnchorLength', kind: "variabledeclaration", path: './dentist/commands/collectPileUps/filter/WeaklyAnchoredAlignmentChainsFilter.minAnchorLength.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.WeaklyAnchoredAlignmentChainsFilter.opCall', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/WeaklyAnchoredAlignmentChainsFilter.opCall.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.WeaklyAnchoredAlignmentChainsFilter.repetitiveRegions', kind: "variabledeclaration", path: './dentist/commands/collectPileUps/filter/WeaklyAnchoredAlignmentChainsFilter.repetitiveRegions.html', attributes: []},
{name: 'dentist.commands.collectPileUps.filter.WeaklyAnchoredAlignmentChainsFilter.this', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/filter/WeaklyAnchoredAlignmentChainsFilter.this.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups', kind: "module", path: './dentist/commands/collectPileUps/pileups.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.build', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/build.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.collectPileUps', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/collectPileUps.html', attributes: ["auto", "pure", "nothrow", "nogc", "safe"]},
{name: 'dentist.commands.collectPileUps.pileups.collectReadAlignments', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/collectReadAlignments.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.collectScaffoldJoins', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/collectScaffoldJoins.html', attributes: ["auto"]},
{name: 'dentist.commands.collectPileUps.pileups.debugLogPileUps', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/debugLogPileUps.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.discardAmbiguousJoins', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/discardAmbiguousJoins.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.enforceMinSpanningReads', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/enforceMinSpanningReads.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.findCorrectGapJoin', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/findCorrectGapJoin.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.joinToJson', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/joinToJson.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.makeScaffoldJoin', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/makeScaffoldJoin.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.mergeJoins', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/mergeJoins.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.removeInputGaps', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/removeInputGaps.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.resolveBubbles', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/resolveBubbles.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.ScaffoldPayload', kind: "structdeclaration", path: './dentist/commands/collectPileUps/pileups/ScaffoldPayload.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.ScaffoldPayload.empty', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/ScaffoldPayload.empty.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.commands.collectPileUps.pileups.ScaffoldPayload.inputGap', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/ScaffoldPayload.inputGap.html', attributes: ["static", "pure"]},
{name: 'dentist.commands.collectPileUps.pileups.ScaffoldPayload.merge', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/ScaffoldPayload.merge.html', attributes: ["static"]},
{name: 'dentist.commands.collectPileUps.pileups.ScaffoldPayload.numTypes', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/ScaffoldPayload.numTypes.html', attributes: ["pure", "nothrow", "const"]},
{name: 'dentist.commands.collectPileUps.pileups.ScaffoldPayload.pileUp', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/ScaffoldPayload.pileUp.html', attributes: ["static", "pure"]},
{name: 'dentist.commands.collectPileUps.pileups.ScaffoldPayload.readAlignments', kind: "variabledeclaration", path: './dentist/commands/collectPileUps/pileups/ScaffoldPayload.readAlignments.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.ScaffoldPayload.remove', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/ScaffoldPayload.remove.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.commands.collectPileUps.pileups.ScaffoldPayload.toJson', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/ScaffoldPayload.toJson.html', attributes: ["const"]},
{name: 'dentist.commands.collectPileUps.pileups.ScaffoldPayload.Type', kind: "enumdeclaration", path: './dentist/commands/collectPileUps/pileups/ScaffoldPayload.Type.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.ScaffoldPayload.Type.inputGap', kind: "enummemberdeclaration", path: './dentist/commands/collectPileUps/pileups/ScaffoldPayload.Type.html#inputGap', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.ScaffoldPayload.Type.pileUp', kind: "enummemberdeclaration", path: './dentist/commands/collectPileUps/pileups/ScaffoldPayload.Type.html#pileUp', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.ScaffoldPayload.types', kind: "variabledeclaration", path: './dentist/commands/collectPileUps/pileups/ScaffoldPayload.types.html', attributes: []},
{name: 'dentist.commands.collectPileUps.pileups.selectMeanest', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/pileups/selectMeanest.html', attributes: ["static"]},
{name: 'dentist.commands.processPileUps.cropper', kind: "module", path: './dentist/commands/processPileUps/cropper.html', attributes: []},
{name: 'dentist.commands.processPileUps.cropper.CropOptions', kind: "structdeclaration", path: './dentist/commands/processPileUps/cropper/CropOptions.html', attributes: []},
{name: 'dentist.commands.processPileUps.cropper.CropOptions.minAnchorLength', kind: "variabledeclaration", path: './dentist/commands/processPileUps/cropper/CropOptions.minAnchorLength.html', attributes: []},
{name: 'dentist.commands.processPileUps.cropper.CropOptions.outputDir', kind: "variabledeclaration", path: './dentist/commands/processPileUps/cropper/CropOptions.outputDir.html', attributes: []},
{name: 'dentist.commands.processPileUps.cropper.CropOptions.readsDb', kind: "variabledeclaration", path: './dentist/commands/processPileUps/cropper/CropOptions.readsDb.html', attributes: []},
{name: 'dentist.commands.processPileUps.cropper.CropOptions.refDb', kind: "variabledeclaration", path: './dentist/commands/processPileUps/cropper/CropOptions.refDb.html', attributes: []},
{name: 'dentist.commands.processPileUps.cropper.cropPileUp', kind: "functiondeclaration", path: './dentist/commands/processPileUps/cropper/cropPileUp.html', attributes: ["auto"]},
{name: 'dentist.commands.bed2mask', kind: "module", path: './dentist/commands/bed2mask.html', attributes: []},
{name: 'dentist.commands.bed2mask.AugmentedReferenceInterval', kind: "aliasdeclaration", path: './dentist/commands/bed2mask/AugmentedReferenceInterval.html', attributes: []},
{name: 'dentist.commands.bed2mask.execute', kind: "functiondeclaration", path: './dentist/commands/bed2mask/execute.html', attributes: []},
{name: 'dentist.commands.bed2mask.getContigsByScaffold', kind: "functiondeclaration", path: './dentist/commands/bed2mask/getContigsByScaffold.html', attributes: []},
{name: 'dentist.commands.bed2mask.getOverlappingContigs', kind: "functiondeclaration", path: './dentist/commands/bed2mask/getOverlappingContigs.html', attributes: []},
{name: 'dentist.commands.bed2mask.Options', kind: "aliasdeclaration", path: './dentist/commands/bed2mask/Options.html', attributes: []},
{name: 'dentist.commands.bed2mask.parseDataComment', kind: "functiondeclaration", path: './dentist/commands/bed2mask/parseDataComment.html', attributes: []},
{name: 'dentist.commands.bed2mask.readBedFile', kind: "functiondeclaration", path: './dentist/commands/bed2mask/readBedFile.html', attributes: []},
{name: 'dentist.commands.bed2mask.writeDazzlerMask', kind: "functiondeclaration", path: './dentist/commands/bed2mask/writeDazzlerMask.html', attributes: []},
{name: 'dentist.commands.buildPartialAssembly', kind: "module", path: './dentist/commands/buildPartialAssembly.html', attributes: []},
{name: 'dentist.commands.buildPartialAssembly.execute', kind: "functiondeclaration", path: './dentist/commands/buildPartialAssembly/execute.html', attributes: []},
{name: 'dentist.commands.buildPartialAssembly.Options', kind: "aliasdeclaration", path: './dentist/commands/buildPartialAssembly/Options.html', attributes: []},
{name: 'dentist.commands.chainLocalAlignments', kind: "module", path: './dentist/commands/chainLocalAlignments.html', attributes: []},
{name: 'dentist.commands.chainLocalAlignments.CLIChainer', kind: "classdeclaration", path: './dentist/commands/chainLocalAlignments/CLIChainer.html', attributes: []},
{name: 'dentist.commands.chainLocalAlignments.CLIChainer.alignments', kind: "variabledeclaration", path: './dentist/commands/chainLocalAlignments/CLIChainer.alignments.html', attributes: []},
{name: 'dentist.commands.chainLocalAlignments.CLIChainer.chainingOptions', kind: "variabledeclaration", path: './dentist/commands/chainLocalAlignments/CLIChainer.chainingOptions.html', attributes: []},
{name: 'dentist.commands.chainLocalAlignments.CLIChainer.chainLocalAlignments', kind: "functiondeclaration", path: './dentist/commands/chainLocalAlignments/CLIChainer.chainLocalAlignments.html', attributes: []},
{name: 'dentist.commands.chainLocalAlignments.CLIChainer.FlatLocalAlignments', kind: "aliasdeclaration", path: './dentist/commands/chainLocalAlignments/CLIChainer.FlatLocalAlignments.html', attributes: []},
{name: 'dentist.commands.chainLocalAlignments.CLIChainer.options', kind: "variabledeclaration", path: './dentist/commands/chainLocalAlignments/CLIChainer.options.html', attributes: []},
{name: 'dentist.commands.chainLocalAlignments.CLIChainer.progress', kind: "variabledeclaration", path: './dentist/commands/chainLocalAlignments/CLIChainer.progress.html', attributes: []},
{name: 'dentist.commands.chainLocalAlignments.CLIChainer.readAlignments', kind: "functiondeclaration", path: './dentist/commands/chainLocalAlignments/CLIChainer.readAlignments.html', attributes: []},
{name: 'dentist.commands.chainLocalAlignments.CLIChainer.run', kind: "functiondeclaration", path: './dentist/commands/chainLocalAlignments/CLIChainer.run.html', attributes: []},
{name: 'dentist.commands.chainLocalAlignments.CLIChainer.this', kind: "functiondeclaration", path: './dentist/commands/chainLocalAlignments/CLIChainer.this.html', attributes: []},
{name: 'dentist.commands.chainLocalAlignments.execute', kind: "functiondeclaration", path: './dentist/commands/chainLocalAlignments/execute.html', attributes: []},
{name: 'dentist.commands.chainLocalAlignments.Options', kind: "aliasdeclaration", path: './dentist/commands/chainLocalAlignments/Options.html', attributes: []},
{name: 'dentist.commands.checkResults', kind: "module", path: './dentist/commands/checkResults.html', attributes: []},
{name: 'dentist.commands.checkResults.Complement', kind: "aliasdeclaration", path: './dentist/commands/checkResults/Complement.html', attributes: []},
{name: 'dentist.commands.checkResults.ContigAlignmentsCache', kind: "structdeclaration", path: './dentist/commands/checkResults/ContigAlignmentsCache.html', attributes: []},
{name: 'dentist.commands.checkResults.ContigAlignmentsCache._cachedAlignments', kind: "variabledeclaration", path: './dentist/commands/checkResults/ContigAlignmentsCache._cachedAlignments.html', attributes: []},
{name: 'dentist.commands.checkResults.ContigAlignmentsCache.cachedAlignments', kind: "functiondeclaration", path: './dentist/commands/checkResults/ContigAlignmentsCache.cachedAlignments.html', attributes: ["property"]},
{name: 'dentist.commands.checkResults.ContigAlignmentsCache.canWrite', kind: "functiondeclaration", path: './dentist/commands/checkResults/ContigAlignmentsCache.canWrite.html', attributes: ["property"]},
{name: 'dentist.commands.checkResults.ContigAlignmentsCache.contigAlignmentsCache', kind: "variabledeclaration", path: './dentist/commands/checkResults/ContigAlignmentsCache.contigAlignmentsCache.html', attributes: []},
{name: 'dentist.commands.checkResults.ContigAlignmentsCache.dbA', kind: "variabledeclaration", path: './dentist/commands/checkResults/ContigAlignmentsCache.dbA.html', attributes: []},
{name: 'dentist.commands.checkResults.ContigAlignmentsCache.dbB', kind: "variabledeclaration", path: './dentist/commands/checkResults/ContigAlignmentsCache.dbB.html', attributes: []},
{name: 'dentist.commands.checkResults.ContigAlignmentsCache.isValid', kind: "functiondeclaration", path: './dentist/commands/checkResults/ContigAlignmentsCache.isValid.html', attributes: ["property"]},
{name: 'dentist.commands.checkResults.ContigAlignmentsCache.read', kind: "functiondeclaration", path: './dentist/commands/checkResults/ContigAlignmentsCache.read.html', attributes: []},
{name: 'dentist.commands.checkResults.ContigAlignmentsCache.write', kind: "functiondeclaration", path: './dentist/commands/checkResults/ContigAlignmentsCache.write.html', attributes: []},
{name: 'dentist.commands.checkResults.ContigMapping', kind: "structdeclaration", path: './dentist/commands/checkResults/ContigMapping.html', attributes: []},
{name: 'dentist.commands.checkResults.ContigMapping.alignmentError', kind: "variabledeclaration", path: './dentist/commands/checkResults/ContigMapping.alignmentError.html', attributes: []},
{name: 'dentist.commands.checkResults.ContigMapping.complement', kind: "variabledeclaration", path: './dentist/commands/checkResults/ContigMapping.complement.html', attributes: []},
{name: 'dentist.commands.checkResults.ContigMapping.duplicateQueryContig', kind: "variabledeclaration", path: './dentist/commands/checkResults/ContigMapping.duplicateQueryContig.html', attributes: []},
{name: 'dentist.commands.checkResults.ContigMapping.opCast', kind: "functiondeclaration", path: './dentist/commands/checkResults/ContigMapping.opCast.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.commands.checkResults.ContigMapping.queryContigId', kind: "variabledeclaration", path: './dentist/commands/checkResults/ContigMapping.queryContigId.html', attributes: []},
{name: 'dentist.commands.checkResults.ContigMapping.reference', kind: "variabledeclaration", path: './dentist/commands/checkResults/ContigMapping.reference.html', attributes: []},
{name: 'dentist.commands.checkResults.ContigMapping.referenceContigLength', kind: "variabledeclaration", path: './dentist/commands/checkResults/ContigMapping.referenceContigLength.html', attributes: []},
{name: 'dentist.commands.checkResults.DuplicateQueryContig', kind: "aliasdeclaration", path: './dentist/commands/checkResults/DuplicateQueryContig.html', attributes: []},
{name: 'dentist.commands.checkResults.execute', kind: "functiondeclaration", path: './dentist/commands/checkResults/execute.html', attributes: []},
{name: 'dentist.commands.checkResults.histogram', kind: "functiondeclaration", path: './dentist/commands/checkResults/histogram.html', attributes: ["auto"]},
{name: 'dentist.commands.checkResults.Options', kind: "aliasdeclaration", path: './dentist/commands/checkResults/Options.html', attributes: []},
{name: 'dentist.commands.checkResults.queryEquiv', kind: "aliasdeclaration", path: './dentist/commands/checkResults/queryEquiv.html', attributes: []},
{name: 'dentist.commands.checkResults.queryOrder', kind: "aliasdeclaration", path: './dentist/commands/checkResults/queryOrder.html', attributes: []},
{name: 'dentist.commands.checkResults.StopExecution', kind: "classdeclaration", path: './dentist/commands/checkResults/StopExecution.html', attributes: []},
{name: 'dentist.commands.checkResults.StopExecution.this', kind: "functiondeclaration", path: './dentist/commands/checkResults/StopExecution.this.html', attributes: []},
{name: 'dentist.commands.checkResults.stretcher', kind: "functiondeclaration", path: './dentist/commands/checkResults/stretcher.html', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment', kind: "structdeclaration", path: './dentist/commands/checkResults/StretcherAlignment.html', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.complement', kind: "variabledeclaration", path: './dentist/commands/checkResults/StretcherAlignment.complement.html', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.cropReference', kind: "functiondeclaration", path: './dentist/commands/checkResults/StretcherAlignment.cropReference.html', attributes: ["const"]},
{name: 'dentist.commands.checkResults.StretcherAlignment.EditOp', kind: "enumdeclaration", path: './dentist/commands/checkResults/StretcherAlignment.EditOp.html', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.EditOp.indel', kind: "enummemberdeclaration", path: './dentist/commands/checkResults/StretcherAlignment.EditOp.html#indel', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.EditOp.match', kind: "enummemberdeclaration", path: './dentist/commands/checkResults/StretcherAlignment.EditOp.html#match', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.EditOp.mismatch', kind: "enummemberdeclaration", path: './dentist/commands/checkResults/StretcherAlignment.EditOp.html#mismatch', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.editOps', kind: "variabledeclaration", path: './dentist/commands/checkResults/StretcherAlignment.editOps.html', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.isBase', kind: "functiondeclaration", path: './dentist/commands/checkResults/StretcherAlignment.isBase.html', attributes: ["static"]},
{name: 'dentist.commands.checkResults.StretcherAlignment.length', kind: "functiondeclaration", path: './dentist/commands/checkResults/StretcherAlignment.length.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.commands.checkResults.StretcherAlignment.opApply', kind: "functiondeclaration", path: './dentist/commands/checkResults/StretcherAlignment.opApply.html', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.percentIdentity', kind: "variabledeclaration", path: './dentist/commands/checkResults/StretcherAlignment.percentIdentity.html', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.queryLength', kind: "variabledeclaration", path: './dentist/commands/checkResults/StretcherAlignment.queryLength.html', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.queryLine', kind: "variabledeclaration", path: './dentist/commands/checkResults/StretcherAlignment.queryLine.html', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.referenceLength', kind: "variabledeclaration", path: './dentist/commands/checkResults/StretcherAlignment.referenceLength.html', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.referenceLine', kind: "variabledeclaration", path: './dentist/commands/checkResults/StretcherAlignment.referenceLine.html', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.SeqChar', kind: "enumdeclaration", path: './dentist/commands/checkResults/StretcherAlignment.SeqChar.html', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.SeqChar.a', kind: "enummemberdeclaration", path: './dentist/commands/checkResults/StretcherAlignment.SeqChar.html#a', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.SeqChar.A', kind: "enummemberdeclaration", path: './dentist/commands/checkResults/StretcherAlignment.SeqChar.html#A', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.SeqChar.c', kind: "enummemberdeclaration", path: './dentist/commands/checkResults/StretcherAlignment.SeqChar.html#c', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.SeqChar.C', kind: "enummemberdeclaration", path: './dentist/commands/checkResults/StretcherAlignment.SeqChar.html#C', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.SeqChar.g', kind: "enummemberdeclaration", path: './dentist/commands/checkResults/StretcherAlignment.SeqChar.html#g', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.SeqChar.G', kind: "enummemberdeclaration", path: './dentist/commands/checkResults/StretcherAlignment.SeqChar.html#G', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.SeqChar.indel', kind: "enummemberdeclaration", path: './dentist/commands/checkResults/StretcherAlignment.SeqChar.html#indel', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.SeqChar.t', kind: "enummemberdeclaration", path: './dentist/commands/checkResults/StretcherAlignment.SeqChar.html#t', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.SeqChar.T', kind: "enummemberdeclaration", path: './dentist/commands/checkResults/StretcherAlignment.SeqChar.html#T', attributes: []},
{name: 'dentist.commands.checkResults.StretcherAlignment.SeqChar.unkownBase', kind: "enummemberdeclaration", path: './dentist/commands/checkResults/StretcherAlignment.SeqChar.html#unkownBase', attributes: []},
{name: 'dentist.commands.checkScaffolding', kind: "module", path: './dentist/commands/checkScaffolding.html', attributes: []},
{name: 'dentist.commands.checkScaffolding.execute', kind: "functiondeclaration", path: './dentist/commands/checkScaffolding/execute.html', attributes: []},
{name: 'dentist.commands.checkScaffolding.Options', kind: "aliasdeclaration", path: './dentist/commands/checkScaffolding/Options.html', attributes: []},
{name: 'dentist.commands.checkScaffolding.queryOrder', kind: "functiondeclaration", path: './dentist/commands/checkScaffolding/queryOrder.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.commands.checkScaffolding.referenceOrder', kind: "functiondeclaration", path: './dentist/commands/checkScaffolding/referenceOrder.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.commands.collectPileUps', kind: "module", path: './dentist/commands/collectPileUps.html', attributes: []},
{name: 'dentist.commands.collectPileUps.execute', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/execute.html', attributes: []},
{name: 'dentist.commands.collectPileUps.Options', kind: "aliasdeclaration", path: './dentist/commands/collectPileUps/Options.html', attributes: []},
{name: 'dentist.commands.collectPileUps.PileUpCollector', kind: "classdeclaration", path: './dentist/commands/collectPileUps/PileUpCollector.html', attributes: []},
{name: 'dentist.commands.collectPileUps.PileUpCollector.run', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/PileUpCollector.run.html', attributes: []},
{name: 'dentist.commands.collectPileUps.PileUpCollector.this', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/PileUpCollector.this.html', attributes: []},
{name: 'dentist.commands.collectPileUps.PileUpCollector.applyFilter', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/PileUpCollector.applyFilter.html', attributes: []},
{name: 'dentist.commands.collectPileUps.PileUpCollector.buildPileUps', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/PileUpCollector.buildPileUps.html', attributes: []},
{name: 'dentist.commands.collectPileUps.PileUpCollector.filterAlignments', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/PileUpCollector.filterAlignments.html', attributes: []},
{name: 'dentist.commands.collectPileUps.PileUpCollector.inputGaps', kind: "variabledeclaration", path: './dentist/commands/collectPileUps/PileUpCollector.inputGaps.html', attributes: []},
{name: 'dentist.commands.collectPileUps.PileUpCollector.numReads', kind: "variabledeclaration", path: './dentist/commands/collectPileUps/PileUpCollector.numReads.html', attributes: []},
{name: 'dentist.commands.collectPileUps.PileUpCollector.numReferenceContigs', kind: "variabledeclaration", path: './dentist/commands/collectPileUps/PileUpCollector.numReferenceContigs.html', attributes: []},
{name: 'dentist.commands.collectPileUps.PileUpCollector.options', kind: "variabledeclaration", path: './dentist/commands/collectPileUps/PileUpCollector.options.html', attributes: []},
{name: 'dentist.commands.collectPileUps.PileUpCollector.readInputs', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/PileUpCollector.readInputs.html', attributes: []},
{name: 'dentist.commands.collectPileUps.PileUpCollector.readsAlignment', kind: "variabledeclaration", path: './dentist/commands/collectPileUps/PileUpCollector.readsAlignment.html', attributes: []},
{name: 'dentist.commands.collectPileUps.PileUpCollector.repetitiveRegions', kind: "variabledeclaration", path: './dentist/commands/collectPileUps/PileUpCollector.repetitiveRegions.html', attributes: []},
{name: 'dentist.commands.collectPileUps.PileUpCollector.unusedReads', kind: "variabledeclaration", path: './dentist/commands/collectPileUps/PileUpCollector.unusedReads.html', attributes: []},
{name: 'dentist.commands.collectPileUps.PileUpCollector.writePileUps', kind: "functiondeclaration", path: './dentist/commands/collectPileUps/PileUpCollector.writePileUps.html', attributes: []},
{name: 'dentist.commands.filterMask', kind: "module", path: './dentist/commands/filterMask.html', attributes: []},
{name: 'dentist.commands.filterMask.execute', kind: "functiondeclaration", path: './dentist/commands/filterMask/execute.html', attributes: []},
{name: 'dentist.commands.filterMask.Options', kind: "aliasdeclaration", path: './dentist/commands/filterMask/Options.html', attributes: []},
{name: 'dentist.commands.findClosableGaps', kind: "module", path: './dentist/commands/findClosableGaps.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ClosableGap', kind: "structdeclaration", path: './dentist/commands/findClosableGaps/ClosableGap.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ClosableGap.fromContig', kind: "variabledeclaration", path: './dentist/commands/findClosableGaps/ClosableGap.fromContig.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ClosableGap.gapSize', kind: "variabledeclaration", path: './dentist/commands/findClosableGaps/ClosableGap.gapSize.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ClosableGap.mappedInterval', kind: "variabledeclaration", path: './dentist/commands/findClosableGaps/ClosableGap.mappedInterval.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ClosableGap.spanningReads', kind: "variabledeclaration", path: './dentist/commands/findClosableGaps/ClosableGap.spanningReads.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ClosableGap.toContig', kind: "variabledeclaration", path: './dentist/commands/findClosableGaps/ClosableGap.toContig.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ClosableGapsFinder', kind: "structdeclaration", path: './dentist/commands/findClosableGaps/ClosableGapsFinder.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ClosableGapsFinder.baseContigs', kind: "variabledeclaration", path: './dentist/commands/findClosableGaps/ClosableGapsFinder.baseContigs.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ClosableGapsFinder.closableGaps', kind: "variabledeclaration", path: './dentist/commands/findClosableGaps/ClosableGapsFinder.closableGaps.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ClosableGapsFinder.findClosableGaps', kind: "functiondeclaration", path: './dentist/commands/findClosableGaps/ClosableGapsFinder.findClosableGaps.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ClosableGapsFinder.init', kind: "functiondeclaration", path: './dentist/commands/findClosableGaps/ClosableGapsFinder.init.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ClosableGapsFinder.mappedContigs', kind: "variabledeclaration", path: './dentist/commands/findClosableGaps/ClosableGapsFinder.mappedContigs.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ClosableGapsFinder.options', kind: "variabledeclaration", path: './dentist/commands/findClosableGaps/ClosableGapsFinder.options.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ClosableGapsFinder.readSamples', kind: "variabledeclaration", path: './dentist/commands/findClosableGaps/ClosableGapsFinder.readSamples.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ClosableGapsFinder.run', kind: "functiondeclaration", path: './dentist/commands/findClosableGaps/ClosableGapsFinder.run.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.execute', kind: "functiondeclaration", path: './dentist/commands/findClosableGaps/execute.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.Options', kind: "aliasdeclaration", path: './dentist/commands/findClosableGaps/Options.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.parseReadSample', kind: "functiondeclaration", path: './dentist/commands/findClosableGaps/parseReadSample.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.readReadSamples', kind: "functiondeclaration", path: './dentist/commands/findClosableGaps/readReadSamples.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ReadSample', kind: "structdeclaration", path: './dentist/commands/findClosableGaps/ReadSample.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ReadSample.begin', kind: "variabledeclaration", path: './dentist/commands/findClosableGaps/ReadSample.begin.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ReadSample.complement', kind: "variabledeclaration", path: './dentist/commands/findClosableGaps/ReadSample.complement.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ReadSample.end', kind: "variabledeclaration", path: './dentist/commands/findClosableGaps/ReadSample.end.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ReadSample.opCmp', kind: "functiondeclaration", path: './dentist/commands/findClosableGaps/ReadSample.opCmp.html', attributes: ["pure", "nothrow", "const"]},
{name: 'dentist.commands.findClosableGaps.ReadSample.readId', kind: "variabledeclaration", path: './dentist/commands/findClosableGaps/ReadSample.readId.html', attributes: []},
{name: 'dentist.commands.findClosableGaps.ReadSample.scaffoldId', kind: "variabledeclaration", path: './dentist/commands/findClosableGaps/ReadSample.scaffoldId.html', attributes: []},
{name: 'dentist.commands.generateDazzlerOptions', kind: "module", path: './dentist/commands/generateDazzlerOptions.html', attributes: []},
{name: 'dentist.commands.generateDazzlerOptions.execute', kind: "functiondeclaration", path: './dentist/commands/generateDazzlerOptions/execute.html', attributes: []},
{name: 'dentist.commands.generateDazzlerOptions.Options', kind: "aliasdeclaration", path: './dentist/commands/generateDazzlerOptions/Options.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions', kind: "module", path: './dentist/commands/maskRepetitiveRegions.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.AlignmentType', kind: "enumdeclaration", path: './dentist/commands/maskRepetitiveRegions/AlignmentType.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.AlignmentType.reads', kind: "enummemberdeclaration", path: './dentist/commands/maskRepetitiveRegions/AlignmentType.html#reads', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.AlignmentType.self', kind: "enummemberdeclaration", path: './dentist/commands/maskRepetitiveRegions/AlignmentType.html#self', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.BadAlignmentCoverageAssessor', kind: "classdeclaration", path: './dentist/commands/maskRepetitiveRegions/BadAlignmentCoverageAssessor.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.BadAlignmentCoverageAssessor.lowerLimit', kind: "variabledeclaration", path: './dentist/commands/maskRepetitiveRegions/BadAlignmentCoverageAssessor.lowerLimit.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.BadAlignmentCoverageAssessor.opCall', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/BadAlignmentCoverageAssessor.opCall.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.BadAlignmentCoverageAssessor.this', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/BadAlignmentCoverageAssessor.this.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.BadAlignmentCoverageAssessor.upperLimit', kind: "variabledeclaration", path: './dentist/commands/maskRepetitiveRegions/BadAlignmentCoverageAssessor.upperLimit.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageChangeRange', kind: "structdeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageChangeRange.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageChangeRange._front', kind: "variabledeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageChangeRange._front.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageChangeRange.AlignmentEvent', kind: "aliasdeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageChangeRange.AlignmentEvent.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageChangeRange.alignmentEvents', kind: "variabledeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageChangeRange.alignmentEvents.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageChangeRange.CoverageChange', kind: "structdeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageChangeRange.CoverageChange.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageChangeRange.CoverageChange.contigId', kind: "variabledeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageChangeRange.CoverageChange.contigId.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageChangeRange.CoverageChange.currentCoverage', kind: "variabledeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageChangeRange.CoverageChange.currentCoverage.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageChangeRange.CoverageChange.hasChanged', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageChangeRange.CoverageChange.hasChanged.html', attributes: ["pure", "nothrow", "const"]},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageChangeRange.CoverageChange.newCoverage', kind: "variabledeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageChangeRange.CoverageChange.newCoverage.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageChangeRange.CoverageChange.position', kind: "variabledeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageChangeRange.CoverageChange.position.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageChangeRange.currentEventIdx', kind: "variabledeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageChangeRange.currentEventIdx.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageChangeRange.empty', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageChangeRange.empty.html', attributes: ["property"]},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageChangeRange.front', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageChangeRange.front.html', attributes: ["property"]},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageChangeRange.popFront', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageChangeRange.popFront.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageChangeRange.save', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageChangeRange.save.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'dentist.commands.maskRepetitiveRegions.coverageChanges', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/coverageChanges.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageZone', kind: "enumdeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageZone.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageZone.high', kind: "enummemberdeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageZone.html#high', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageZone.low', kind: "enummemberdeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageZone.html#low', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.CoverageZone.ok', kind: "enummemberdeclaration", path: './dentist/commands/maskRepetitiveRegions/CoverageZone.html#ok', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.execute', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/execute.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.Masker', kind: "structdeclaration", path: './dentist/commands/maskRepetitiveRegions/Masker.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.Masker.finish', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/Masker.finish.html', attributes: ["pure"]},
{name: 'dentist.commands.maskRepetitiveRegions.Masker.isMasking', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/Masker.isMasking.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.commands.maskRepetitiveRegions.Masker.start', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/Masker.start.html', attributes: ["pure"]},
{name: 'dentist.commands.maskRepetitiveRegions.Options', kind: "aliasdeclaration", path: './dentist/commands/maskRepetitiveRegions/Options.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.RepeatMaskAssessor', kind: "classdeclaration", path: './dentist/commands/maskRepetitiveRegions/RepeatMaskAssessor.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.RepeatMaskAssessor.assessRepeatStructure', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/RepeatMaskAssessor.assessRepeatStructure.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.RepeatMaskAssessor.run', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/RepeatMaskAssessor.run.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.RepeatMaskAssessor.this', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/RepeatMaskAssessor.this.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.RepeatMaskAssessor.alignment', kind: "variabledeclaration", path: './dentist/commands/maskRepetitiveRegions/RepeatMaskAssessor.alignment.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.RepeatMaskAssessor.alignmentHeader', kind: "variabledeclaration", path: './dentist/commands/maskRepetitiveRegions/RepeatMaskAssessor.alignmentHeader.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.RepeatMaskAssessor.alignmentIntervals', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/RepeatMaskAssessor.alignmentIntervals.html', attributes: ["auto"]},
{name: 'dentist.commands.maskRepetitiveRegions.RepeatMaskAssessor.alignmentType', kind: "variabledeclaration", path: './dentist/commands/maskRepetitiveRegions/RepeatMaskAssessor.alignmentType.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.RepeatMaskAssessor.contigIntervals', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/RepeatMaskAssessor.contigIntervals.html', attributes: ["auto"]},
{name: 'dentist.commands.maskRepetitiveRegions.RepeatMaskAssessor.options', kind: "variabledeclaration", path: './dentist/commands/maskRepetitiveRegions/RepeatMaskAssessor.options.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.RepeatMaskAssessor.readInputs', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/RepeatMaskAssessor.readInputs.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.RepeatMaskAssessor.repetitiveRegions', kind: "variabledeclaration", path: './dentist/commands/maskRepetitiveRegions/RepeatMaskAssessor.repetitiveRegions.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.RepeatMaskAssessor.repetitiveRegionsImproper', kind: "variabledeclaration", path: './dentist/commands/maskRepetitiveRegions/RepeatMaskAssessor.repetitiveRegionsImproper.html', attributes: []},
{name: 'dentist.commands.maskRepetitiveRegions.RepeatMaskAssessor.writeRepeatMask', kind: "functiondeclaration", path: './dentist/commands/maskRepetitiveRegions/RepeatMaskAssessor.writeRepeatMask.html', attributes: []},
{name: 'dentist.commands.mergeInsertions', kind: "module", path: './dentist/commands/mergeInsertions.html', attributes: []},
{name: 'dentist.commands.mergeInsertions.ensureSorted', kind: "functiondeclaration", path: './dentist/commands/mergeInsertions/ensureSorted.html', attributes: []},
{name: 'dentist.commands.mergeInsertions.execute', kind: "functiondeclaration", path: './dentist/commands/mergeInsertions/execute.html', attributes: []},
{name: 'dentist.commands.mergeInsertions.Options', kind: "aliasdeclaration", path: './dentist/commands/mergeInsertions/Options.html', attributes: []},
{name: 'dentist.commands.mergeInsertions.readFromFile', kind: "functiondeclaration", path: './dentist/commands/mergeInsertions/readFromFile.html', attributes: []},
{name: 'dentist.commands.mergeMasks', kind: "module", path: './dentist/commands/mergeMasks.html', attributes: []},
{name: 'dentist.commands.mergeMasks.execute', kind: "functiondeclaration", path: './dentist/commands/mergeMasks/execute.html', attributes: []},
{name: 'dentist.commands.mergeMasks.Options', kind: "aliasdeclaration", path: './dentist/commands/mergeMasks/Options.html', attributes: []},
{name: 'dentist.commands.output', kind: "module", path: './dentist/commands/output.html', attributes: []},
{name: 'dentist.commands.output.AGPComponentType', kind: "enumdeclaration", path: './dentist/commands/output/AGPComponentType.html', attributes: []},
{name: 'dentist.commands.output.AGPComponentType.activeFinishing', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPComponentType.html#activeFinishing', attributes: []},
{name: 'dentist.commands.output.AGPComponentType.draftHTG', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPComponentType.html#draftHTG', attributes: []},
{name: 'dentist.commands.output.AGPComponentType.finishedHTG', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPComponentType.html#finishedHTG', attributes: []},
{name: 'dentist.commands.output.AGPComponentType.gapOfUnknownSize', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPComponentType.html#gapOfUnknownSize', attributes: []},
{name: 'dentist.commands.output.AGPComponentType.gapWithSpecifiedSize', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPComponentType.html#gapWithSpecifiedSize', attributes: []},
{name: 'dentist.commands.output.AGPComponentType.otherSequence', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPComponentType.html#otherSequence', attributes: []},
{name: 'dentist.commands.output.AGPComponentType.preDraft', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPComponentType.html#preDraft', attributes: []},
{name: 'dentist.commands.output.AGPComponentType.wgsContig', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPComponentType.html#wgsContig', attributes: []},
{name: 'dentist.commands.output.AGPComponentType.wholeGenomeFinishing', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPComponentType.html#wholeGenomeFinishing', attributes: []},
{name: 'dentist.commands.output.AGPLinkageEvidence', kind: "enumdeclaration", path: './dentist/commands/output/AGPLinkageEvidence.html', attributes: []},
{name: 'dentist.commands.output.AGPLinkageEvidence.alignGenus', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPLinkageEvidence.html#alignGenus', attributes: []},
{name: 'dentist.commands.output.AGPLinkageEvidence.alignTrnscpt', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPLinkageEvidence.html#alignTrnscpt', attributes: []},
{name: 'dentist.commands.output.AGPLinkageEvidence.alignXgenus', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPLinkageEvidence.html#alignXgenus', attributes: []},
{name: 'dentist.commands.output.AGPLinkageEvidence.cloneContig', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPLinkageEvidence.html#cloneContig', attributes: []},
{name: 'dentist.commands.output.AGPLinkageEvidence.map', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPLinkageEvidence.html#map', attributes: []},
{name: 'dentist.commands.output.AGPLinkageEvidence.na', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPLinkageEvidence.html#na', attributes: []},
{name: 'dentist.commands.output.AGPLinkageEvidence.pairedEnds', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPLinkageEvidence.html#pairedEnds', attributes: []},
{name: 'dentist.commands.output.AGPLinkageEvidence.pcr', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPLinkageEvidence.html#pcr', attributes: []},
{name: 'dentist.commands.output.AGPLinkageEvidence.proximityLigation', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPLinkageEvidence.html#proximityLigation', attributes: []},
{name: 'dentist.commands.output.AGPLinkageEvidence.strobe', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPLinkageEvidence.html#strobe', attributes: []},
{name: 'dentist.commands.output.AGPLinkageEvidence.unspecified', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPLinkageEvidence.html#unspecified', attributes: []},
{name: 'dentist.commands.output.AGPLinkageEvidence.withinClone', kind: "enummemberdeclaration", path: './dentist/commands/output/AGPLinkageEvidence.html#withinClone', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter', kind: "classdeclaration", path: './dentist/commands/output/AssemblyWriter.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.agpFile', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.agpFile.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.assemblyGraph', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.assemblyGraph.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.closedGapsBedFile', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.closedGapsBedFile.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.contigAlignments', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.contigAlignments.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.contigAlignmentsCache', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.contigAlignmentsCache.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.contigLengths', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.contigLengths.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.currentContigCoord', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.currentContigCoord.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.currentContigId', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.currentContigId.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.currentScaffold', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.currentScaffold.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.currentScaffoldCoord', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.currentScaffoldCoord.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.currentScaffoldPartId', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.currentScaffoldPartId.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.FastaWriter', kind: "aliasdeclaration", path: './dentist/commands/output/AssemblyWriter.FastaWriter.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.gotoNextContig', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.gotoNextContig.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.incidentEdgesCache', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.incidentEdgesCache.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.logSparseInsertionWalks', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.logSparseInsertionWalks.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.logStatistics', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.logStatistics.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.mergeInsertions', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.mergeInsertions.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.nextContigCoord', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.nextContigCoord.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.nextScaffoldCoord', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.nextScaffoldCoord.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.numReferenceContigs', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.numReferenceContigs.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.resultFile', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.resultFile.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.run', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.run.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.scaffoldStartNodes', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.scaffoldStartNodes.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.skipGaps', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.skipGaps.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.this', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.this.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.writeAGPHeader', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.writeAGPHeader.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.writeNewScaffold', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.writeNewScaffold.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.writer', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.writer.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.appendUnkownJoins', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.appendUnkownJoins.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.buildAssemblyGraph', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.buildAssemblyGraph.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.ensureHighQualityConsensus', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.ensureHighQualityConsensus.html', attributes: ["const"]},
{name: 'dentist.commands.output.AssemblyWriter.init', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.init.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.options', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.options.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.scaffoldHeader', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.scaffoldHeader.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.scaffoldStructure', kind: "variabledeclaration", path: './dentist/commands/output/AssemblyWriter.scaffoldStructure.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.skipShortExtension', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.skipShortExtension.html', attributes: ["const"]},
{name: 'dentist.commands.output.AssemblyWriter.writeExistingContig', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.writeExistingContig.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.writeGap', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.writeGap.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.writeHeader', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.writeHeader.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.writeInsertion', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.writeInsertion.html', attributes: []},
{name: 'dentist.commands.output.AssemblyWriter.writeNewSequenceInsertion', kind: "functiondeclaration", path: './dentist/commands/output/AssemblyWriter.writeNewSequenceInsertion.html', attributes: []},
{name: 'dentist.commands.output.execute', kind: "functiondeclaration", path: './dentist/commands/output/execute.html', attributes: []},
{name: 'dentist.commands.output.fixCropping', kind: "functiondeclaration", path: './dentist/commands/output/fixCropping.html', attributes: []},
{name: 'dentist.commands.output.insertionToSimpleJson', kind: "functiondeclaration", path: './dentist/commands/output/insertionToSimpleJson.html', attributes: []},
{name: 'dentist.commands.output.Options', kind: "aliasdeclaration", path: './dentist/commands/output/Options.html', attributes: []},
{name: 'dentist.commands.output.transferCroppingFromIncidentJoins', kind: "functiondeclaration", path: './dentist/commands/output/transferCroppingFromIncidentJoins.html', attributes: []},
{name: 'dentist.commands.processPileUps', kind: "module", path: './dentist/commands/processPileUps.html', attributes: []},
{name: 'dentist.commands.processPileUps.Enumerated', kind: "aliasdeclaration", path: './dentist/commands/processPileUps/Enumerated.html', attributes: []},
{name: 'dentist.commands.processPileUps.execute', kind: "functiondeclaration", path: './dentist/commands/processPileUps/execute.html', attributes: []},
{name: 'dentist.commands.processPileUps.Options', kind: "aliasdeclaration", path: './dentist/commands/processPileUps/Options.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpsProcessor', kind: "classdeclaration", path: './dentist/commands/processPileUps/PileUpsProcessor.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpsProcessor.insertions', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpsProcessor.insertions.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpsProcessor.repeatMask', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpsProcessor.repeatMask.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpsProcessor.run', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpsProcessor.run.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpsProcessor.this', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpsProcessor.this.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpsProcessor.dropEmptyInsertions', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpsProcessor.dropEmptyInsertions.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpsProcessor.options', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpsProcessor.options.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpsProcessor.pileUps', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpsProcessor.pileUps.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpsProcessor.processPileUp', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpsProcessor.processPileUp.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpsProcessor.readPileUps', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpsProcessor.readPileUps.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpsProcessor.readRepeatMask', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpsProcessor.readRepeatMask.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpsProcessor.writeInsertions', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpsProcessor.writeInsertions.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor', kind: "classdeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.options', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.options.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.originalRepeatMask', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.originalRepeatMask.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.repeatMask', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.repeatMask.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.run', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.run.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.this', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.this.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.adjustRepeatMaskToMakeMappingPossible', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.adjustRepeatMaskToMakeMappingPossible.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.alignConsensusToFlankingContigs', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.alignConsensusToFlankingContigs.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.allowedReferenceReadIds', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.allowedReferenceReadIds.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.bestReferenceReadIndex', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.bestReferenceReadIndex.html', attributes: ["pure", "const"]},
{name: 'dentist.commands.processPileUps.PileUpProcessor.computeConsensus', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.computeConsensus.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.computeQVs', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.computeQVs.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.consensusDb', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.consensusDb.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.crop', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.crop.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.croppedDb', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.croppedDb.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.croppingPositions', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.croppingPositions.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.croppingSeeds', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.croppingSeeds.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.findReferenceReadCandidates', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.findReferenceReadCandidates.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.getInsertionAlignment', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.getInsertionAlignment.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.getInsertionSequence', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.getInsertionSequence.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.insertion', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.insertion.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.insertionAlignment', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.insertionAlignment.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.insertionSequence', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.insertionSequence.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.makeInsertion', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.makeInsertion.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.pileUp', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.pileUp.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.pileUpAlignment', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.pileUpAlignment.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.pileUpContigs', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.pileUpContigs.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.pileUpId', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.pileUpId.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.pileUpIdMapping', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.pileUpIdMapping.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.postConsensusAlignment', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.postConsensusAlignment.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.processPileUp', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.processPileUp.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.reduceRepeatMaskToFlankingContigs', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.reduceRepeatMaskToFlankingContigs.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.referenceRead', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.referenceRead.html', attributes: ["property", "inout"]},
{name: 'dentist.commands.processPileUps.PileUpProcessor.referenceReadCandidateIndices', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.referenceReadCandidateIndices.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.referenceReadIdx', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.referenceReadIdx.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.referenceReadTry', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.referenceReadTry.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.resultInsertion', kind: "variabledeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.resultInsertion.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.selectAllowedReferenceReadIds', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.selectAllowedReferenceReadIds.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.selectReferenceRead', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.selectReferenceRead.html', attributes: []},
{name: 'dentist.commands.processPileUps.PileUpProcessor.shouldProcessSingularPileUp', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.shouldProcessSingularPileUp.html', attributes: ["nothrow", "const"]},
{name: 'dentist.commands.processPileUps.PileUpProcessor.shouldSkipSmallPileUp', kind: "functiondeclaration", path: './dentist/commands/processPileUps/PileUpProcessor.shouldSkipSmallPileUp.html', attributes: ["nothrow", "const"]},
{name: 'dentist.commands.propagateMask', kind: "module", path: './dentist/commands/propagateMask.html', attributes: []},
{name: 'dentist.commands.propagateMask.execute', kind: "functiondeclaration", path: './dentist/commands/propagateMask/execute.html', attributes: []},
{name: 'dentist.commands.propagateMask.MaskPropagator', kind: "classdeclaration", path: './dentist/commands/propagateMask/MaskPropagator.html', attributes: []},
{name: 'dentist.commands.propagateMask.MaskPropagator.destinationDb', kind: "variabledeclaration", path: './dentist/commands/propagateMask/MaskPropagator.destinationDb.html', attributes: []},
{name: 'dentist.commands.propagateMask.MaskPropagator.getIntersectingIntervals', kind: "functiondeclaration", path: './dentist/commands/propagateMask/MaskPropagator.getIntersectingIntervals.html', attributes: ["static"]},
{name: 'dentist.commands.propagateMask.MaskPropagator.getIntersectionIntervals', kind: "functiondeclaration", path: './dentist/commands/propagateMask/MaskPropagator.getIntersectionIntervals.html', attributes: ["auto", "static"]},
{name: 'dentist.commands.propagateMask.MaskPropagator.getLocalAlignmentsByContig', kind: "functiondeclaration", path: './dentist/commands/propagateMask/MaskPropagator.getLocalAlignmentsByContig.html', attributes: ["auto"]},
{name: 'dentist.commands.propagateMask.MaskPropagator.init', kind: "functiondeclaration", path: './dentist/commands/propagateMask/MaskPropagator.init.html', attributes: []},
{name: 'dentist.commands.propagateMask.MaskPropagator.inputMask', kind: "variabledeclaration", path: './dentist/commands/propagateMask/MaskPropagator.inputMask.html', attributes: []},
{name: 'dentist.commands.propagateMask.MaskPropagator.mergeMasks', kind: "functiondeclaration", path: './dentist/commands/propagateMask/MaskPropagator.mergeMasks.html', attributes: []},
{name: 'dentist.commands.propagateMask.MaskPropagator.numSourceContigs', kind: "variabledeclaration", path: './dentist/commands/propagateMask/MaskPropagator.numSourceContigs.html', attributes: []},
{name: 'dentist.commands.propagateMask.MaskPropagator.options', kind: "variabledeclaration", path: './dentist/commands/propagateMask/MaskPropagator.options.html', attributes: []},
{name: 'dentist.commands.propagateMask.MaskPropagator.outputMask', kind: "variabledeclaration", path: './dentist/commands/propagateMask/MaskPropagator.outputMask.html', attributes: []},
{name: 'dentist.commands.propagateMask.MaskPropagator.outputMaskByContigs', kind: "variabledeclaration", path: './dentist/commands/propagateMask/MaskPropagator.outputMaskByContigs.html', attributes: []},
{name: 'dentist.commands.propagateMask.MaskPropagator.propagateIntervals', kind: "functiondeclaration", path: './dentist/commands/propagateMask/MaskPropagator.propagateIntervals.html', attributes: []},
{name: 'dentist.commands.propagateMask.MaskPropagator.propagateMaskPerContig', kind: "functiondeclaration", path: './dentist/commands/propagateMask/MaskPropagator.propagateMaskPerContig.html', attributes: ["static"]},
{name: 'dentist.commands.propagateMask.MaskPropagator.readMasks', kind: "functiondeclaration", path: './dentist/commands/propagateMask/MaskPropagator.readMasks.html', attributes: []},
{name: 'dentist.commands.propagateMask.MaskPropagator.run', kind: "functiondeclaration", path: './dentist/commands/propagateMask/MaskPropagator.run.html', attributes: []},
{name: 'dentist.commands.propagateMask.MaskPropagator.this', kind: "functiondeclaration", path: './dentist/commands/propagateMask/MaskPropagator.this.html', attributes: []},
{name: 'dentist.commands.propagateMask.Options', kind: "aliasdeclaration", path: './dentist/commands/propagateMask/Options.html', attributes: []},
{name: 'dentist.commands.propagateMask.QueryInterval', kind: "aliasdeclaration", path: './dentist/commands/propagateMask/QueryInterval.html', attributes: []},
{name: 'dentist.commands.propagateMask.QueryRegion', kind: "aliasdeclaration", path: './dentist/commands/propagateMask/QueryRegion.html', attributes: []},
{name: 'dentist.commands.showInsertions', kind: "module", path: './dentist/commands/showInsertions.html', attributes: []},
{name: 'dentist.commands.showInsertions.execute', kind: "functiondeclaration", path: './dentist/commands/showInsertions/execute.html', attributes: []},
{name: 'dentist.commands.showInsertions.Options', kind: "aliasdeclaration", path: './dentist/commands/showInsertions/Options.html', attributes: []},
{name: 'dentist.commands.showInsertions.Stats', kind: "structdeclaration", path: './dentist/commands/showInsertions/Stats.html', attributes: []},
{name: 'dentist.commands.showInsertions.Stats.columnWidth', kind: "functiondeclaration", path: './dentist/commands/showInsertions/Stats.columnWidth.html', attributes: ["nothrow", "const"]},
{name: 'dentist.commands.showInsertions.Stats.numCompressedBaseQuads', kind: "variabledeclaration", path: './dentist/commands/showInsertions/Stats.numCompressedBaseQuads.html', attributes: []},
{name: 'dentist.commands.showInsertions.Stats.numInsertions', kind: "variabledeclaration", path: './dentist/commands/showInsertions/Stats.numInsertions.html', attributes: []},
{name: 'dentist.commands.showInsertions.Stats.numLocalAlignments', kind: "variabledeclaration", path: './dentist/commands/showInsertions/Stats.numLocalAlignments.html', attributes: []},
{name: 'dentist.commands.showInsertions.Stats.numOverlaps', kind: "variabledeclaration", path: './dentist/commands/showInsertions/Stats.numOverlaps.html', attributes: []},
{name: 'dentist.commands.showInsertions.Stats.numReadIds', kind: "variabledeclaration", path: './dentist/commands/showInsertions/Stats.numReadIds.html', attributes: []},
{name: 'dentist.commands.showInsertions.Stats.numTracePoints', kind: "variabledeclaration", path: './dentist/commands/showInsertions/Stats.numTracePoints.html', attributes: []},
{name: 'dentist.commands.showInsertions.Stats.totalDbSize', kind: "variabledeclaration", path: './dentist/commands/showInsertions/Stats.totalDbSize.html', attributes: []},
{name: 'dentist.commands.showInsertions.writeTabular', kind: "functiondeclaration", path: './dentist/commands/showInsertions/writeTabular.html', attributes: []},
{name: 'dentist.commands.showMask', kind: "module", path: './dentist/commands/showMask.html', attributes: []},
{name: 'dentist.commands.showMask.execute', kind: "functiondeclaration", path: './dentist/commands/showMask/execute.html', attributes: []},
{name: 'dentist.commands.showMask.Options', kind: "aliasdeclaration", path: './dentist/commands/showMask/Options.html', attributes: []},
{name: 'dentist.commands.showMask.Stats', kind: "structdeclaration", path: './dentist/commands/showMask/Stats.html', attributes: []},
{name: 'dentist.commands.showMask.Stats.columnWidth', kind: "functiondeclaration", path: './dentist/commands/showMask/Stats.columnWidth.html', attributes: ["nothrow", "const"]},
{name: 'dentist.commands.showMask.Stats.name', kind: "variabledeclaration", path: './dentist/commands/showMask/Stats.name.html', attributes: []},
{name: 'dentist.commands.showMask.Stats.numIntervals', kind: "variabledeclaration", path: './dentist/commands/showMask/Stats.numIntervals.html', attributes: []},
{name: 'dentist.commands.showMask.Stats.numMaskedBases', kind: "variabledeclaration", path: './dentist/commands/showMask/Stats.numMaskedBases.html', attributes: []},
{name: 'dentist.commands.showMask.statsFor', kind: "functiondeclaration", path: './dentist/commands/showMask/statsFor.html', attributes: []},
{name: 'dentist.commands.showMask.writeTabular', kind: "functiondeclaration", path: './dentist/commands/showMask/writeTabular.html', attributes: []},
{name: 'dentist.commands.showPileUps', kind: "module", path: './dentist/commands/showPileUps.html', attributes: []},
{name: 'dentist.commands.showPileUps.execute', kind: "functiondeclaration", path: './dentist/commands/showPileUps/execute.html', attributes: []},
{name: 'dentist.commands.showPileUps.Options', kind: "aliasdeclaration", path: './dentist/commands/showPileUps/Options.html', attributes: []},
{name: 'dentist.commands.showPileUps.Stats', kind: "structdeclaration", path: './dentist/commands/showPileUps/Stats.html', attributes: []},
{name: 'dentist.commands.showPileUps.Stats.columnWidth', kind: "functiondeclaration", path: './dentist/commands/showPileUps/Stats.columnWidth.html', attributes: ["nothrow", "const"]},
{name: 'dentist.commands.showPileUps.Stats.numLocalAlignments', kind: "variabledeclaration", path: './dentist/commands/showPileUps/Stats.numLocalAlignments.html', attributes: []},
{name: 'dentist.commands.showPileUps.Stats.numPileUps', kind: "variabledeclaration", path: './dentist/commands/showPileUps/Stats.numPileUps.html', attributes: []},
{name: 'dentist.commands.showPileUps.Stats.numReadAlignments', kind: "variabledeclaration", path: './dentist/commands/showPileUps/Stats.numReadAlignments.html', attributes: []},
{name: 'dentist.commands.showPileUps.Stats.numSeededAlignments', kind: "variabledeclaration", path: './dentist/commands/showPileUps/Stats.numSeededAlignments.html', attributes: []},
{name: 'dentist.commands.showPileUps.Stats.numTracePoints', kind: "variabledeclaration", path: './dentist/commands/showPileUps/Stats.numTracePoints.html', attributes: []},
{name: 'dentist.commands.showPileUps.Stats.totalDbSize', kind: "variabledeclaration", path: './dentist/commands/showPileUps/Stats.totalDbSize.html', attributes: []},
{name: 'dentist.commands.showPileUps.writeTabular', kind: "functiondeclaration", path: './dentist/commands/showPileUps/writeTabular.html', attributes: []},
{name: 'dentist.commands.translateCoords', kind: "module", path: './dentist/commands/translateCoords.html', attributes: []},
{name: 'dentist.commands.translateCoords.execute', kind: "functiondeclaration", path: './dentist/commands/translateCoords/execute.html', attributes: []},
{name: 'dentist.commands.translateCoords.Options', kind: "aliasdeclaration", path: './dentist/commands/translateCoords/Options.html', attributes: []},
{name: 'dentist.commands.validateConfig', kind: "module", path: './dentist/commands/validateConfig.html', attributes: []},
{name: 'dentist.commands.validateConfig.execute', kind: "functiondeclaration", path: './dentist/commands/validateConfig/execute.html', attributes: []},
{name: 'dentist.commands.validateConfig.Options', kind: "aliasdeclaration", path: './dentist/commands/validateConfig/Options.html', attributes: []},
{name: 'dentist.commands.validateRegions', kind: "module", path: './dentist/commands/validateRegions.html', attributes: []},
{name: 'dentist.commands.validateRegions.execute', kind: "functiondeclaration", path: './dentist/commands/validateRegions/execute.html', attributes: []},
{name: 'dentist.commands.validateRegions.Options', kind: "aliasdeclaration", path: './dentist/commands/validateRegions/Options.html', attributes: []},
{name: 'dentist.common.alignments.base', kind: "module", path: './dentist/common/alignments/base.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentChain', kind: "structdeclaration", path: './dentist/common/alignments/base/AlignmentChain.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentChain.averageErrorRate', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.averageErrorRate.html', attributes: ["pure", "property", "safe", "const"]},
{name: 'dentist.common.alignments.base.AlignmentChain.beginsWith', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.beginsWith.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.common.alignments.base.AlignmentChain.cartoon', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.cartoon.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentChain.compareIds', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.compareIds.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'dentist.common.alignments.base.AlignmentChain.completelyCovers', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.completelyCovers.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.common.alignments.base.AlignmentChain.contigA', kind: "variabledeclaration", path: './dentist/common/alignments/base/AlignmentChain.contigA.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentChain.contigB', kind: "variabledeclaration", path: './dentist/common/alignments/base/AlignmentChain.contigB.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentChain.coveredBases', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.coveredBases.html', attributes: ["const", "pure", "property", "safe"]},
{name: 'dentist.common.alignments.base.AlignmentChain.cropToTracePoint', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.cropToTracePoint.html', attributes: ["pure"]},
{name: 'dentist.common.alignments.base.AlignmentChain.disabledInstance', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.disabledInstance.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "safe"]},
{name: 'dentist.common.alignments.base.AlignmentChain.disableIf', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.disableIf.html', attributes: ["pure", "safe"]},
{name: 'dentist.common.alignments.base.AlignmentChain.endsWith', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.endsWith.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.common.alignments.base.AlignmentChain.first', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.first.html', attributes: ["pure", "nothrow", "ref", "property", "safe", "const"]},
{name: 'dentist.common.alignments.base.AlignmentChain.flags', kind: "variabledeclaration", path: './dentist/common/alignments/base/AlignmentChain.flags.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentChain.fromJson', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.fromJson.html', attributes: ["static", "safe"]},
{name: 'dentist.common.alignments.base.AlignmentChain.id', kind: "variabledeclaration", path: './dentist/common/alignments/base/AlignmentChain.id.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentChain.isFullyContained', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.isFullyContained.html', attributes: ["safe", "const"]},
{name: 'dentist.common.alignments.base.AlignmentChain.isProper', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.isProper.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'dentist.common.alignments.base.AlignmentChain.last', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.last.html', attributes: ["pure", "nothrow", "ref", "property", "safe", "const"]},
{name: 'dentist.common.alignments.base.AlignmentChain.LocalAlignment', kind: "structdeclaration", path: './dentist/common/alignments/base/AlignmentChain.LocalAlignment.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentChain.LocalAlignment.contigA', kind: "variabledeclaration", path: './dentist/common/alignments/base/AlignmentChain.LocalAlignment.contigA.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentChain.LocalAlignment.contigB', kind: "variabledeclaration", path: './dentist/common/alignments/base/AlignmentChain.LocalAlignment.contigB.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentChain.LocalAlignment.cropToTracePoint', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.LocalAlignment.cropToTracePoint.html', attributes: ["pure"]},
{name: 'dentist.common.alignments.base.AlignmentChain.LocalAlignment.getTrace', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.LocalAlignment.getTrace.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'dentist.common.alignments.base.AlignmentChain.LocalAlignment.Locus', kind: "aliasdeclaration", path: './dentist/common/alignments/base/AlignmentChain.LocalAlignment.Locus.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentChain.LocalAlignment.numDiffs', kind: "variabledeclaration", path: './dentist/common/alignments/base/AlignmentChain.LocalAlignment.numDiffs.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentChain.LocalAlignment.TracePoint', kind: "aliasdeclaration", path: './dentist/common/alignments/base/AlignmentChain.LocalAlignment.TracePoint.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentChain.LocalAlignment.tracePoints', kind: "variabledeclaration", path: './dentist/common/alignments/base/AlignmentChain.LocalAlignment.tracePoints.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentChain.LocalAlignment.tracePointsUpTo', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.LocalAlignment.tracePointsUpTo.html', attributes: ["auto", "const", "pure", "nothrow"]},
{name: 'dentist.common.alignments.base.AlignmentChain.LocalAlignment.translateTracePoint', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.LocalAlignment.translateTracePoint.html', attributes: ["const", "pure"]},
{name: 'dentist.common.alignments.base.AlignmentChain.localAlignments', kind: "variabledeclaration", path: './dentist/common/alignments/base/AlignmentChain.localAlignments.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentChain.opCmp', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.opCmp.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'dentist.common.alignments.base.AlignmentChain.toFlatLocalAlignments', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.toFlatLocalAlignments.html', attributes: ["auto", "pure", "nothrow", "safe"]},
{name: 'dentist.common.alignments.base.AlignmentChain.toJson', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.toJson.html', attributes: ["safe", "const"]},
{name: 'dentist.common.alignments.base.AlignmentChain.totalDiffs', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.totalDiffs.html', attributes: ["pure", "property", "safe", "const"]},
{name: 'dentist.common.alignments.base.AlignmentChain.tracePointDistance', kind: "variabledeclaration", path: './dentist/common/alignments/base/AlignmentChain.tracePointDistance.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentChain.translateTracePoint', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.translateTracePoint.html', attributes: ["const", "pure"]},
{name: 'dentist.common.alignments.base.AlignmentChain.coveringLocalAlignmentIndex', kind: "functiondeclaration", path: './dentist/common/alignments/base/AlignmentChain.coveringLocalAlignmentIndex.html', attributes: ["const", "pure"]},
{name: 'dentist.common.alignments.base.alignmentCoverage', kind: "functiondeclaration", path: './dentist/common/alignments/base/alignmentCoverage.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentLocationSeed', kind: "enumdeclaration", path: './dentist/common/alignments/base/AlignmentLocationSeed.html', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentLocationSeed.back', kind: "enummemberdeclaration", path: './dentist/common/alignments/base/AlignmentLocationSeed.html#back', attributes: []},
{name: 'dentist.common.alignments.base.AlignmentLocationSeed.front', kind: "enummemberdeclaration", path: './dentist/common/alignments/base/AlignmentLocationSeed.html#front', attributes: []},
{name: 'dentist.common.alignments.base.arithmetic_t', kind: "aliasdeclaration", path: './dentist/common/alignments/base/arithmetic_t.html', attributes: []},
{name: 'dentist.common.alignments.base.cmpIdsAndComplement', kind: "functiondeclaration", path: './dentist/common/alignments/base/cmpIdsAndComplement.html', attributes: []},
{name: 'dentist.common.alignments.base.Contig', kind: "structdeclaration", path: './dentist/common/alignments/base/Contig.html', attributes: []},
{name: 'dentist.common.alignments.base.Contig.id', kind: "variabledeclaration", path: './dentist/common/alignments/base/Contig.id.html', attributes: []},
{name: 'dentist.common.alignments.base.Contig.length', kind: "variabledeclaration", path: './dentist/common/alignments/base/Contig.length.html', attributes: []},
{name: 'dentist.common.alignments.base.contigs', kind: "functiondeclaration", path: './dentist/common/alignments/base/contigs.html', attributes: []},
{name: 'dentist.common.alignments.base.coord_t', kind: "aliasdeclaration", path: './dentist/common/alignments/base/coord_t.html', attributes: []},
{name: 'dentist.common.alignments.base.diff_t', kind: "aliasdeclaration", path: './dentist/common/alignments/base/diff_t.html', attributes: []},
{name: 'dentist.common.alignments.base.equalIdsRange', kind: "functiondeclaration", path: './dentist/common/alignments/base/equalIdsRange.html', attributes: ["auto"]},
{name: 'dentist.common.alignments.base.Flag', kind: "enumdeclaration", path: './dentist/common/alignments/base/Flag.html', attributes: []},
{name: 'dentist.common.alignments.base.Flag.alternateChain', kind: "enummemberdeclaration", path: './dentist/common/alignments/base/Flag.html#alternateChain', attributes: []},
{name: 'dentist.common.alignments.base.Flag.chainContinuation', kind: "enummemberdeclaration", path: './dentist/common/alignments/base/Flag.html#chainContinuation', attributes: []},
{name: 'dentist.common.alignments.base.Flag.complement', kind: "enummemberdeclaration", path: './dentist/common/alignments/base/Flag.html#complement', attributes: []},
{name: 'dentist.common.alignments.base.Flag.disabled', kind: "enummemberdeclaration", path: './dentist/common/alignments/base/Flag.html#disabled', attributes: []},
{name: 'dentist.common.alignments.base.Flag.unchained', kind: "enummemberdeclaration", path: './dentist/common/alignments/base/Flag.html#unchained', attributes: []},
{name: 'dentist.common.alignments.base.Flags', kind: "aliasdeclaration", path: './dentist/common/alignments/base/Flags.html', attributes: []},
{name: 'dentist.common.alignments.base.FlatLocalAlignment', kind: "structdeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.html', attributes: []},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.averageErrorRate', kind: "functiondeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.averageErrorRate.html', attributes: ["pure", "property", "const"]},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.cartoon', kind: "functiondeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.cartoon.html', attributes: []},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.contigA', kind: "variabledeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.contigA.html', attributes: []},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.contigB', kind: "variabledeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.contigB.html', attributes: []},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.disableIf', kind: "functiondeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.disableIf.html', attributes: []},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.flags', kind: "variabledeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.flags.html', attributes: []},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.FlatLocus', kind: "structdeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.FlatLocus.html', attributes: []},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.FlatLocus.begin', kind: "variabledeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.FlatLocus.begin.html', attributes: []},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.FlatLocus.beginsWithin', kind: "functiondeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.FlatLocus.beginsWithin.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.FlatLocus.boundedBegin', kind: "functiondeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.FlatLocus.boundedBegin.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.FlatLocus.boundedEnd', kind: "functiondeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.FlatLocus.boundedEnd.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.FlatLocus.contig', kind: "functiondeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.FlatLocus.contig.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.FlatLocus.end', kind: "variabledeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.FlatLocus.end.html', attributes: []},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.FlatLocus.endsWithin', kind: "functiondeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.FlatLocus.endsWithin.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.FlatLocus.id', kind: "variabledeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.FlatLocus.id.html', attributes: []},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.FlatLocus.isFullyContained', kind: "functiondeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.FlatLocus.isFullyContained.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.FlatLocus.length', kind: "variabledeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.FlatLocus.length.html', attributes: []},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.FlatLocus.locus', kind: "functiondeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.FlatLocus.locus.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.FlatLocus.mappedLength', kind: "functiondeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.FlatLocus.mappedLength.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.id', kind: "variabledeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.id.html', attributes: []},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.numDiffs', kind: "functiondeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.numDiffs.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.opCmp', kind: "functiondeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.opCmp.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.trace', kind: "functiondeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.trace.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.tracePointDistance', kind: "variabledeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.tracePointDistance.html', attributes: []},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.tracePoints', kind: "variabledeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.tracePoints.html', attributes: []},
{name: 'dentist.common.alignments.base.FlatLocalAlignment.translateTracePoint', kind: "functiondeclaration", path: './dentist/common/alignments/base/FlatLocalAlignment.translateTracePoint.html', attributes: ["const", "pure"]},
{name: 'dentist.common.alignments.base.getAlignmentRefs', kind: "functiondeclaration", path: './dentist/common/alignments/base/getAlignmentRefs.html', attributes: ["pure"]},
{name: 'dentist.common.alignments.base.getType', kind: "functiondeclaration", path: './dentist/common/alignments/base/getType.html', attributes: ["pure"]},
{name: 'dentist.common.alignments.base.haveEqualIds', kind: "functiondeclaration", path: './dentist/common/alignments/base/haveEqualIds.html', attributes: ["auto", "pure", "nothrow", "safe"]},
{name: 'dentist.common.alignments.base.id_t', kind: "aliasdeclaration", path: './dentist/common/alignments/base/id_t.html', attributes: []},
{name: 'dentist.common.alignments.base.idsPred', kind: "functiondeclaration", path: './dentist/common/alignments/base/idsPred.html', attributes: []},
{name: 'dentist.common.alignments.base.isAntiParallel', kind: "functiondeclaration", path: './dentist/common/alignments/base/isAntiParallel.html', attributes: ["auto", "pure"]},
{name: 'dentist.common.alignments.base.isBefore', kind: "functiondeclaration", path: './dentist/common/alignments/base/isBefore.html', attributes: ["pure"]},
{name: 'dentist.common.alignments.base.isExtension', kind: "functiondeclaration", path: './dentist/common/alignments/base/isExtension.html', attributes: ["pure"]},
{name: 'dentist.common.alignments.base.isGap', kind: "functiondeclaration", path: './dentist/common/alignments/base/isGap.html', attributes: ["pure"]},
{name: 'dentist.common.alignments.base.isParallel', kind: "functiondeclaration", path: './dentist/common/alignments/base/isParallel.html', attributes: ["auto", "pure"]},
{name: 'dentist.common.alignments.base.isValid', kind: "functiondeclaration", path: './dentist/common/alignments/base/isValid.html', attributes: ["pure"]},
{name: 'dentist.common.alignments.base.Locus', kind: "structdeclaration", path: './dentist/common/alignments/base/Locus.html', attributes: []},
{name: 'dentist.common.alignments.base.Locus.begin', kind: "variabledeclaration", path: './dentist/common/alignments/base/Locus.begin.html', attributes: []},
{name: 'dentist.common.alignments.base.Locus.end', kind: "variabledeclaration", path: './dentist/common/alignments/base/Locus.end.html', attributes: []},
{name: 'dentist.common.alignments.base.Locus.length', kind: "functiondeclaration", path: './dentist/common/alignments/base/Locus.length.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.alignments.base.makeJoin', kind: "functiondeclaration", path: './dentist/common/alignments/base/makeJoin.html', attributes: []},
{name: 'dentist.common.alignments.base.PileUp', kind: "aliasdeclaration", path: './dentist/common/alignments/base/PileUp.html', attributes: []},
{name: 'dentist.common.alignments.base.pileUpToSimpleJson', kind: "functiondeclaration", path: './dentist/common/alignments/base/pileUpToSimpleJson.html', attributes: []},
{name: 'dentist.common.alignments.base.ReadAlignment', kind: "structdeclaration", path: './dentist/common/alignments/base/ReadAlignment.html', attributes: []},
{name: 'dentist.common.alignments.base.ReadAlignment.getInOrder', kind: "functiondeclaration", path: './dentist/common/alignments/base/ReadAlignment.getInOrder.html', attributes: ["pure"]},
{name: 'dentist.common.alignments.base.ReadAlignment.isAntiParallel', kind: "functiondeclaration", path: './dentist/common/alignments/base/ReadAlignment.isAntiParallel.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.alignments.base.ReadAlignment.isBackExtension', kind: "functiondeclaration", path: './dentist/common/alignments/base/ReadAlignment.isBackExtension.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.alignments.base.ReadAlignment.isExtension', kind: "functiondeclaration", path: './dentist/common/alignments/base/ReadAlignment.isExtension.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.alignments.base.ReadAlignment.isFrontExtension', kind: "functiondeclaration", path: './dentist/common/alignments/base/ReadAlignment.isFrontExtension.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.alignments.base.ReadAlignment.isGap', kind: "functiondeclaration", path: './dentist/common/alignments/base/ReadAlignment.isGap.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.alignments.base.ReadAlignment.isInOrder', kind: "functiondeclaration", path: './dentist/common/alignments/base/ReadAlignment.isInOrder.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.alignments.base.ReadAlignment.isParallel', kind: "functiondeclaration", path: './dentist/common/alignments/base/ReadAlignment.isParallel.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.alignments.base.ReadAlignment.isValid', kind: "functiondeclaration", path: './dentist/common/alignments/base/ReadAlignment.isValid.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.alignments.base.ReadAlignment.length', kind: "functiondeclaration", path: './dentist/common/alignments/base/ReadAlignment.length.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.alignments.base.ReadAlignment.opDollar', kind: "functiondeclaration", path: './dentist/common/alignments/base/ReadAlignment.opDollar.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.alignments.base.ReadAlignment.opIndex', kind: "functiondeclaration", path: './dentist/common/alignments/base/ReadAlignment.opIndex.html', attributes: ["pure", "nothrow", "inout"]},
{name: 'dentist.common.alignments.base.ReadAlignment.this', kind: "functiondeclaration", path: './dentist/common/alignments/base/ReadAlignment.this.html', attributes: []},
{name: 'dentist.common.alignments.base.ReadAlignment.type', kind: "functiondeclaration", path: './dentist/common/alignments/base/ReadAlignment.type.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.alignments.base.ReadAlignmentType', kind: "enumdeclaration", path: './dentist/common/alignments/base/ReadAlignmentType.html', attributes: []},
{name: 'dentist.common.alignments.base.ReadAlignmentType.back', kind: "enummemberdeclaration", path: './dentist/common/alignments/base/ReadAlignmentType.html#back', attributes: []},
{name: 'dentist.common.alignments.base.ReadAlignmentType.front', kind: "enummemberdeclaration", path: './dentist/common/alignments/base/ReadAlignmentType.html#front', attributes: []},
{name: 'dentist.common.alignments.base.ReadAlignmentType.gap', kind: "enummemberdeclaration", path: './dentist/common/alignments/base/ReadAlignmentType.html#gap', attributes: []},
{name: 'dentist.common.alignments.base.SeededAlignment', kind: "structdeclaration", path: './dentist/common/alignments/base/SeededAlignment.html', attributes: []},
{name: 'dentist.common.alignments.base.SeededAlignment.alignment', kind: "variabledeclaration", path: './dentist/common/alignments/base/SeededAlignment.alignment.html', attributes: []},
{name: 'dentist.common.alignments.base.SeededAlignment.from', kind: "functiondeclaration", path: './dentist/common/alignments/base/SeededAlignment.from.html', attributes: ["auto", "static", "pure", "nothrow", "safe"]},
{name: 'dentist.common.alignments.base.SeededAlignment.opCmp', kind: "functiondeclaration", path: './dentist/common/alignments/base/SeededAlignment.opCmp.html', attributes: ["pure", "nothrow", "const"]},
{name: 'dentist.common.alignments.base.SeededAlignment.seed', kind: "variabledeclaration", path: './dentist/common/alignments/base/SeededAlignment.seed.html', attributes: []},
{name: 'dentist.common.alignments.base.toChar', kind: "functiondeclaration", path: './dentist/common/alignments/base/toChar.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.common.alignments.base.Trace', kind: "structdeclaration", path: './dentist/common/alignments/base/Trace.html', attributes: []},
{name: 'dentist.common.alignments.base.Trace.contigA', kind: "variabledeclaration", path: './dentist/common/alignments/base/Trace.contigA.html', attributes: []},
{name: 'dentist.common.alignments.base.Trace.contigB', kind: "variabledeclaration", path: './dentist/common/alignments/base/Trace.contigB.html', attributes: []},
{name: 'dentist.common.alignments.base.Trace.tracePointDistance', kind: "variabledeclaration", path: './dentist/common/alignments/base/Trace.tracePointDistance.html', attributes: []},
{name: 'dentist.common.alignments.base.Trace.tracePoints', kind: "variabledeclaration", path: './dentist/common/alignments/base/Trace.tracePoints.html', attributes: []},
{name: 'dentist.common.alignments.base.Trace.tracePointsUpTo', kind: "functiondeclaration", path: './dentist/common/alignments/base/Trace.tracePointsUpTo.html', attributes: ["auto", "const", "pure", "nothrow"]},
{name: 'dentist.common.alignments.base.Trace.translateTracePoint', kind: "functiondeclaration", path: './dentist/common/alignments/base/Trace.translateTracePoint.html', attributes: ["const", "pure"]},
{name: 'dentist.common.alignments.base.trace_point_t', kind: "aliasdeclaration", path: './dentist/common/alignments/base/trace_point_t.html', attributes: []},
{name: 'dentist.common.alignments.base.TracePoint', kind: "structdeclaration", path: './dentist/common/alignments/base/TracePoint.html', attributes: []},
{name: 'dentist.common.alignments.base.TracePoint.numBasePairs', kind: "variabledeclaration", path: './dentist/common/alignments/base/TracePoint.numBasePairs.html', attributes: []},
{name: 'dentist.common.alignments.base.TracePoint.numDiffs', kind: "variabledeclaration", path: './dentist/common/alignments/base/TracePoint.numDiffs.html', attributes: []},
{name: 'dentist.common.alignments.base.TranslatedTracePoint', kind: "structdeclaration", path: './dentist/common/alignments/base/TranslatedTracePoint.html', attributes: []},
{name: 'dentist.common.alignments.base.TranslatedTracePoint.contigA', kind: "variabledeclaration", path: './dentist/common/alignments/base/TranslatedTracePoint.contigA.html', attributes: []},
{name: 'dentist.common.alignments.base.TranslatedTracePoint.contigB', kind: "variabledeclaration", path: './dentist/common/alignments/base/TranslatedTracePoint.contigB.html', attributes: []},
{name: 'dentist.common.alignments.base.isBackExtension', kind: "functiondeclaration", path: './dentist/common/alignments/base/isBackExtension.html', attributes: ["pure"]},
{name: 'dentist.common.alignments.base.isFrontExtension', kind: "functiondeclaration", path: './dentist/common/alignments/base/isFrontExtension.html', attributes: ["pure"]},
{name: 'dentist.common.alignments.chaining', kind: "module", path: './dentist/common/alignments/chaining.html', attributes: []},
{name: 'dentist.common.alignments.chaining.alignmentScore', kind: "functiondeclaration", path: './dentist/common/alignments/chaining/alignmentScore.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.common.alignments.chaining.areChainable', kind: "functiondeclaration", path: './dentist/common/alignments/chaining/areChainable.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.common.alignments.chaining.ChainingOptions', kind: "structdeclaration", path: './dentist/common/alignments/chaining/ChainingOptions.html', attributes: []},
{name: 'dentist.common.alignments.chaining.ChainingOptions.effectiveMinScore', kind: "functiondeclaration", path: './dentist/common/alignments/chaining/ChainingOptions.effectiveMinScore.html', attributes: ["pure", "safe", "const"]},
{name: 'dentist.common.alignments.chaining.ChainingOptions.maxChainGapBps', kind: "variabledeclaration", path: './dentist/common/alignments/chaining/ChainingOptions.maxChainGapBps.html', attributes: []},
{name: 'dentist.common.alignments.chaining.ChainingOptions.maxIndelBps', kind: "variabledeclaration", path: './dentist/common/alignments/chaining/ChainingOptions.maxIndelBps.html', attributes: []},
{name: 'dentist.common.alignments.chaining.ChainingOptions.maxRelativeOverlap', kind: "variabledeclaration", path: './dentist/common/alignments/chaining/ChainingOptions.maxRelativeOverlap.html', attributes: []},
{name: 'dentist.common.alignments.chaining.ChainingOptions.minRelativeScore', kind: "variabledeclaration", path: './dentist/common/alignments/chaining/ChainingOptions.minRelativeScore.html', attributes: []},
{name: 'dentist.common.alignments.chaining.ChainingOptions.minScore', kind: "variabledeclaration", path: './dentist/common/alignments/chaining/ChainingOptions.minScore.html', attributes: []},
{name: 'dentist.common.alignments.chaining.chainLocalAlignments', kind: "functiondeclaration", path: './dentist/common/alignments/chaining/chainLocalAlignments.html', attributes: ["auto"]},
{name: 'dentist.common.alignments.chaining.chainScore', kind: "functiondeclaration", path: './dentist/common/alignments/chaining/chainScore.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.common.alignments.chaining.cmpIds', kind: "functiondeclaration", path: './dentist/common/alignments/chaining/cmpIds.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.common.alignments.chaining.gap', kind: "functiondeclaration", path: './dentist/common/alignments/chaining/gap.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.common.alignments.chaining.indel', kind: "functiondeclaration", path: './dentist/common/alignments/chaining/indel.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.common.alignments.chaining.length', kind: "functiondeclaration", path: './dentist/common/alignments/chaining/length.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.common.alignments.chaining.maxAbsGap', kind: "functiondeclaration", path: './dentist/common/alignments/chaining/maxAbsGap.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.common.alignments.chaining.minLength', kind: "functiondeclaration", path: './dentist/common/alignments/chaining/minLength.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.common.alignments.chaining.overlap', kind: "functiondeclaration", path: './dentist/common/alignments/chaining/overlap.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.common.alignments.chaining.sameIds', kind: "functiondeclaration", path: './dentist/common/alignments/chaining/sameIds.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.common.binio.common', kind: "module", path: './dentist/common/binio/common.html', attributes: []},
{name: 'dentist.common.binio.common.ArrayStorage', kind: "structdeclaration", path: './dentist/common/binio/common/ArrayStorage.html', attributes: []},
{name: 'dentist.common.binio.common.ArrayStorage.elementSize', kind: "enummemberdeclaration", path: './dentist/common/binio/common/ArrayStorage.elementSize.html', attributes: []},
{name: 'dentist.common.binio.common.ArrayStorage.fromPtrs', kind: "functiondeclaration", path: './dentist/common/binio/common/ArrayStorage.fromPtrs.html', attributes: ["static"]},
{name: 'dentist.common.binio.common.ArrayStorage.indexOf', kind: "functiondeclaration", path: './dentist/common/binio/common/ArrayStorage.indexOf.html', attributes: ["const", "pure"]},
{name: 'dentist.common.binio.common.ArrayStorage.length', kind: "variabledeclaration", path: './dentist/common/binio/common/ArrayStorage.length.html', attributes: []},
{name: 'dentist.common.binio.common.ArrayStorage.opDollar', kind: "functiondeclaration", path: './dentist/common/binio/common/ArrayStorage.opDollar.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.common.binio.common.ArrayStorage.opIndex', kind: "functiondeclaration", path: './dentist/common/binio/common/ArrayStorage.opIndex.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.common.binio.common.ArrayStorage.opSlice', kind: "functiondeclaration", path: './dentist/common/binio/common/ArrayStorage.opSlice.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.common.binio.common.ArrayStorage.ptr', kind: "variabledeclaration", path: './dentist/common/binio/common/ArrayStorage.ptr.html', attributes: []},
{name: 'dentist.common.binio.common.BinaryIOException', kind: "classdeclaration", path: './dentist/common/binio/common/BinaryIOException.html', attributes: []},
{name: 'dentist.common.binio.common.BinaryIOException.this', kind: "functiondeclaration", path: './dentist/common/binio/common/BinaryIOException.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dentist.common.binio.common.CompressedBase', kind: "enumdeclaration", path: './dentist/common/binio/common/CompressedBase.html', attributes: []},
{name: 'dentist.common.binio.common.CompressedBase.a', kind: "enummemberdeclaration", path: './dentist/common/binio/common/CompressedBase.html#a', attributes: []},
{name: 'dentist.common.binio.common.CompressedBase.c', kind: "enummemberdeclaration", path: './dentist/common/binio/common/CompressedBase.html#c', attributes: []},
{name: 'dentist.common.binio.common.CompressedBase.g', kind: "enummemberdeclaration", path: './dentist/common/binio/common/CompressedBase.html#g', attributes: []},
{name: 'dentist.common.binio.common.CompressedBase.t', kind: "enummemberdeclaration", path: './dentist/common/binio/common/CompressedBase.html#t', attributes: []},
{name: 'dentist.common.binio.common.CompressedBaseQuad', kind: "structdeclaration", path: './dentist/common/binio/common/CompressedBaseQuad.html', attributes: []},
{name: 'dentist.common.binio.common.CompressedBaseQuad.length', kind: "enummemberdeclaration", path: './dentist/common/binio/common/CompressedBaseQuad.length.html', attributes: []},
{name: 'dentist.common.binio.common.CompressedBaseQuad.opDollar', kind: "aliasdeclaration", path: './dentist/common/binio/common/CompressedBaseQuad.opDollar.html', attributes: []},
{name: 'dentist.common.binio.common.CompressedBaseQuad.opIndex', kind: "functiondeclaration", path: './dentist/common/binio/common/CompressedBaseQuad.opIndex.html', attributes: ["pure", "nothrow", "const"]},
{name: 'dentist.common.binio.common.CompressedBaseQuad.opIndexAssign', kind: "functiondeclaration", path: './dentist/common/binio/common/CompressedBaseQuad.opIndexAssign.html', attributes: ["pure"]},
{name: 'dentist.common.binio.common.CompressedSequence', kind: "structdeclaration", path: './dentist/common/binio/common/CompressedSequence.html', attributes: []},
{name: 'dentist.common.binio.common.CompressedSequence.baseOffset', kind: "functiondeclaration", path: './dentist/common/binio/common/CompressedSequence.baseOffset.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.binio.common.CompressedSequence.bases', kind: "functiondeclaration", path: './dentist/common/binio/common/CompressedSequence.bases.html', attributes: ["auto", "const", "pure", "nothrow", "property"]},
{name: 'dentist.common.binio.common.CompressedSequence.canConvert', kind: "functiondeclaration", path: './dentist/common/binio/common/CompressedSequence.canConvert.html', attributes: []},
{name: 'dentist.common.binio.common.CompressedSequence.compressedLength', kind: "functiondeclaration", path: './dentist/common/binio/common/CompressedSequence.compressedLength.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.binio.common.CompressedSequence.convert', kind: "functiondeclaration", path: './dentist/common/binio/common/CompressedSequence.convert.html', attributes: []},
{name: 'dentist.common.binio.common.CompressedSequence.data', kind: "functiondeclaration", path: './dentist/common/binio/common/CompressedSequence.data.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.binio.common.CompressedSequence.from', kind: "functiondeclaration", path: './dentist/common/binio/common/CompressedSequence.from.html', attributes: []},
{name: 'dentist.common.binio.common.CompressedSequence.length', kind: "functiondeclaration", path: './dentist/common/binio/common/CompressedSequence.length.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.binio.common.CompressedSequence.opDollar', kind: "aliasdeclaration", path: './dentist/common/binio/common/CompressedSequence.opDollar.html', attributes: []},
{name: 'dentist.common.binio.common.CompressedSequence.opIndex', kind: "functiondeclaration", path: './dentist/common/binio/common/CompressedSequence.opIndex.html', attributes: ["pure", "nothrow", "const"]},
{name: 'dentist.common.binio.common.CompressedSequence.opSlice', kind: "functiondeclaration", path: './dentist/common/binio/common/CompressedSequence.opSlice.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.common.binio.common.CompressedSequence.to', kind: "functiondeclaration", path: './dentist/common/binio/common/CompressedSequence.to.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.common.binio.common.CompressedSequence.toString', kind: "aliasdeclaration", path: './dentist/common/binio/common/CompressedSequence.toString.html', attributes: []},
{name: 'dentist.common.binio.common.DbIndex', kind: "templatedeclaration", path: './dentist/common/binio/common/DbIndex.html', attributes: []},
{name: 'dentist.common.binio.common.DbIndex.arrayStorage', kind: "functiondeclaration", path: './dentist/common/binio/common/DbIndex.arrayStorage.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'dentist.common.binio.common.DbIndex.beginPtr', kind: "functiondeclaration", path: './dentist/common/binio/common/DbIndex.beginPtr.html', attributes: ["auto", "pure", "nothrow", "property", "ref"]},
{name: 'dentist.common.binio.common.DbIndex.endPtr', kind: "functiondeclaration", path: './dentist/common/binio/common/DbIndex.endPtr.html', attributes: ["auto", "pure", "nothrow", "property", "ref"]},
{name: 'dentist.common.binio.common.DbIndex.EOF', kind: "structdeclaration", path: './dentist/common/binio/common/DbIndex.EOF.html', attributes: []},
{name: 'dentist.common.binio.common.lockIfPossible', kind: "functiondeclaration", path: './dentist/common/binio/common/lockIfPossible.html', attributes: []},
{name: 'dentist.common.binio.common.readRecord', kind: "functiondeclaration", path: './dentist/common/binio/common/readRecord.html', attributes: []},
{name: 'dentist.common.binio.common.readRecordAt', kind: "functiondeclaration", path: './dentist/common/binio/common/readRecordAt.html', attributes: []},
{name: 'dentist.common.binio.common.readRecords', kind: "functiondeclaration", path: './dentist/common/binio/common/readRecords.html', attributes: []},
{name: 'dentist.common.binio.insertiondb', kind: "module", path: './dentist/common/binio/insertiondb.html', attributes: []},
{name: 'dentist.common.binio.insertiondb.InsertionDb', kind: "structdeclaration", path: './dentist/common/binio/insertiondb/InsertionDb.html', attributes: []},
{name: 'dentist.common.binio.insertiondb.InsertionDb.compressedBaseQuads', kind: "functiondeclaration", path: './dentist/common/binio/insertiondb/InsertionDb.compressedBaseQuads.html', attributes: ["auto", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'dentist.common.binio.insertiondb.InsertionDb.insertions', kind: "functiondeclaration", path: './dentist/common/binio/insertiondb/InsertionDb.insertions.html', attributes: ["auto", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'dentist.common.binio.insertiondb.InsertionDb.length', kind: "functiondeclaration", path: './dentist/common/binio/insertiondb/InsertionDb.length.html', attributes: ["property"]},
{name: 'dentist.common.binio.insertiondb.InsertionDb.localAlignments', kind: "functiondeclaration", path: './dentist/common/binio/insertiondb/InsertionDb.localAlignments.html', attributes: ["auto", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'dentist.common.binio.insertiondb.InsertionDb.opDollar', kind: "aliasdeclaration", path: './dentist/common/binio/insertiondb/InsertionDb.opDollar.html', attributes: []},
{name: 'dentist.common.binio.insertiondb.InsertionDb.opIndex', kind: "functiondeclaration", path: './dentist/common/binio/insertiondb/InsertionDb.opIndex.html', attributes: []},
{name: 'dentist.common.binio.insertiondb.InsertionDb.opSlice', kind: "functiondeclaration", path: './dentist/common/binio/insertiondb/InsertionDb.opSlice.html', attributes: []},
{name: 'dentist.common.binio.insertiondb.InsertionDb.overlaps', kind: "functiondeclaration", path: './dentist/common/binio/insertiondb/InsertionDb.overlaps.html', attributes: ["auto", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'dentist.common.binio.insertiondb.InsertionDb.parse', kind: "functiondeclaration", path: './dentist/common/binio/insertiondb/InsertionDb.parse.html', attributes: ["static"]},
{name: 'dentist.common.binio.insertiondb.InsertionDb.readIds', kind: "functiondeclaration", path: './dentist/common/binio/insertiondb/InsertionDb.readIds.html', attributes: ["auto", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'dentist.common.binio.insertiondb.InsertionDb.releaseDb', kind: "functiondeclaration", path: './dentist/common/binio/insertiondb/InsertionDb.releaseDb.html', attributes: []},
{name: 'dentist.common.binio.insertiondb.InsertionDb.tracePoints', kind: "functiondeclaration", path: './dentist/common/binio/insertiondb/InsertionDb.tracePoints.html', attributes: ["auto", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'dentist.common.binio.insertiondb.InsertionDb.write', kind: "functiondeclaration", path: './dentist/common/binio/insertiondb/InsertionDb.write.html', attributes: []},
{name: 'dentist.common.binio.insertiondb.InsertionDbException', kind: "classdeclaration", path: './dentist/common/binio/insertiondb/InsertionDbException.html', attributes: []},
{name: 'dentist.common.binio.insertiondb.InsertionDbException.this', kind: "functiondeclaration", path: './dentist/common/binio/insertiondb/InsertionDbException.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dentist.common.binio.pileupdb', kind: "module", path: './dentist/common/binio/pileupdb.html', attributes: []},
{name: 'dentist.common.binio.pileupdb.PileUpDb', kind: "structdeclaration", path: './dentist/common/binio/pileupdb/PileUpDb.html', attributes: []},
{name: 'dentist.common.binio.pileupdb.PileUpDb.length', kind: "functiondeclaration", path: './dentist/common/binio/pileupdb/PileUpDb.length.html', attributes: ["property"]},
{name: 'dentist.common.binio.pileupdb.PileUpDb.localAlignments', kind: "functiondeclaration", path: './dentist/common/binio/pileupdb/PileUpDb.localAlignments.html', attributes: ["auto", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'dentist.common.binio.pileupdb.PileUpDb.opDollar', kind: "aliasdeclaration", path: './dentist/common/binio/pileupdb/PileUpDb.opDollar.html', attributes: []},
{name: 'dentist.common.binio.pileupdb.PileUpDb.opIndex', kind: "functiondeclaration", path: './dentist/common/binio/pileupdb/PileUpDb.opIndex.html', attributes: []},
{name: 'dentist.common.binio.pileupdb.PileUpDb.opSlice', kind: "functiondeclaration", path: './dentist/common/binio/pileupdb/PileUpDb.opSlice.html', attributes: []},
{name: 'dentist.common.binio.pileupdb.PileUpDb.parse', kind: "functiondeclaration", path: './dentist/common/binio/pileupdb/PileUpDb.parse.html', attributes: ["static"]},
{name: 'dentist.common.binio.pileupdb.PileUpDb.pileUps', kind: "functiondeclaration", path: './dentist/common/binio/pileupdb/PileUpDb.pileUps.html', attributes: ["auto", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'dentist.common.binio.pileupdb.PileUpDb.readAlignments', kind: "functiondeclaration", path: './dentist/common/binio/pileupdb/PileUpDb.readAlignments.html', attributes: ["auto", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'dentist.common.binio.pileupdb.PileUpDb.releaseDb', kind: "functiondeclaration", path: './dentist/common/binio/pileupdb/PileUpDb.releaseDb.html', attributes: []},
{name: 'dentist.common.binio.pileupdb.PileUpDb.seededAlignments', kind: "functiondeclaration", path: './dentist/common/binio/pileupdb/PileUpDb.seededAlignments.html', attributes: ["auto", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'dentist.common.binio.pileupdb.PileUpDb.tracePoints', kind: "functiondeclaration", path: './dentist/common/binio/pileupdb/PileUpDb.tracePoints.html', attributes: ["auto", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'dentist.common.binio.pileupdb.PileUpDbException', kind: "classdeclaration", path: './dentist/common/binio/pileupdb/PileUpDbException.html', attributes: []},
{name: 'dentist.common.binio.pileupdb.PileUpDbException.this', kind: "functiondeclaration", path: './dentist/common/binio/pileupdb/PileUpDbException.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dentist.common.binio.pileupdb.writePileUpsDb', kind: "functiondeclaration", path: './dentist/common/binio/pileupdb/writePileUpsDb.html', attributes: []},
{name: 'dentist.common.alignments', kind: "module", path: './dentist/common/alignments.html', attributes: []},
{name: 'dentist.common.binio', kind: "module", path: './dentist/common/binio.html', attributes: []},
{name: 'dentist.common.commands', kind: "module", path: './dentist/common/commands.html', attributes: []},
{name: 'dentist.common.commands.DentistCommand', kind: "enumdeclaration", path: './dentist/common/commands/DentistCommand.html', attributes: []},
{name: 'dentist.common.commands.DentistCommand.bed2mask', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#bed2mask', attributes: []},
{name: 'dentist.common.commands.DentistCommand.buildPartialAssembly', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#buildPartialAssembly', attributes: []},
{name: 'dentist.common.commands.DentistCommand.chainLocalAlignments', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#chainLocalAlignments', attributes: []},
{name: 'dentist.common.commands.DentistCommand.checkResults', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#checkResults', attributes: []},
{name: 'dentist.common.commands.DentistCommand.checkScaffolding', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#checkScaffolding', attributes: []},
{name: 'dentist.common.commands.DentistCommand.collectPileUps', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#collectPileUps', attributes: []},
{name: 'dentist.common.commands.DentistCommand.filterMask', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#filterMask', attributes: []},
{name: 'dentist.common.commands.DentistCommand.findClosableGaps', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#findClosableGaps', attributes: []},
{name: 'dentist.common.commands.DentistCommand.generateDazzlerOptions', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#generateDazzlerOptions', attributes: []},
{name: 'dentist.common.commands.DentistCommand.maskRepetitiveRegions', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#maskRepetitiveRegions', attributes: []},
{name: 'dentist.common.commands.DentistCommand.mergeInsertions', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#mergeInsertions', attributes: []},
{name: 'dentist.common.commands.DentistCommand.mergeMasks', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#mergeMasks', attributes: []},
{name: 'dentist.common.commands.DentistCommand.output', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#output', attributes: []},
{name: 'dentist.common.commands.DentistCommand.processPileUps', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#processPileUps', attributes: []},
{name: 'dentist.common.commands.DentistCommand.propagateMask', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#propagateMask', attributes: []},
{name: 'dentist.common.commands.DentistCommand.showInsertions', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#showInsertions', attributes: []},
{name: 'dentist.common.commands.DentistCommand.showMask', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#showMask', attributes: []},
{name: 'dentist.common.commands.DentistCommand.showPileUps', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#showPileUps', attributes: []},
{name: 'dentist.common.commands.DentistCommand.translateCoords', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#translateCoords', attributes: []},
{name: 'dentist.common.commands.DentistCommand.validateConfig', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#validateConfig', attributes: []},
{name: 'dentist.common.commands.DentistCommand.validateRegions', kind: "enummemberdeclaration", path: './dentist/common/commands/DentistCommand.html#validateRegions', attributes: []},
{name: 'dentist.common.commands.dentistCommands', kind: "enummemberdeclaration", path: './dentist/common/commands/dentistCommands.html', attributes: []},
{name: 'dentist.common.commands.TestingCommand', kind: "structdeclaration", path: './dentist/common/commands/TestingCommand.html', attributes: []},
{name: 'dentist.common.commands.TestingCommand.opDispatch', kind: "functiondeclaration", path: './dentist/common/commands/TestingCommand.opDispatch.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.common.commands.TestingCommand.this', kind: "functiondeclaration", path: './dentist/common/commands/TestingCommand.this.html', attributes: ["disable"]},
{name: 'dentist.common.configfile', kind: "module", path: './dentist/common/configfile.html', attributes: []},
{name: 'dentist.common.configfile.configCommentPrefix', kind: "enummemberdeclaration", path: './dentist/common/configfile/configCommentPrefix.html', attributes: []},
{name: 'dentist.common.configfile.configDefaultKey', kind: "enummemberdeclaration", path: './dentist/common/configfile/configDefaultKey.html', attributes: []},
{name: 'dentist.common.configfile.configEmptyArgument', kind: "enummemberdeclaration", path: './dentist/common/configfile/configEmptyArgument.html', attributes: []},
{name: 'dentist.common.configfile.ConfigFileException', kind: "classdeclaration", path: './dentist/common/configfile/ConfigFileException.html', attributes: []},
{name: 'dentist.common.configfile.fromBytes', kind: "functiondeclaration", path: './dentist/common/configfile/fromBytes.html', attributes: ["auto", "pure", "nothrow", "nogc", "safe"]},
{name: 'dentist.common.configfile.maxConfigSize', kind: "enummemberdeclaration", path: './dentist/common/configfile/maxConfigSize.html', attributes: []},
{name: 'dentist.common.configfile.parseConfig', kind: "functiondeclaration", path: './dentist/common/configfile/parseConfig.html', attributes: []},
{name: 'dentist.common.configfile.retroInitFromConfig', kind: "functiondeclaration", path: './dentist/common/configfile/retroInitFromConfig.html', attributes: []},
{name: 'dentist.common.configfile.SizeUnit', kind: "enumdeclaration", path: './dentist/common/configfile/SizeUnit.html', attributes: []},
{name: 'dentist.common.configfile.SizeUnit.B', kind: "enummemberdeclaration", path: './dentist/common/configfile/SizeUnit.html#B', attributes: []},
{name: 'dentist.common.configfile.SizeUnit.EiB', kind: "enummemberdeclaration", path: './dentist/common/configfile/SizeUnit.html#EiB', attributes: []},
{name: 'dentist.common.configfile.SizeUnit.GiB', kind: "enummemberdeclaration", path: './dentist/common/configfile/SizeUnit.html#GiB', attributes: []},
{name: 'dentist.common.configfile.SizeUnit.KiB', kind: "enummemberdeclaration", path: './dentist/common/configfile/SizeUnit.html#KiB', attributes: []},
{name: 'dentist.common.configfile.SizeUnit.MiB', kind: "enummemberdeclaration", path: './dentist/common/configfile/SizeUnit.html#MiB', attributes: []},
{name: 'dentist.common.configfile.SizeUnit.PiB', kind: "enummemberdeclaration", path: './dentist/common/configfile/SizeUnit.html#PiB', attributes: []},
{name: 'dentist.common.configfile.SizeUnit.TiB', kind: "enummemberdeclaration", path: './dentist/common/configfile/SizeUnit.html#TiB', attributes: []},
{name: 'dentist.common.configfile.SizeUnit.YiB', kind: "enummemberdeclaration", path: './dentist/common/configfile/SizeUnit.html#YiB', attributes: []},
{name: 'dentist.common.configfile.SizeUnit.ZiB', kind: "enummemberdeclaration", path: './dentist/common/configfile/SizeUnit.html#ZiB', attributes: []},
{name: 'dentist.common.configfile.sizeUnitBase', kind: "enummemberdeclaration", path: './dentist/common/configfile/sizeUnitBase.html', attributes: []},
{name: 'dentist.common.configfile.toBytes', kind: "functiondeclaration", path: './dentist/common/configfile/toBytes.html', attributes: ["auto", "pure", "nothrow", "nogc", "safe"]},
{name: 'dentist.common.configfile.toJson', kind: "functiondeclaration", path: './dentist/common/configfile/toJson.html', attributes: []},
{name: 'dentist.common.configfile.validateConfigCommand', kind: "functiondeclaration", path: './dentist/common/configfile/validateConfigCommand.html', attributes: []},
{name: 'dentist.common.configfile.validateConfigFile', kind: "functiondeclaration", path: './dentist/common/configfile/validateConfigFile.html', attributes: []},
{name: 'dentist.common.configfile.assignConfigValue', kind: "functiondeclaration", path: './dentist/common/configfile/assignConfigValue.html', attributes: []},
{name: 'dentist.common.configfile.configNamesOf', kind: "enummemberdeclaration", path: './dentist/common/configfile/configNamesOf.html', attributes: []},
{name: 'dentist.common.configfile.getConfigValue', kind: "functiondeclaration", path: './dentist/common/configfile/getConfigValue.html', attributes: ["auto"]},
{name: 'dentist.common.configfile.parseConfigFile', kind: "functiondeclaration", path: './dentist/common/configfile/parseConfigFile.html', attributes: []},
{name: 'dentist.common.configfile.readConfigFile', kind: "functiondeclaration", path: './dentist/common/configfile/readConfigFile.html', attributes: []},
{name: 'dentist.common.configfile.validateConfig', kind: "functiondeclaration", path: './dentist/common/configfile/validateConfig.html', attributes: []},
{name: 'dentist.common.external', kind: "module", path: './dentist/common/external.html', attributes: []},
{name: 'dentist.common.external.externalDependencies', kind: "enummemberdeclaration", path: './dentist/common/external/externalDependencies.html', attributes: []},
{name: 'dentist.common.external.ExternalDependency', kind: "structdeclaration", path: './dentist/common/external/ExternalDependency.html', attributes: []},
{name: 'dentist.common.external.ExternalDependency.executable', kind: "variabledeclaration", path: './dentist/common/external/ExternalDependency.executable.html', attributes: []},
{name: 'dentist.common.external.ExternalDependency.package_', kind: "variabledeclaration", path: './dentist/common/external/ExternalDependency.package_.html', attributes: []},
{name: 'dentist.common.external.ExternalDependency.toString', kind: "functiondeclaration", path: './dentist/common/external/ExternalDependency.toString.html', attributes: ["pure", "nothrow", "const"]},
{name: 'dentist.common.external.ExternalDependency.url', kind: "variabledeclaration", path: './dentist/common/external/ExternalDependency.url.html', attributes: []},
{name: 'dentist.common.insertions', kind: "module", path: './dentist/common/insertions.html', attributes: []},
{name: 'dentist.common.insertions.getCroppingPosition', kind: "functiondeclaration", path: './dentist/common/insertions/getCroppingPosition.html', attributes: []},
{name: 'dentist.common.insertions.getInfoForExistingContig', kind: "functiondeclaration", path: './dentist/common/insertions/getInfoForExistingContig.html', attributes: ["auto", "pure", "safe"]},
{name: 'dentist.common.insertions.getInfoForGap', kind: "functiondeclaration", path: './dentist/common/insertions/getInfoForGap.html', attributes: ["auto", "pure", "nothrow", "nogc", "safe"]},
{name: 'dentist.common.insertions.getInfoForNewSequenceInsertion', kind: "functiondeclaration", path: './dentist/common/insertions/getInfoForNewSequenceInsertion.html', attributes: ["auto", "pure"]},
{name: 'dentist.common.insertions.hasSequence', kind: "functiondeclaration", path: './dentist/common/insertions/hasSequence.html', attributes: []},
{name: 'dentist.common.insertions.Insertion', kind: "aliasdeclaration", path: './dentist/common/insertions/Insertion.html', attributes: []},
{name: 'dentist.common.insertions.InsertionInfo', kind: "structdeclaration", path: './dentist/common/insertions/InsertionInfo.html', attributes: []},
{name: 'dentist.common.insertions.InsertionInfo.contigLength', kind: "variabledeclaration", path: './dentist/common/insertions/InsertionInfo.contigLength.html', attributes: []},
{name: 'dentist.common.insertions.InsertionInfo.overlaps', kind: "variabledeclaration", path: './dentist/common/insertions/InsertionInfo.overlaps.html', attributes: []},
{name: 'dentist.common.insertions.InsertionInfo.readIds', kind: "variabledeclaration", path: './dentist/common/insertions/InsertionInfo.readIds.html', attributes: []},
{name: 'dentist.common.insertions.InsertionInfo.sequence', kind: "variabledeclaration", path: './dentist/common/insertions/InsertionInfo.sequence.html', attributes: []},
{name: 'dentist.common.insertions.isOutputGap', kind: "functiondeclaration", path: './dentist/common/insertions/isOutputGap.html', attributes: []},
{name: 'dentist.common.insertions.isValidInsertion', kind: "functiondeclaration", path: './dentist/common/insertions/isValidInsertion.html', attributes: []},
{name: 'dentist.common.insertions.OutputScaffold', kind: "aliasdeclaration", path: './dentist/common/insertions/OutputScaffold.html', attributes: []},
{name: 'dentist.common.scaffold', kind: "module", path: './dentist/common/scaffold.html', attributes: []},
{name: 'dentist.common.scaffold.buildScaffold', kind: "functiondeclaration", path: './dentist/common/scaffold/buildScaffold.html', attributes: []},
{name: 'dentist.common.scaffold.concatenatePayloads', kind: "functiondeclaration", path: './dentist/common/scaffold/concatenatePayloads.html', attributes: []},
{name: 'dentist.common.scaffold.ContigNode', kind: "aliasdeclaration", path: './dentist/common/scaffold/ContigNode.html', attributes: []},
{name: 'dentist.common.scaffold.ContigPart', kind: "enumdeclaration", path: './dentist/common/scaffold/ContigPart.html', attributes: []},
{name: 'dentist.common.scaffold.ContigPart.begin', kind: "enummemberdeclaration", path: './dentist/common/scaffold/ContigPart.html#begin', attributes: []},
{name: 'dentist.common.scaffold.ContigPart.end', kind: "enummemberdeclaration", path: './dentist/common/scaffold/ContigPart.html#end', attributes: []},
{name: 'dentist.common.scaffold.ContigPart.post', kind: "enummemberdeclaration", path: './dentist/common/scaffold/ContigPart.html#post', attributes: []},
{name: 'dentist.common.scaffold.ContigPart.pre', kind: "enummemberdeclaration", path: './dentist/common/scaffold/ContigPart.html#pre', attributes: []},
{name: 'dentist.common.scaffold.enforceJoinPolicy', kind: "functiondeclaration", path: './dentist/common/scaffold/enforceJoinPolicy.html', attributes: []},
{name: 'dentist.common.scaffold.getDefaultJoin', kind: "functiondeclaration", path: './dentist/common/scaffold/getDefaultJoin.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.common.scaffold.getUnkownJoin', kind: "functiondeclaration", path: './dentist/common/scaffold/getUnkownJoin.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.common.scaffold.IncidentEdgesCache', kind: "aliasdeclaration", path: './dentist/common/scaffold/IncidentEdgesCache.html', attributes: []},
{name: 'dentist.common.scaffold.initScaffold', kind: "functiondeclaration", path: './dentist/common/scaffold/initScaffold.html', attributes: []},
{name: 'dentist.common.scaffold.isAntiParallel', kind: "functiondeclaration", path: './dentist/common/scaffold/isAntiParallel.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.common.scaffold.isBackExtension', kind: "functiondeclaration", path: './dentist/common/scaffold/isBackExtension.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.common.scaffold.isCyclic', kind: "functiondeclaration", path: './dentist/common/scaffold/isCyclic.html', attributes: []},
{name: 'dentist.common.scaffold.isDefault', kind: "functiondeclaration", path: './dentist/common/scaffold/isDefault.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.common.scaffold.isExtension', kind: "functiondeclaration", path: './dentist/common/scaffold/isExtension.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.common.scaffold.isFrontExtension', kind: "functiondeclaration", path: './dentist/common/scaffold/isFrontExtension.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.common.scaffold.isGap', kind: "functiondeclaration", path: './dentist/common/scaffold/isGap.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.common.scaffold.isParallel', kind: "functiondeclaration", path: './dentist/common/scaffold/isParallel.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.common.scaffold.isReal', kind: "functiondeclaration", path: './dentist/common/scaffold/isReal.html', attributes: ["pure"]},
{name: 'dentist.common.scaffold.isTranscendent', kind: "functiondeclaration", path: './dentist/common/scaffold/isTranscendent.html', attributes: ["pure"]},
{name: 'dentist.common.scaffold.isUnkown', kind: "functiondeclaration", path: './dentist/common/scaffold/isUnkown.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.common.scaffold.isValid', kind: "functiondeclaration", path: './dentist/common/scaffold/isValid.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.common.scaffold.Join', kind: "aliasdeclaration", path: './dentist/common/scaffold/Join.html', attributes: []},
{name: 'dentist.common.scaffold.JoinPolicy', kind: "enumdeclaration", path: './dentist/common/scaffold/JoinPolicy.html', attributes: []},
{name: 'dentist.common.scaffold.JoinPolicy.contigs', kind: "enummemberdeclaration", path: './dentist/common/scaffold/JoinPolicy.html#contigs', attributes: []},
{name: 'dentist.common.scaffold.JoinPolicy.scaffoldGaps', kind: "enummemberdeclaration", path: './dentist/common/scaffold/JoinPolicy.html#scaffoldGaps', attributes: []},
{name: 'dentist.common.scaffold.JoinPolicy.scaffolds', kind: "enummemberdeclaration", path: './dentist/common/scaffold/JoinPolicy.html#scaffolds', attributes: []},
{name: 'dentist.common.scaffold.linearWalk', kind: "functiondeclaration", path: './dentist/common/scaffold/linearWalk.html', attributes: []},
{name: 'dentist.common.scaffold.LinearWalk', kind: "structdeclaration", path: './dentist/common/scaffold/LinearWalk.html', attributes: []},
{name: 'dentist.common.scaffold.LinearWalk._isCyclic', kind: "variabledeclaration", path: './dentist/common/scaffold/LinearWalk._isCyclic.html', attributes: []},
{name: 'dentist.common.scaffold.LinearWalk.currentJoin', kind: "variabledeclaration", path: './dentist/common/scaffold/LinearWalk.currentJoin.html', attributes: []},
{name: 'dentist.common.scaffold.LinearWalk.currentNode', kind: "functiondeclaration", path: './dentist/common/scaffold/LinearWalk.currentNode.html', attributes: ["property"]},
{name: 'dentist.common.scaffold.LinearWalk.currentNodeIdx', kind: "variabledeclaration", path: './dentist/common/scaffold/LinearWalk.currentNodeIdx.html', attributes: []},
{name: 'dentist.common.scaffold.LinearWalk.empty', kind: "functiondeclaration", path: './dentist/common/scaffold/LinearWalk.empty.html', attributes: ["property"]},
{name: 'dentist.common.scaffold.LinearWalk.emptyIncidentEdgesCache', kind: "enummemberdeclaration", path: './dentist/common/scaffold/LinearWalk.emptyIncidentEdgesCache.html', attributes: []},
{name: 'dentist.common.scaffold.LinearWalk.endOfWalk', kind: "functiondeclaration", path: './dentist/common/scaffold/LinearWalk.endOfWalk.html', attributes: []},
{name: 'dentist.common.scaffold.LinearWalk.front', kind: "functiondeclaration", path: './dentist/common/scaffold/LinearWalk.front.html', attributes: ["property"]},
{name: 'dentist.common.scaffold.LinearWalk.incidentEdgesCache', kind: "variabledeclaration", path: './dentist/common/scaffold/LinearWalk.incidentEdgesCache.html', attributes: []},
{name: 'dentist.common.scaffold.LinearWalk.isCyclic', kind: "functiondeclaration", path: './dentist/common/scaffold/LinearWalk.isCyclic.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.common.scaffold.LinearWalk.isEmpty', kind: "variabledeclaration", path: './dentist/common/scaffold/LinearWalk.isEmpty.html', attributes: []},
{name: 'dentist.common.scaffold.LinearWalk.lastEdgeOfCycle', kind: "functiondeclaration", path: './dentist/common/scaffold/LinearWalk.lastEdgeOfCycle.html', attributes: []},
{name: 'dentist.common.scaffold.LinearWalk.markVisited', kind: "functiondeclaration", path: './dentist/common/scaffold/LinearWalk.markVisited.html', attributes: []},
{name: 'dentist.common.scaffold.LinearWalk.popFront', kind: "functiondeclaration", path: './dentist/common/scaffold/LinearWalk.popFront.html', attributes: []},
{name: 'dentist.common.scaffold.LinearWalk.scaffold', kind: "variabledeclaration", path: './dentist/common/scaffold/LinearWalk.scaffold.html', attributes: []},
{name: 'dentist.common.scaffold.LinearWalk.this', kind: "functiondeclaration", path: './dentist/common/scaffold/LinearWalk.this.html', attributes: []},
{name: 'dentist.common.scaffold.LinearWalk.visitedNodes', kind: "variabledeclaration", path: './dentist/common/scaffold/LinearWalk.visitedNodes.html', attributes: []},
{name: 'dentist.common.scaffold.mergeExtensionsWithGaps', kind: "functiondeclaration", path: './dentist/common/scaffold/mergeExtensionsWithGaps.html', attributes: []},
{name: 'dentist.common.scaffold.normalizeUnkownJoins', kind: "functiondeclaration", path: './dentist/common/scaffold/normalizeUnkownJoins.html', attributes: []},
{name: 'dentist.common.scaffold.removeBlacklisted', kind: "functiondeclaration", path: './dentist/common/scaffold/removeBlacklisted.html', attributes: []},
{name: 'dentist.common.scaffold.removeNoneJoins', kind: "functiondeclaration", path: './dentist/common/scaffold/removeNoneJoins.html', attributes: []},
{name: 'dentist.common.scaffold.Scaffold', kind: "aliasdeclaration", path: './dentist/common/scaffold/Scaffold.html', attributes: []},
{name: 'dentist.common.scaffold.scaffoldStarts', kind: "functiondeclaration", path: './dentist/common/scaffold/scaffoldStarts.html', attributes: ["auto"]},
{name: 'dentist.common.scaffold.sumPayloads', kind: "functiondeclaration", path: './dentist/common/scaffold/sumPayloads.html', attributes: []},
{name: 'dentist.util.algorithm', kind: "module", path: './dentist/util/algorithm.html', attributes: []},
{name: 'dentist.util.algorithm.cmpLexicographically', kind: "functiondeclaration", path: './dentist/util/algorithm/cmpLexicographically.html', attributes: []},
{name: 'dentist.util.algorithm.filterInPlace', kind: "functiondeclaration", path: './dentist/util/algorithm/filterInPlace.html', attributes: ["auto", "ref"]},
{name: 'dentist.util.algorithm.first', kind: "functiondeclaration", path: './dentist/util/algorithm/first.html', attributes: []},
{name: 'dentist.util.algorithm.last', kind: "functiondeclaration", path: './dentist/util/algorithm/last.html', attributes: []},
{name: 'dentist.util.algorithm.orderLexicographically', kind: "functiondeclaration", path: './dentist/util/algorithm/orderLexicographically.html', attributes: []},
{name: 'dentist.util.algorithm.replaceInPlace', kind: "functiondeclaration", path: './dentist/util/algorithm/replaceInPlace.html', attributes: []},
{name: 'dentist.util.algorithm.sliceBy', kind: "functiondeclaration", path: './dentist/util/algorithm/sliceBy.html', attributes: ["auto", "pure", "nothrow"]},
{name: 'dentist.util.algorithm.sliceUntil', kind: "functiondeclaration", path: './dentist/util/algorithm/sliceUntil.html', attributes: []},
{name: 'dentist.util.algorithm.staticPredSwitch', kind: "templatedeclaration", path: './dentist/util/algorithm/staticPredSwitch.html', attributes: []},
{name: 'dentist.util.algorithm.staticPredSwitch.staticPredSwitch', kind: "functiondeclaration", path: './dentist/util/algorithm/staticPredSwitch.staticPredSwitch.html', attributes: ["auto", "pure", "nothrow"]},
{name: 'dentist.util.algorithm.uniqInPlace', kind: "functiondeclaration", path: './dentist/util/algorithm/uniqInPlace.html', attributes: ["auto", "ref"]},
{name: 'dentist.util.containers', kind: "module", path: './dentist/util/containers.html', attributes: []},
{name: 'dentist.util.containers.HashSet', kind: "structdeclaration", path: './dentist/util/containers/HashSet.html', attributes: []},
{name: 'dentist.util.containers.HashSet._hash', kind: "variabledeclaration", path: './dentist/util/containers/HashSet._hash.html', attributes: []},
{name: 'dentist.util.containers.HashSet.add', kind: "functiondeclaration", path: './dentist/util/containers/HashSet.add.html', attributes: []},
{name: 'dentist.util.containers.HashSet.clear', kind: "functiondeclaration", path: './dentist/util/containers/HashSet.clear.html', attributes: ["pure"]},
{name: 'dentist.util.containers.HashSet.elements', kind: "functiondeclaration", path: './dentist/util/containers/HashSet.elements.html', attributes: ["auto", "property"]},
{name: 'dentist.util.containers.HashSet.empty', kind: "functiondeclaration", path: './dentist/util/containers/HashSet.empty.html', attributes: ["const", "pure"]},
{name: 'dentist.util.containers.HashSet.has', kind: "functiondeclaration", path: './dentist/util/containers/HashSet.has.html', attributes: ["const", "pure"]},
{name: 'dentist.util.containers.HashSet.opBinaryRight', kind: "functiondeclaration", path: './dentist/util/containers/HashSet.opBinaryRight.html', attributes: ["const", "pure"]},
{name: 'dentist.util.containers.HashSet.remove', kind: "functiondeclaration", path: './dentist/util/containers/HashSet.remove.html', attributes: []},
{name: 'dentist.util.containers.HashSet.size', kind: "functiondeclaration", path: './dentist/util/containers/HashSet.size.html', attributes: ["const", "pure", "property"]},
{name: 'dentist.util.containers.hashSet', kind: "functiondeclaration", path: './dentist/util/containers/hashSet.html', attributes: []},
{name: 'dentist.util.fasta', kind: "module", path: './dentist/util/fasta.html', attributes: []},
{name: 'dentist.util.fasta.complement', kind: "functiondeclaration", path: './dentist/util/fasta/complement.html', attributes: []},
{name: 'dentist.util.fasta.Fasta', kind: "structdeclaration", path: './dentist/util/fasta/Fasta.html', attributes: []},
{name: 'dentist.util.fasta.Fasta.buildIndex', kind: "functiondeclaration", path: './dentist/util/fasta/Fasta.buildIndex.html', attributes: []},
{name: 'dentist.util.fasta.Fasta.data', kind: "variabledeclaration", path: './dentist/util/fasta/Fasta.data.html', attributes: []},
{name: 'dentist.util.fasta.Fasta.headerIndicator', kind: "enummemberdeclaration", path: './dentist/util/fasta/Fasta.headerIndicator.html', attributes: []},
{name: 'dentist.util.fasta.Fasta.isHeaderLine', kind: "functiondeclaration", path: './dentist/util/fasta/Fasta.isHeaderLine.html', attributes: ["static", "pure"]},
{name: 'dentist.util.fasta.Fasta.length', kind: "functiondeclaration", path: './dentist/util/fasta/Fasta.length.html', attributes: ["property"]},
{name: 'dentist.util.fasta.Fasta.opIndex', kind: "functiondeclaration", path: './dentist/util/fasta/Fasta.opIndex.html', attributes: []},
{name: 'dentist.util.fasta.Fasta.recordIndex', kind: "variabledeclaration", path: './dentist/util/fasta/Fasta.recordIndex.html', attributes: []},
{name: 'dentist.util.fasta.FastaRecord', kind: "structdeclaration", path: './dentist/util/fasta/FastaRecord.html', attributes: []},
{name: 'dentist.util.fasta.FastaRecord.data', kind: "variabledeclaration", path: './dentist/util/fasta/FastaRecord.data.html', attributes: []},
{name: 'dentist.util.fasta.FastaRecord.header', kind: "functiondeclaration", path: './dentist/util/fasta/FastaRecord.header.html', attributes: ["auto", "const", "pure", "property"]},
{name: 'dentist.util.fasta.FastaRecord.length', kind: "functiondeclaration", path: './dentist/util/fasta/FastaRecord.length.html', attributes: ["const", "pure", "property"]},
{name: 'dentist.util.fasta.FastaRecord.lineSep', kind: "enummemberdeclaration", path: './dentist/util/fasta/FastaRecord.lineSep.html', attributes: []},
{name: 'dentist.util.fasta.FastaRecord.normalizeIndex', kind: "functiondeclaration", path: './dentist/util/fasta/FastaRecord.normalizeIndex.html', attributes: ["const"]},
{name: 'dentist.util.fasta.FastaRecord.opDollar', kind: "functiondeclaration", path: './dentist/util/fasta/FastaRecord.opDollar.html', attributes: ["property"]},
{name: 'dentist.util.fasta.FastaRecord.opIndex', kind: "functiondeclaration", path: './dentist/util/fasta/FastaRecord.opIndex.html', attributes: ["auto", "const", "pure"]},
{name: 'dentist.util.fasta.FastaRecord.opSlice', kind: "functiondeclaration", path: './dentist/util/fasta/FastaRecord.opSlice.html', attributes: ["auto"]},
{name: 'dentist.util.fasta.FastaRecord.Slice', kind: "aliasdeclaration", path: './dentist/util/fasta/FastaRecord.Slice.html', attributes: []},
{name: 'dentist.util.fasta.FastaRecord.toFasta', kind: "functiondeclaration", path: './dentist/util/fasta/FastaRecord.toFasta.html', attributes: ["auto", "const", "pure"]},
{name: 'dentist.util.fasta.getFastaLength', kind: "functiondeclaration", path: './dentist/util/fasta/getFastaLength.html', attributes: []},
{name: 'dentist.util.fasta.PacBioHeader', kind: "structdeclaration", path: './dentist/util/fasta/PacBioHeader.html', attributes: []},
{name: 'dentist.util.fasta.PacBioHeader.additionalInformation', kind: "variabledeclaration", path: './dentist/util/fasta/PacBioHeader.additionalInformation.html', attributes: []},
{name: 'dentist.util.fasta.PacBioHeader.buildHeader', kind: "functiondeclaration", path: './dentist/util/fasta/PacBioHeader.buildHeader.html', attributes: ["const"]},
{name: 'dentist.util.fasta.PacBioHeader.headerFormat', kind: "enummemberdeclaration", path: './dentist/util/fasta/PacBioHeader.headerFormat.html', attributes: []},
{name: 'dentist.util.fasta.PacBioHeader.name', kind: "variabledeclaration", path: './dentist/util/fasta/PacBioHeader.name.html', attributes: []},
{name: 'dentist.util.fasta.PacBioHeader.opAssign', kind: "functiondeclaration", path: './dentist/util/fasta/PacBioHeader.opAssign.html', attributes: []},
{name: 'dentist.util.fasta.PacBioHeader.parse', kind: "functiondeclaration", path: './dentist/util/fasta/PacBioHeader.parse.html', attributes: []},
{name: 'dentist.util.fasta.PacBioHeader.qualityRegionBegin', kind: "variabledeclaration", path: './dentist/util/fasta/PacBioHeader.qualityRegionBegin.html', attributes: []},
{name: 'dentist.util.fasta.PacBioHeader.qualityRegionEnd', kind: "variabledeclaration", path: './dentist/util/fasta/PacBioHeader.qualityRegionEnd.html', attributes: []},
{name: 'dentist.util.fasta.PacBioHeader.this', kind: "functiondeclaration", path: './dentist/util/fasta/PacBioHeader.this.html', attributes: []},
{name: 'dentist.util.fasta.PacBioHeader.to', kind: "functiondeclaration", path: './dentist/util/fasta/PacBioHeader.to.html', attributes: ["const"]},
{name: 'dentist.util.fasta.PacBioHeader.well', kind: "variabledeclaration", path: './dentist/util/fasta/PacBioHeader.well.html', attributes: []},
{name: 'dentist.util.fasta.parseFasta', kind: "functiondeclaration", path: './dentist/util/fasta/parseFasta.html', attributes: []},
{name: 'dentist.util.fasta.parseFastaRecord', kind: "functiondeclaration", path: './dentist/util/fasta/parseFastaRecord.html', attributes: []},
{name: 'dentist.util.fasta.parsePacBioHeader', kind: "functiondeclaration", path: './dentist/util/fasta/parsePacBioHeader.html', attributes: []},
{name: 'dentist.util.fasta.reverseComplement', kind: "functiondeclaration", path: './dentist/util/fasta/reverseComplement.html', attributes: []},
{name: 'dentist.util.fasta.reverseComplementer', kind: "functiondeclaration", path: './dentist/util/fasta/reverseComplementer.html', attributes: ["auto"]},
{name: 'dentist.util.graphalgo', kind: "module", path: './dentist/util/graphalgo.html', attributes: []},
{name: 'dentist.util.graphalgo.allPairsShortestPaths', kind: "aliasdeclaration", path: './dentist/util/graphalgo/allPairsShortestPaths.html', attributes: []},
{name: 'dentist.util.graphalgo.connectedComponents', kind: "functiondeclaration", path: './dentist/util/graphalgo/connectedComponents.html', attributes: []},
{name: 'dentist.util.graphalgo.dagSingleSourceShortestPaths', kind: "functiondeclaration", path: './dentist/util/graphalgo/dagSingleSourceShortestPaths.html', attributes: ["auto"]},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix', kind: "structdeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.html', attributes: []},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix._dist', kind: "variabledeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix._dist.html', attributes: []},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix._next', kind: "variabledeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix._next.html', attributes: []},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix._numNodes', kind: "variabledeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix._numNodes.html', attributes: []},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.dist', kind: "functiondeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.dist.html', attributes: ["pure", "nothrow", "property", "ref", "safe"]},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.hasNegativeCycles', kind: "functiondeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.hasNegativeCycles.html', attributes: ["const", "pure", "nothrow", "safe"]},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.hasNext', kind: "functiondeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.hasNext.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.idx', kind: "functiondeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.idx.html', attributes: ["const", "pure", "nothrow", "safe"]},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.isConnected', kind: "functiondeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.isConnected.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.next', kind: "functiondeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.next.html', attributes: ["pure", "nothrow", "property", "ref", "safe"]},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.noNext', kind: "enummemberdeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.noNext.html', attributes: []},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.numNodes', kind: "functiondeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.numNodes.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.ShortestPath', kind: "structdeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.ShortestPath.html', attributes: []},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.ShortestPath._current', kind: "variabledeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.ShortestPath._current.html', attributes: []},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.ShortestPath._from', kind: "variabledeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.ShortestPath._from.html', attributes: []},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.ShortestPath._matrix', kind: "variabledeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.ShortestPath._matrix.html', attributes: []},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.ShortestPath._to', kind: "variabledeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.ShortestPath._to.html', attributes: []},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.ShortestPath.empty', kind: "functiondeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.ShortestPath.empty.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.ShortestPath.from', kind: "functiondeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.ShortestPath.from.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.ShortestPath.front', kind: "functiondeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.ShortestPath.front.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.ShortestPath.matrix', kind: "functiondeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.ShortestPath.matrix.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.ShortestPath.popFront', kind: "functiondeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.ShortestPath.popFront.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.ShortestPath.save', kind: "functiondeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.ShortestPath.save.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.ShortestPath.this', kind: "functiondeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.ShortestPath.this.html', attributes: []},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.ShortestPath.to', kind: "functiondeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.ShortestPath.to.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.shortestPath', kind: "functiondeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.shortestPath.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.graphalgo.FloydWarshallMatrix.unconnectedWeight', kind: "enummemberdeclaration", path: './dentist/util/graphalgo/FloydWarshallMatrix.unconnectedWeight.html', attributes: []},
{name: 'dentist.util.graphalgo.GraphType', kind: "enumdeclaration", path: './dentist/util/graphalgo/GraphType.html', attributes: []},
{name: 'dentist.util.graphalgo.GraphType.DAG', kind: "enummemberdeclaration", path: './dentist/util/graphalgo/GraphType.html#DAG', attributes: []},
{name: 'dentist.util.graphalgo.GraphType.general', kind: "enummemberdeclaration", path: './dentist/util/graphalgo/GraphType.html#general', attributes: []},
{name: 'dentist.util.graphalgo.NoDAG', kind: "classdeclaration", path: './dentist/util/graphalgo/NoDAG.html', attributes: []},
{name: 'dentist.util.graphalgo.NoDAG.this', kind: "functiondeclaration", path: './dentist/util/graphalgo/NoDAG.this.html', attributes: []},
{name: 'dentist.util.graphalgo.shortestPathsFloydWarshall', kind: "functiondeclaration", path: './dentist/util/graphalgo/shortestPathsFloydWarshall.html', attributes: ["auto"]},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution', kind: "structdeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.html', attributes: []},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution._distance', kind: "variabledeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution._distance.html', attributes: []},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution._predecessor', kind: "variabledeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution._predecessor.html', attributes: []},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.distance', kind: "functiondeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.distance.html', attributes: ["pure", "nothrow", "property", "ref", "safe"]},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.distances', kind: "functiondeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.distances.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.hasPredecessor', kind: "functiondeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.hasPredecessor.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.isConnected', kind: "functiondeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.isConnected.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.noPredecessor', kind: "enummemberdeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.noPredecessor.html', attributes: []},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.numNodes', kind: "functiondeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.numNodes.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.originalNode', kind: "functiondeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.originalNode.html', attributes: ["const", "pure", "nothrow", "safe"]},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.predecessor', kind: "functiondeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.predecessor.html', attributes: ["pure", "nothrow", "property", "ref", "safe"]},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.ReverseShortestPath', kind: "structdeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.ReverseShortestPath.html', attributes: []},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.ReverseShortestPath._current', kind: "variabledeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.ReverseShortestPath._current.html', attributes: []},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.ReverseShortestPath._solution', kind: "variabledeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.ReverseShortestPath._solution.html', attributes: []},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.ReverseShortestPath._to', kind: "variabledeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.ReverseShortestPath._to.html', attributes: []},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.ReverseShortestPath.empty', kind: "functiondeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.ReverseShortestPath.empty.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.ReverseShortestPath.from', kind: "functiondeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.ReverseShortestPath.from.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.ReverseShortestPath.front', kind: "functiondeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.ReverseShortestPath.front.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.ReverseShortestPath.popFront', kind: "functiondeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.ReverseShortestPath.popFront.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.ReverseShortestPath.solution', kind: "functiondeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.ReverseShortestPath.solution.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.ReverseShortestPath.this', kind: "functiondeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.ReverseShortestPath.this.html', attributes: []},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.ReverseShortestPath.to', kind: "functiondeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.ReverseShortestPath.to.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.reverseShortestPath', kind: "functiondeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.reverseShortestPath.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.startNode', kind: "variabledeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.startNode.html', attributes: []},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.topologicalOrder', kind: "variabledeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.topologicalOrder.html', attributes: []},
{name: 'dentist.util.graphalgo.SingleSourceShortestPathsSolution.unconnectedWeight', kind: "enummemberdeclaration", path: './dentist/util/graphalgo/SingleSourceShortestPathsSolution.unconnectedWeight.html', attributes: []},
{name: 'dentist.util.graphalgo.topologicalSort', kind: "functiondeclaration", path: './dentist/util/graphalgo/topologicalSort.html', attributes: []},
{name: 'dentist.util.log', kind: "module", path: './dentist/util/log.html', attributes: []},
{name: 'dentist.util.log.ExecutionTracer', kind: "structdeclaration", path: './dentist/util/log/ExecutionTracer.html', attributes: []},
{name: 'dentist.util.log.ExecutionTracer.functionName', kind: "variabledeclaration", path: './dentist/util/log/ExecutionTracer.functionName.html', attributes: []},
{name: 'dentist.util.log.ExecutionTracer.this', kind: "functiondeclaration", path: './dentist/util/log/ExecutionTracer.this.html', attributes: []},
{name: 'dentist.util.log.ExecutionTracer.timer', kind: "variabledeclaration", path: './dentist/util/log/ExecutionTracer.timer.html', attributes: []},
{name: 'dentist.util.log.getLogLevel', kind: "functiondeclaration", path: './dentist/util/log/getLogLevel.html', attributes: []},
{name: 'dentist.util.log.log', kind: "functiondeclaration", path: './dentist/util/log/log.html', attributes: ["nothrow"]},
{name: 'dentist.util.log.logDebug', kind: "functiondeclaration", path: './dentist/util/log/logDebug.html', attributes: ["nothrow"]},
{name: 'dentist.util.log.logDiagnostic', kind: "functiondeclaration", path: './dentist/util/log/logDiagnostic.html', attributes: ["nothrow"]},
{name: 'dentist.util.log.logError', kind: "functiondeclaration", path: './dentist/util/log/logError.html', attributes: ["nothrow"]},
{name: 'dentist.util.log.logInfo', kind: "functiondeclaration", path: './dentist/util/log/logInfo.html', attributes: ["nothrow"]},
{name: 'dentist.util.log.logJson', kind: "functiondeclaration", path: './dentist/util/log/logJson.html', attributes: ["nothrow"]},
{name: 'dentist.util.log.logJsonDebug', kind: "functiondeclaration", path: './dentist/util/log/logJsonDebug.html', attributes: ["nothrow"]},
{name: 'dentist.util.log.logJsonDiagnostic', kind: "functiondeclaration", path: './dentist/util/log/logJsonDiagnostic.html', attributes: ["nothrow"]},
{name: 'dentist.util.log.logJsonError', kind: "functiondeclaration", path: './dentist/util/log/logJsonError.html', attributes: ["nothrow"]},
{name: 'dentist.util.log.logJsonInfo', kind: "functiondeclaration", path: './dentist/util/log/logJsonInfo.html', attributes: ["nothrow"]},
{name: 'dentist.util.log.logJsonWarn', kind: "functiondeclaration", path: './dentist/util/log/logJsonWarn.html', attributes: ["nothrow"]},
{name: 'dentist.util.log.LogLevel', kind: "enumdeclaration", path: './dentist/util/log/LogLevel.html', attributes: []},
{name: 'dentist.util.log.LogLevel.debug_', kind: "enummemberdeclaration", path: './dentist/util/log/LogLevel.html#debug_', attributes: []},
{name: 'dentist.util.log.LogLevel.diagnostic', kind: "enummemberdeclaration", path: './dentist/util/log/LogLevel.html#diagnostic', attributes: []},
{name: 'dentist.util.log.LogLevel.error', kind: "enummemberdeclaration", path: './dentist/util/log/LogLevel.html#error', attributes: []},
{name: 'dentist.util.log.LogLevel.fatal', kind: "enummemberdeclaration", path: './dentist/util/log/LogLevel.html#fatal', attributes: []},
{name: 'dentist.util.log.LogLevel.info', kind: "enummemberdeclaration", path: './dentist/util/log/LogLevel.html#info', attributes: []},
{name: 'dentist.util.log.LogLevel.none', kind: "enummemberdeclaration", path: './dentist/util/log/LogLevel.html#none', attributes: []},
{name: 'dentist.util.log.LogLevel.warn', kind: "enummemberdeclaration", path: './dentist/util/log/LogLevel.html#warn', attributes: []},
{name: 'dentist.util.log.logWarn', kind: "functiondeclaration", path: './dentist/util/log/logWarn.html', attributes: ["nothrow"]},
{name: 'dentist.util.log.ProgressMeter', kind: "structdeclaration", path: './dentist/util/log/ProgressMeter.html', attributes: []},
{name: 'dentist.util.log.ProgressMeter.elapsed', kind: "functiondeclaration", path: './dentist/util/log/ProgressMeter.elapsed.html', attributes: ["auto", "const", "nothrow", "property", "safe"]},
{name: 'dentist.util.log.ProgressMeter.estimatedTimeOfArrival', kind: "aliasdeclaration", path: './dentist/util/log/ProgressMeter.estimatedTimeOfArrival.html', attributes: []},
{name: 'dentist.util.log.ProgressMeter.eta', kind: "functiondeclaration", path: './dentist/util/log/ProgressMeter.eta.html', attributes: ["auto", "const", "nothrow", "property", "safe"]},
{name: 'dentist.util.log.ProgressMeter.Format', kind: "enumdeclaration", path: './dentist/util/log/ProgressMeter.Format.html', attributes: []},
{name: 'dentist.util.log.ProgressMeter.Format.human', kind: "enummemberdeclaration", path: './dentist/util/log/ProgressMeter.Format.html#human', attributes: []},
{name: 'dentist.util.log.ProgressMeter.Format.json', kind: "enummemberdeclaration", path: './dentist/util/log/ProgressMeter.Format.html#json', attributes: []},
{name: 'dentist.util.log.ProgressMeter.format', kind: "variabledeclaration", path: './dentist/util/log/ProgressMeter.format.html', attributes: []},
{name: 'dentist.util.log.ProgressMeter.hasEstimatedTimeOfArrival', kind: "aliasdeclaration", path: './dentist/util/log/ProgressMeter.hasEstimatedTimeOfArrival.html', attributes: []},
{name: 'dentist.util.log.ProgressMeter.hasETA', kind: "functiondeclaration", path: './dentist/util/log/ProgressMeter.hasETA.html', attributes: ["auto", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'dentist.util.log.ProgressMeter.isValidTimeUnit', kind: "enummemberdeclaration", path: './dentist/util/log/ProgressMeter.isValidTimeUnit.html', attributes: []},
{name: 'dentist.util.log.ProgressMeter.numTicks', kind: "variabledeclaration", path: './dentist/util/log/ProgressMeter.numTicks.html', attributes: []},
{name: 'dentist.util.log.ProgressMeter.output', kind: "functiondeclaration", path: './dentist/util/log/ProgressMeter.output.html', attributes: ["property"]},
{name: 'dentist.util.log.ProgressMeter.precision', kind: "variabledeclaration", path: './dentist/util/log/ProgressMeter.precision.html', attributes: []},
{name: 'dentist.util.log.ProgressMeter.printEveryMsecs', kind: "variabledeclaration", path: './dentist/util/log/ProgressMeter.printEveryMsecs.html', attributes: []},
{name: 'dentist.util.log.ProgressMeter.selectUnitFor', kind: "functiondeclaration", path: './dentist/util/log/ProgressMeter.selectUnitFor.html', attributes: ["static", "pure", "nothrow", "safe"]},
{name: 'dentist.util.log.ProgressMeter.silent', kind: "variabledeclaration", path: './dentist/util/log/ProgressMeter.silent.html', attributes: []},
{name: 'dentist.util.log.ProgressMeter.start', kind: "functiondeclaration", path: './dentist/util/log/ProgressMeter.start.html', attributes: []},
{name: 'dentist.util.log.ProgressMeter.stop', kind: "functiondeclaration", path: './dentist/util/log/ProgressMeter.stop.html', attributes: []},
{name: 'dentist.util.log.ProgressMeter.tick', kind: "functiondeclaration", path: './dentist/util/log/ProgressMeter.tick.html', attributes: []},
{name: 'dentist.util.log.ProgressMeter.ticksPer', kind: "functiondeclaration", path: './dentist/util/log/ProgressMeter.ticksPer.html', attributes: ["auto", "const", "nothrow", "property", "safe"]},
{name: 'dentist.util.log.ProgressMeter.totalTicks', kind: "variabledeclaration", path: './dentist/util/log/ProgressMeter.totalTicks.html', attributes: []},
{name: 'dentist.util.log.ProgressMeter.Unit', kind: "enumdeclaration", path: './dentist/util/log/ProgressMeter.Unit.html', attributes: []},
{name: 'dentist.util.log.ProgressMeter.Unit.auto_', kind: "enummemberdeclaration", path: './dentist/util/log/ProgressMeter.Unit.html#auto_', attributes: []},
{name: 'dentist.util.log.ProgressMeter.Unit.giga', kind: "enummemberdeclaration", path: './dentist/util/log/ProgressMeter.Unit.html#giga', attributes: []},
{name: 'dentist.util.log.ProgressMeter.Unit.kilo', kind: "enummemberdeclaration", path: './dentist/util/log/ProgressMeter.Unit.html#kilo', attributes: []},
{name: 'dentist.util.log.ProgressMeter.Unit.max', kind: "enummemberdeclaration", path: './dentist/util/log/ProgressMeter.Unit.html#max', attributes: []},
{name: 'dentist.util.log.ProgressMeter.Unit.mega', kind: "enummemberdeclaration", path: './dentist/util/log/ProgressMeter.Unit.html#mega', attributes: []},
{name: 'dentist.util.log.ProgressMeter.Unit.min', kind: "enummemberdeclaration", path: './dentist/util/log/ProgressMeter.Unit.html#min', attributes: []},
{name: 'dentist.util.log.ProgressMeter.Unit.one', kind: "enummemberdeclaration", path: './dentist/util/log/ProgressMeter.Unit.html#one', attributes: []},
{name: 'dentist.util.log.ProgressMeter.Unit.peta', kind: "enummemberdeclaration", path: './dentist/util/log/ProgressMeter.Unit.html#peta', attributes: []},
{name: 'dentist.util.log.ProgressMeter.unit', kind: "variabledeclaration", path: './dentist/util/log/ProgressMeter.unit.html', attributes: []},
{name: 'dentist.util.log.setLogLevel', kind: "functiondeclaration", path: './dentist/util/log/setLogLevel.html', attributes: []},
{name: 'dentist.util.log.shouldLog', kind: "functiondeclaration", path: './dentist/util/log/shouldLog.html', attributes: []},
{name: 'dentist.util.log.traceExecution', kind: "functiondeclaration", path: './dentist/util/log/traceExecution.html', attributes: []},
{name: 'dentist.util.math', kind: "module", path: './dentist/util/math.html', attributes: []},
{name: 'dentist.util.math.absdiff', kind: "functiondeclaration", path: './dentist/util/math/absdiff.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.util.math.add', kind: "functiondeclaration", path: './dentist/util/math/add.html', attributes: []},
{name: 'dentist.util.math.bulkAdd', kind: "functiondeclaration", path: './dentist/util/math/bulkAdd.html', attributes: []},
{name: 'dentist.util.math.ceil', kind: "functiondeclaration", path: './dentist/util/math/ceil.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.util.math.ceildiv', kind: "functiondeclaration", path: './dentist/util/math/ceildiv.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.util.math.EdgeExistsException', kind: "classdeclaration", path: './dentist/util/math/EdgeExistsException.html', attributes: []},
{name: 'dentist.util.math.EdgeExistsException.this', kind: "functiondeclaration", path: './dentist/util/math/EdgeExistsException.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dentist.util.math.EmptySetException', kind: "classdeclaration", path: './dentist/util/math/EmptySetException.html', attributes: []},
{name: 'dentist.util.math.EmptySetException.this', kind: "functiondeclaration", path: './dentist/util/math/EmptySetException.this.html', attributes: []},
{name: 'dentist.util.math.filterEdges', kind: "functiondeclaration", path: './dentist/util/math/filterEdges.html', attributes: []},
{name: 'dentist.util.math.findAllCliques', kind: "functiondeclaration", path: './dentist/util/math/findAllCliques.html', attributes: ["auto", "pure", "nothrow", "nogc", "safe"]},
{name: 'dentist.util.math.findCyclicSubgraphs', kind: "functiondeclaration", path: './dentist/util/math/findCyclicSubgraphs.html', attributes: ["auto"]},
{name: 'dentist.util.math.findMaximallyConnectedComponents', kind: "functiondeclaration", path: './dentist/util/math/findMaximallyConnectedComponents.html', attributes: ["auto"]},
{name: 'dentist.util.math.floor', kind: "functiondeclaration", path: './dentist/util/math/floor.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.util.math.Graph', kind: "structdeclaration", path: './dentist/util/math/Graph.html', attributes: []},
{name: 'dentist.util.math.Graph._edges', kind: "variabledeclaration", path: './dentist/util/math/Graph._edges.html', attributes: []},
{name: 'dentist.util.math.Graph._nodes', kind: "variabledeclaration", path: './dentist/util/math/Graph._nodes.html', attributes: []},
{name: 'dentist.util.math.Graph.bulkAddForce', kind: "functiondeclaration", path: './dentist/util/math/Graph.bulkAddForce.html', attributes: []},
{name: 'dentist.util.math.Graph.ConflictStrategy', kind: "structdeclaration", path: './dentist/util/math/Graph.ConflictStrategy.html', attributes: []},
{name: 'dentist.util.math.Graph.ConflictStrategy.error', kind: "functiondeclaration", path: './dentist/util/math/Graph.ConflictStrategy.error.html', attributes: ["static"]},
{name: 'dentist.util.math.Graph.ConflictStrategy.keep', kind: "functiondeclaration", path: './dentist/util/math/Graph.ConflictStrategy.keep.html', attributes: ["static"]},
{name: 'dentist.util.math.Graph.ConflictStrategy.replace', kind: "functiondeclaration", path: './dentist/util/math/Graph.ConflictStrategy.replace.html', attributes: ["static"]},
{name: 'dentist.util.math.Graph.ConflictStrategy.sumWeights', kind: "functiondeclaration", path: './dentist/util/math/Graph.ConflictStrategy.sumWeights.html', attributes: ["static"]},
{name: 'dentist.util.math.Graph.Edge', kind: "structdeclaration", path: './dentist/util/math/Graph.Edge.html', attributes: []},
{name: 'dentist.util.math.Graph.Edge._end', kind: "variabledeclaration", path: './dentist/util/math/Graph.Edge._end.html', attributes: []},
{name: 'dentist.util.math.Graph.Edge._start', kind: "variabledeclaration", path: './dentist/util/math/Graph.Edge._start.html', attributes: []},
{name: 'dentist.util.math.Graph.Edge.compareNodes', kind: "functiondeclaration", path: './dentist/util/math/Graph.Edge.compareNodes.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.math.Graph.Edge.end', kind: "functiondeclaration", path: './dentist/util/math/Graph.Edge.end.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'dentist.util.math.Graph.Edge.getConnectingNode', kind: "functiondeclaration", path: './dentist/util/math/Graph.Edge.getConnectingNode.html', attributes: ["const"]},
{name: 'dentist.util.math.Graph.Edge.opCmp', kind: "functiondeclaration", path: './dentist/util/math/Graph.Edge.opCmp.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.math.Graph.Edge.opEquals', kind: "functiondeclaration", path: './dentist/util/math/Graph.Edge.opEquals.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.math.Graph.Edge.payload', kind: "variabledeclaration", path: './dentist/util/math/Graph.Edge.payload.html', attributes: []},
{name: 'dentist.util.math.Graph.Edge.source', kind: "functiondeclaration", path: './dentist/util/math/Graph.Edge.source.html', attributes: ["const"]},
{name: 'dentist.util.math.Graph.Edge.start', kind: "functiondeclaration", path: './dentist/util/math/Graph.Edge.start.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'dentist.util.math.Graph.Edge.target', kind: "functiondeclaration", path: './dentist/util/math/Graph.Edge.target.html', attributes: ["const"]},
{name: 'dentist.util.math.Graph.Edge.this', kind: "functiondeclaration", path: './dentist/util/math/Graph.Edge.this.html', attributes: []},
{name: 'dentist.util.math.Graph.Edge.weight', kind: "variabledeclaration", path: './dentist/util/math/Graph.Edge.weight.html', attributes: []},
{name: 'dentist.util.math.Graph.edge', kind: "functiondeclaration", path: './dentist/util/math/Graph.edge.html', attributes: []},
{name: 'dentist.util.math.Graph.edges', kind: "functiondeclaration", path: './dentist/util/math/Graph.edges.html', attributes: ["auto", "pure", "nothrow", "property"]},
{name: 'dentist.util.math.Graph.forceAdd', kind: "functiondeclaration", path: './dentist/util/math/Graph.forceAdd.html', attributes: []},
{name: 'dentist.util.math.Graph.get', kind: "functiondeclaration", path: './dentist/util/math/Graph.get.html', attributes: ["auto", "ref"]},
{name: 'dentist.util.math.Graph.groupByNodes', kind: "functiondeclaration", path: './dentist/util/math/Graph.groupByNodes.html', attributes: ["static", "pure", "nothrow"]},
{name: 'dentist.util.math.Graph.has', kind: "functiondeclaration", path: './dentist/util/math/Graph.has.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.math.Graph.hasEdgePayload', kind: "enummemberdeclaration", path: './dentist/util/math/Graph.hasEdgePayload.html', attributes: []},
{name: 'dentist.util.math.Graph.inDegree', kind: "functiondeclaration", path: './dentist/util/math/Graph.inDegree.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.math.Graph.indexOf', kind: "functiondeclaration", path: './dentist/util/math/Graph.indexOf.html', attributes: ["const"]},
{name: 'dentist.util.math.Graph.inEdges', kind: "functiondeclaration", path: './dentist/util/math/Graph.inEdges.html', attributes: ["auto", "pure", "nothrow"]},
{name: 'dentist.util.math.Graph.isWeighted', kind: "enummemberdeclaration", path: './dentist/util/math/Graph.isWeighted.html', attributes: []},
{name: 'dentist.util.math.Graph.nodes', kind: "functiondeclaration", path: './dentist/util/math/Graph.nodes.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'dentist.util.math.Graph.opBinaryRight', kind: "functiondeclaration", path: './dentist/util/math/Graph.opBinaryRight.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.math.Graph.opOpAssign', kind: "functiondeclaration", path: './dentist/util/math/Graph.opOpAssign.html', attributes: []},
{name: 'dentist.util.math.Graph.orderByNodes', kind: "functiondeclaration", path: './dentist/util/math/Graph.orderByNodes.html', attributes: ["static", "pure", "nothrow"]},
{name: 'dentist.util.math.Graph.outDegree', kind: "functiondeclaration", path: './dentist/util/math/Graph.outDegree.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.math.Graph.outEdges', kind: "functiondeclaration", path: './dentist/util/math/Graph.outEdges.html', attributes: ["auto", "pure", "nothrow"]},
{name: 'dentist.util.math.Graph.replaceEdge', kind: "functiondeclaration", path: './dentist/util/math/Graph.replaceEdge.html', attributes: []},
{name: 'dentist.util.math.Graph.this', kind: "functiondeclaration", path: './dentist/util/math/Graph.this.html', attributes: []},
{name: 'dentist.util.math.longestIncreasingSubsequence', kind: "functiondeclaration", path: './dentist/util/math/longestIncreasingSubsequence.html', attributes: ["auto"]},
{name: 'dentist.util.math.mapEdges', kind: "functiondeclaration", path: './dentist/util/math/mapEdges.html', attributes: []},
{name: 'dentist.util.math.mean', kind: "functiondeclaration", path: './dentist/util/math/mean.html', attributes: []},
{name: 'dentist.util.math.median', kind: "functiondeclaration", path: './dentist/util/math/median.html', attributes: []},
{name: 'dentist.util.math.MissingEdgeException', kind: "classdeclaration", path: './dentist/util/math/MissingEdgeException.html', attributes: []},
{name: 'dentist.util.math.MissingEdgeException.this', kind: "functiondeclaration", path: './dentist/util/math/MissingEdgeException.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dentist.util.math.MissingNodeException', kind: "classdeclaration", path: './dentist/util/math/MissingNodeException.html', attributes: []},
{name: 'dentist.util.math.MissingNodeException.this', kind: "functiondeclaration", path: './dentist/util/math/MissingNodeException.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dentist.util.math.N', kind: "functiondeclaration", path: './dentist/util/math/N.html', attributes: []},
{name: 'dentist.util.math.NaturalNumberSet', kind: "structdeclaration", path: './dentist/util/math/NaturalNumberSet.html', attributes: []},
{name: 'dentist.util.math.NaturalNumberSet.add', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.add.html', attributes: []},
{name: 'dentist.util.math.NaturalNumberSet.capacity', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.capacity.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.util.math.NaturalNumberSet.clear', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.clear.html', attributes: ["pure"]},
{name: 'dentist.util.math.NaturalNumberSet.create', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.create.html', attributes: ["static"]},
{name: 'dentist.util.math.NaturalNumberSet.elements', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.elements.html', attributes: ["auto", "pure", "nothrow", "property", "const"]},
{name: 'dentist.util.math.NaturalNumberSet.empty', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.empty.html', attributes: ["pure", "nothrow", "const"]},
{name: 'dentist.util.math.NaturalNumberSet.has', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.has.html', attributes: ["pure", "nothrow", "const"]},
{name: 'dentist.util.math.NaturalNumberSet.intersects', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.intersects.html', attributes: ["pure", "nothrow", "const"]},
{name: 'dentist.util.math.NaturalNumberSet.maxElement', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.maxElement.html', attributes: ["const"]},
{name: 'dentist.util.math.NaturalNumberSet.minElement', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.minElement.html', attributes: ["const"]},
{name: 'dentist.util.math.NaturalNumberSet.opBinary', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.opBinary.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.math.NaturalNumberSet.opBinaryRight', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.opBinaryRight.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.math.NaturalNumberSet.remove', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.remove.html', attributes: []},
{name: 'dentist.util.math.NaturalNumberSet.reserveFor', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.reserveFor.html', attributes: []},
{name: 'dentist.util.math.NaturalNumberSet.size', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.size.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.util.math.NaturalNumberSet.this', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.this.html', attributes: []},
{name: 'dentist.util.math.NaturalNumberSet.toString', kind: "functiondeclaration", path: './dentist/util/math/NaturalNumberSet.toString.html', attributes: ["pure", "const"]},
{name: 'dentist.util.math.RoundingMode', kind: "enumdeclaration", path: './dentist/util/math/RoundingMode.html', attributes: []},
{name: 'dentist.util.math.RoundingMode.ceil', kind: "enummemberdeclaration", path: './dentist/util/math/RoundingMode.html#ceil', attributes: []},
{name: 'dentist.util.math.RoundingMode.floor', kind: "enummemberdeclaration", path: './dentist/util/math/RoundingMode.html#floor', attributes: []},
{name: 'dentist.util.math.RoundingMode.round', kind: "enummemberdeclaration", path: './dentist/util/math/RoundingMode.html#round', attributes: []},
{name: 'dentist.util.process', kind: "module", path: './dentist/util/process.html', attributes: []},
{name: 'dentist.util.process.isExecutable', kind: "functiondeclaration", path: './dentist/util/process/isExecutable.html', attributes: []},
{name: 'dentist.util.process.LinesPipe', kind: "classdeclaration", path: './dentist/util/process/LinesPipe.html', attributes: []},
{name: 'dentist.util.process.LinesPipe.currentLine', kind: "variabledeclaration", path: './dentist/util/process/LinesPipe.currentLine.html', attributes: []},
{name: 'dentist.util.process.LinesPipe.empty', kind: "functiondeclaration", path: './dentist/util/process/LinesPipe.empty.html', attributes: ["property"]},
{name: 'dentist.util.process.LinesPipe.ensureInitialized', kind: "functiondeclaration", path: './dentist/util/process/LinesPipe.ensureInitialized.html', attributes: []},
{name: 'dentist.util.process.LinesPipe.front', kind: "functiondeclaration", path: './dentist/util/process/LinesPipe.front.html', attributes: ["property"]},
{name: 'dentist.util.process.LinesPipe.launchProcess', kind: "functiondeclaration", path: './dentist/util/process/LinesPipe.launchProcess.html', attributes: []},
{name: 'dentist.util.process.LinesPipe.line_t', kind: "aliasdeclaration", path: './dentist/util/process/LinesPipe.line_t.html', attributes: []},
{name: 'dentist.util.process.LinesPipe.lineTerminator', kind: "enummemberdeclaration", path: './dentist/util/process/LinesPipe.lineTerminator.html', attributes: []},
{name: 'dentist.util.process.LinesPipe.popFront', kind: "functiondeclaration", path: './dentist/util/process/LinesPipe.popFront.html', attributes: []},
{name: 'dentist.util.process.LinesPipe.process', kind: "variabledeclaration", path: './dentist/util/process/LinesPipe.process.html', attributes: []},
{name: 'dentist.util.process.LinesPipe.processInfo', kind: "variabledeclaration", path: './dentist/util/process/LinesPipe.processInfo.html', attributes: []},
{name: 'dentist.util.process.LinesPipe.releaseProcess', kind: "functiondeclaration", path: './dentist/util/process/LinesPipe.releaseProcess.html', attributes: []},
{name: 'dentist.util.process.LinesPipe.this', kind: "functiondeclaration", path: './dentist/util/process/LinesPipe.this.html', attributes: []},
{name: 'dentist.util.process.pipeLines', kind: "functiondeclaration", path: './dentist/util/process/pipeLines.html', attributes: ["auto"]},
{name: 'dentist.util.range', kind: "module", path: './dentist/util/range.html', attributes: []},
{name: 'dentist.util.range.arrayChunks', kind: "functiondeclaration", path: './dentist/util/range/arrayChunks.html', attributes: ["auto"]},
{name: 'dentist.util.range.chunks', kind: "templatedeclaration", path: './dentist/util/range/chunks.html', attributes: []},
{name: 'dentist.util.range.chunks.chunks', kind: "functiondeclaration", path: './dentist/util/range/chunks.chunks.html', attributes: ["auto", "pure", "nothrow", "safe"]},
{name: 'dentist.util.range.Chunks', kind: "aliasdeclaration", path: './dentist/util/range/Chunks.html', attributes: []},
{name: 'dentist.util.range.Comparator', kind: "templatedeclaration", path: './dentist/util/range/Comparator.html', attributes: []},
{name: 'dentist.util.range.Comparator.compare', kind: "functiondeclaration", path: './dentist/util/range/Comparator.compare.html', attributes: []},
{name: 'dentist.util.range.Comparator.eq', kind: "functiondeclaration", path: './dentist/util/range/Comparator.eq.html', attributes: []},
{name: 'dentist.util.range.Comparator.ge', kind: "functiondeclaration", path: './dentist/util/range/Comparator.ge.html', attributes: []},
{name: 'dentist.util.range.Comparator.gt', kind: "functiondeclaration", path: './dentist/util/range/Comparator.gt.html', attributes: []},
{name: 'dentist.util.range.Comparator.le', kind: "functiondeclaration", path: './dentist/util/range/Comparator.le.html', attributes: []},
{name: 'dentist.util.range.Comparator.lt', kind: "functiondeclaration", path: './dentist/util/range/Comparator.lt.html', attributes: []},
{name: 'dentist.util.range.takeExactly', kind: "functiondeclaration", path: './dentist/util/range/takeExactly.html', attributes: []},
{name: 'dentist.util.range.tupleMap', kind: "functiondeclaration", path: './dentist/util/range/tupleMap.html', attributes: ["auto"]},
{name: 'dentist.util.range.wrapLines', kind: "functiondeclaration", path: './dentist/util/range/wrapLines.html', attributes: ["auto"]},
{name: 'dentist.util.region', kind: "module", path: './dentist/util/region.html', attributes: []},
{name: 'dentist.util.region.convexHull', kind: "functiondeclaration", path: './dentist/util/region/convexHull.html', attributes: []},
{name: 'dentist.util.region.empty', kind: "functiondeclaration", path: './dentist/util/region/empty.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.util.region.EmptyRegionException', kind: "classdeclaration", path: './dentist/util/region/EmptyRegionException.html', attributes: []},
{name: 'dentist.util.region.EmptyRegionException.this', kind: "functiondeclaration", path: './dentist/util/region/EmptyRegionException.this.html', attributes: []},
{name: 'dentist.util.region.enforceMatchingTags', kind: "functiondeclaration", path: './dentist/util/region/enforceMatchingTags.html', attributes: ["pure"]},
{name: 'dentist.util.region.enforceNonEmpty', kind: "functiondeclaration", path: './dentist/util/region/enforceNonEmpty.html', attributes: []},
{name: 'dentist.util.region.findTilings', kind: "functiondeclaration", path: './dentist/util/region/findTilings.html', attributes: ["auto"]},
{name: 'dentist.util.region.isTaggable', kind: "enummemberdeclaration", path: './dentist/util/region/isTaggable.html', attributes: []},
{name: 'dentist.util.region.min', kind: "functiondeclaration", path: './dentist/util/region/min.html', attributes: ["auto"]},
{name: 'dentist.util.region.MismatchingTagsException', kind: "classdeclaration", path: './dentist/util/region/MismatchingTagsException.html', attributes: []},
{name: 'dentist.util.region.MismatchingTagsException.tags', kind: "variabledeclaration", path: './dentist/util/region/MismatchingTagsException.tags.html', attributes: []},
{name: 'dentist.util.region.MismatchingTagsException.this', kind: "functiondeclaration", path: './dentist/util/region/MismatchingTagsException.this.html', attributes: []},
{name: 'dentist.util.region.Region', kind: "structdeclaration", path: './dentist/util/region/Region.html', attributes: []},
{name: 'dentist.util.region.Region._intervals', kind: "variabledeclaration", path: './dentist/util/region/Region._intervals.html', attributes: []},
{name: 'dentist.util.region.Region.empty', kind: "functiondeclaration", path: './dentist/util/region/Region.empty.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.region.Region.fromJson', kind: "functiondeclaration", path: './dentist/util/region/Region.fromJson.html', attributes: ["static", "safe"]},
{name: 'dentist.util.region.Region.getDifferenceCandidates', kind: "functiondeclaration", path: './dentist/util/region/Region.getDifferenceCandidates.html', attributes: ["auto", "const", "pure", "nothrow"]},
{name: 'dentist.util.region.Region.includes', kind: "aliasdeclaration", path: './dentist/util/region/Region.includes.html', attributes: []},
{name: 'dentist.util.region.Region.intervals', kind: "functiondeclaration", path: './dentist/util/region/Region.intervals.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'dentist.util.region.Region.normalize', kind: "functiondeclaration", path: './dentist/util/region/Region.normalize.html', attributes: []},
{name: 'dentist.util.region.Region.numberSup', kind: "enummemberdeclaration", path: './dentist/util/region/Region.numberSup.html', attributes: []},
{name: 'dentist.util.region.Region.opBinary', kind: "functiondeclaration", path: './dentist/util/region/Region.opBinary.html', attributes: ["const"]},
{name: 'dentist.util.region.Region.opBinaryRight', kind: "functiondeclaration", path: './dentist/util/region/Region.opBinaryRight.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.region.Region.opOpAssign', kind: "functiondeclaration", path: './dentist/util/region/Region.opOpAssign.html', attributes: []},
{name: 'dentist.util.region.Region.releaseIntervals', kind: "functiondeclaration", path: './dentist/util/region/Region.releaseIntervals.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.util.region.Region.size', kind: "functiondeclaration", path: './dentist/util/region/Region.size.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.region.Region.TaggedInterval', kind: "structdeclaration", path: './dentist/util/region/Region.TaggedInterval.html', attributes: []},
{name: 'dentist.util.region.Region.TaggedInterval.begin', kind: "variabledeclaration", path: './dentist/util/region/Region.TaggedInterval.begin.html', attributes: []},
{name: 'dentist.util.region.Region.TaggedInterval.contains', kind: "functiondeclaration", path: './dentist/util/region/Region.TaggedInterval.contains.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.region.Region.TaggedInterval.convexHull', kind: "functiondeclaration", path: './dentist/util/region/Region.TaggedInterval.convexHull.html', attributes: ["static"]},
{name: 'dentist.util.region.Region.TaggedInterval.empty', kind: "functiondeclaration", path: './dentist/util/region/Region.TaggedInterval.empty.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'dentist.util.region.Region.TaggedInterval.end', kind: "variabledeclaration", path: './dentist/util/region/Region.TaggedInterval.end.html', attributes: []},
{name: 'dentist.util.region.Region.TaggedInterval.intersects', kind: "functiondeclaration", path: './dentist/util/region/Region.TaggedInterval.intersects.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.region.Region.TaggedInterval.isStrictlyAfter', kind: "functiondeclaration", path: './dentist/util/region/Region.TaggedInterval.isStrictlyAfter.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.region.Region.TaggedInterval.isStrictlyBefore', kind: "functiondeclaration", path: './dentist/util/region/Region.TaggedInterval.isStrictlyBefore.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.region.Region.TaggedInterval.opBinary', kind: "functiondeclaration", path: './dentist/util/region/Region.TaggedInterval.opBinary.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.region.Region.TaggedInterval.opCmp', kind: "functiondeclaration", path: './dentist/util/region/Region.TaggedInterval.opCmp.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.region.Region.TaggedInterval.opOpAssign', kind: "functiondeclaration", path: './dentist/util/region/Region.TaggedInterval.opOpAssign.html', attributes: []},
{name: 'dentist.util.region.Region.TaggedInterval.size', kind: "functiondeclaration", path: './dentist/util/region/Region.TaggedInterval.size.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'dentist.util.region.Region.TaggedInterval.tag', kind: "variabledeclaration", path: './dentist/util/region/Region.TaggedInterval.tag.html', attributes: []},
{name: 'dentist.util.region.Region.TaggedPoint', kind: "structdeclaration", path: './dentist/util/region/Region.TaggedPoint.html', attributes: []},
{name: 'dentist.util.region.Region.TaggedPoint.opBinary', kind: "functiondeclaration", path: './dentist/util/region/Region.TaggedPoint.opBinary.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.region.Region.TaggedPoint.opCmp', kind: "functiondeclaration", path: './dentist/util/region/Region.TaggedPoint.opCmp.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.region.Region.TaggedPoint.tag', kind: "variabledeclaration", path: './dentist/util/region/Region.TaggedPoint.tag.html', attributes: []},
{name: 'dentist.util.region.Region.TaggedPoint.value', kind: "variabledeclaration", path: './dentist/util/region/Region.TaggedPoint.value.html', attributes: []},
{name: 'dentist.util.region.Region.this', kind: "functiondeclaration", path: './dentist/util/region/Region.this.html', attributes: []},
{name: 'dentist.util.region.Region.toJson', kind: "functiondeclaration", path: './dentist/util/region/Region.toJson.html', attributes: ["const", "safe"]},
{name: 'dentist.util.region.sup', kind: "functiondeclaration", path: './dentist/util/region/sup.html', attributes: ["auto"]},
{name: 'dentist.util.region.TagType', kind: "aliasdeclaration", path: './dentist/util/region/TagType.html', attributes: []},
{name: 'dentist.util.region.Tiling', kind: "structdeclaration", path: './dentist/util/region/Tiling.html', attributes: []},
{name: 'dentist.util.region.Tiling.elements', kind: "variabledeclaration", path: './dentist/util/region/Tiling.elements.html', attributes: []},
{name: 'dentist.util.region.Tiling.region', kind: "variabledeclaration", path: './dentist/util/region/Tiling.region.html', attributes: []},
{name: 'dentist.util.region.Tiling.totalOverlap', kind: "variabledeclaration", path: './dentist/util/region/Tiling.totalOverlap.html', attributes: []},
{name: 'dentist.util.region.union_', kind: "functiondeclaration", path: './dentist/util/region/union_.html', attributes: ["auto"]},
{name: 'dentist.util.saturationmath', kind: "module", path: './dentist/util/saturationmath.html', attributes: []},
{name: 'dentist.util.saturationmath.saturatedAdd', kind: "functiondeclaration", path: './dentist/util/saturationmath/saturatedAdd.html', attributes: []},
{name: 'dentist.util.saturationmath.saturatedInfinity', kind: "enummemberdeclaration", path: './dentist/util/saturationmath/saturatedInfinity.html', attributes: []},
{name: 'dentist.util.saturationmath.saturatedMinusInfinity', kind: "templatedeclaration", path: './dentist/util/saturationmath/saturatedMinusInfinity.html', attributes: []},
{name: 'dentist.util.saturationmath.saturatedMinusInfinity.saturatedInfinty', kind: "enummemberdeclaration", path: './dentist/util/saturationmath/saturatedMinusInfinity.saturatedInfinty.html', attributes: []},
{name: 'dentist.util.string', kind: "module", path: './dentist/util/string.html', attributes: []},
{name: 'dentist.util.string.AlignmentException', kind: "classdeclaration", path: './dentist/util/string/AlignmentException.html', attributes: []},
{name: 'dentist.util.string.dashCaseCT', kind: "enummemberdeclaration", path: './dentist/util/string/dashCaseCT.html', attributes: []},
{name: 'dentist.util.string.EditOp', kind: "enumdeclaration", path: './dentist/util/string/EditOp.html', attributes: []},
{name: 'dentist.util.string.EditOp.deletetion', kind: "enummemberdeclaration", path: './dentist/util/string/EditOp.html#deletetion', attributes: []},
{name: 'dentist.util.string.EditOp.insertion', kind: "enummemberdeclaration", path: './dentist/util/string/EditOp.html#insertion', attributes: []},
{name: 'dentist.util.string.EditOp.substitution', kind: "enummemberdeclaration", path: './dentist/util/string/EditOp.html#substitution', attributes: []},
{name: 'dentist.util.string.findAlignment', kind: "functiondeclaration", path: './dentist/util/string/findAlignment.html', attributes: []},
{name: 'dentist.util.string.indent', kind: "functiondeclaration", path: './dentist/util/string/indent.html', attributes: []},
{name: 'dentist.util.string.longestInputsLength', kind: "functiondeclaration", path: './dentist/util/string/longestInputsLength.html', attributes: []},
{name: 'dentist.util.string.memoryRequired', kind: "functiondeclaration", path: './dentist/util/string/memoryRequired.html', attributes: []},
{name: 'dentist.util.string.score_t', kind: "aliasdeclaration", path: './dentist/util/string/score_t.html', attributes: []},
{name: 'dentist.util.string.SequenceAlignment', kind: "structdeclaration", path: './dentist/util/string/SequenceAlignment.html', attributes: []},
{name: 'dentist.util.string.SequenceAlignment.computeScore', kind: "functiondeclaration", path: './dentist/util/string/SequenceAlignment.computeScore.html', attributes: ["const", "pure"]},
{name: 'dentist.util.string.SequenceAlignment.editPath', kind: "variabledeclaration", path: './dentist/util/string/SequenceAlignment.editPath.html', attributes: []},
{name: 'dentist.util.string.SequenceAlignment.freeShift', kind: "variabledeclaration", path: './dentist/util/string/SequenceAlignment.freeShift.html', attributes: []},
{name: 'dentist.util.string.SequenceAlignment.getScore', kind: "aliasdeclaration", path: './dentist/util/string/SequenceAlignment.getScore.html', attributes: []},
{name: 'dentist.util.string.SequenceAlignment.indelPenalty', kind: "variabledeclaration", path: './dentist/util/string/SequenceAlignment.indelPenalty.html', attributes: []},
{name: 'dentist.util.string.SequenceAlignment.isValid', kind: "functiondeclaration", path: './dentist/util/string/SequenceAlignment.isValid.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.string.SequenceAlignment.opDollar', kind: "functiondeclaration", path: './dentist/util/string/SequenceAlignment.opDollar.html', attributes: ["auto", "const", "pure", "nothrow"]},
{name: 'dentist.util.string.SequenceAlignment.opIndex', kind: "functiondeclaration", path: './dentist/util/string/SequenceAlignment.opIndex.html', attributes: ["auto", "inout", "pure", "nothrow"]},
{name: 'dentist.util.string.SequenceAlignment.opSlice', kind: "functiondeclaration", path: './dentist/util/string/SequenceAlignment.opSlice.html', attributes: ["const", "pure", "nothrow"]},
{name: 'dentist.util.string.SequenceAlignment.partial', kind: "functiondeclaration", path: './dentist/util/string/SequenceAlignment.partial.html', attributes: ["auto", "inout", "pure", "nothrow"]},
{name: 'dentist.util.string.SequenceAlignment.query', kind: "variabledeclaration", path: './dentist/util/string/SequenceAlignment.query.html', attributes: []},
{name: 'dentist.util.string.SequenceAlignment.reference', kind: "variabledeclaration", path: './dentist/util/string/SequenceAlignment.reference.html', attributes: []},
{name: 'dentist.util.string.SequenceAlignment.score', kind: "variabledeclaration", path: './dentist/util/string/SequenceAlignment.score.html', attributes: []},
{name: 'dentist.util.string.SequenceAlignment.stripInsertions', kind: "functiondeclaration", path: './dentist/util/string/SequenceAlignment.stripInsertions.html', attributes: ["auto", "inout", "pure", "nothrow"]},
{name: 'dentist.util.string.SequenceAlignment.toString', kind: "functiondeclaration", path: './dentist/util/string/SequenceAlignment.toString.html', attributes: ["const", "pure"]},
{name: 'dentist.util.string.SequenceAlignment.walkEditOps', kind: "functiondeclaration", path: './dentist/util/string/SequenceAlignment.walkEditOps.html', attributes: ["auto", "const", "pure", "nothrow"]},
{name: 'dentist.util.string.SequenceAlignment.WalkResult', kind: "structdeclaration", path: './dentist/util/string/SequenceAlignment.WalkResult.html', attributes: []},
{name: 'dentist.util.string.SequenceAlignment.WalkResult.computedScore', kind: "variabledeclaration", path: './dentist/util/string/SequenceAlignment.WalkResult.computedScore.html', attributes: []},
{name: 'dentist.util.string.SequenceAlignment.WalkResult.i', kind: "variabledeclaration", path: './dentist/util/string/SequenceAlignment.WalkResult.i.html', attributes: []},
{name: 'dentist.util.string.SequenceAlignment.WalkResult.j', kind: "variabledeclaration", path: './dentist/util/string/SequenceAlignment.WalkResult.j.html', attributes: []},
{name: 'dentist.util.string.Strip', kind: "enumdeclaration", path: './dentist/util/string/Strip.html', attributes: []},
{name: 'dentist.util.string.Strip.back', kind: "enummemberdeclaration", path: './dentist/util/string/Strip.html#back', attributes: []},
{name: 'dentist.util.string.Strip.both', kind: "enummemberdeclaration", path: './dentist/util/string/Strip.html#both', attributes: []},
{name: 'dentist.util.string.Strip.front', kind: "enummemberdeclaration", path: './dentist/util/string/Strip.html#front', attributes: []},
{name: 'dentist.util.string.Strip.none', kind: "enummemberdeclaration", path: './dentist/util/string/Strip.html#none', attributes: []},
{name: 'dentist.util.string.toString', kind: "functiondeclaration", path: './dentist/util/string/toString.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.util.tempfile', kind: "module", path: './dentist/util/tempfile.html', attributes: []},
{name: 'dentist.util.tempfile.mkdtemp', kind: "functiondeclaration", path: './dentist/util/tempfile/mkdtemp.html', attributes: ["trusted"]},
{name: 'dentist.util.tempfile.mkstemp', kind: "functiondeclaration", path: './dentist/util/tempfile/mkstemp.html', attributes: ["trusted"]},
{name: 'dentist.commandline', kind: "module", path: './dentist/commandline.html', attributes: []},
{name: 'dentist.commandline.assertExternalToolsAvailable', kind: "functiondeclaration", path: './dentist/commandline/assertExternalToolsAvailable.html', attributes: []},
{name: 'dentist.commandline.BaseOptions', kind: "structdeclaration", path: './dentist/commandline/BaseOptions.html', attributes: []},
{name: 'dentist.commandline.BaseOptions.command', kind: "variabledeclaration", path: './dentist/commandline/BaseOptions.command.html', attributes: []},
{name: 'dentist.commandline.BaseOptions.commandOptions', kind: "variabledeclaration", path: './dentist/commandline/BaseOptions.commandOptions.html', attributes: []},
{name: 'dentist.commandline.BaseOptions.help', kind: "variabledeclaration", path: './dentist/commandline/BaseOptions.help.html', attributes: []},
{name: 'dentist.commandline.BaseOptions.listCommands', kind: "variabledeclaration", path: './dentist/commandline/BaseOptions.listCommands.html', attributes: []},
{name: 'dentist.commandline.BaseOptions.listDependencies', kind: "variabledeclaration", path: './dentist/commandline/BaseOptions.listDependencies.html', attributes: []},
{name: 'dentist.commandline.BaseOptions.listOptions', kind: "variabledeclaration", path: './dentist/commandline/BaseOptions.listOptions.html', attributes: []},
{name: 'dentist.commandline.BaseOptions.requestUsage', kind: "functiondeclaration", path: './dentist/commandline/BaseOptions.requestUsage.html', attributes: []},
{name: 'dentist.commandline.BaseOptions.version_', kind: "variabledeclaration", path: './dentist/commandline/BaseOptions.version_.html', attributes: []},
{name: 'dentist.commandline.commandsSummary', kind: "enummemberdeclaration", path: './dentist/commandline/commandsSummary.html', attributes: []},
{name: 'dentist.commandline.commandSummary', kind: "enummemberdeclaration", path: './dentist/commandline/commandSummary.html', attributes: []},
{name: 'dentist.commandline.OptionsFor', kind: "structdeclaration", path: './dentist/commandline/OptionsFor.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.addAdditionalConsensusAlignmentOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.addAdditionalConsensusAlignmentOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.addAdditionalDaccordOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.addAdditionalDaccordOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.addAdditionalReadsDustOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.addAdditionalReadsDustOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.addAdditionalReadsVsReadsAlignmentOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.addAdditionalReadsVsReadsAlignmentOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.addAdditionalRefDustOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.addAdditionalRefDustOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.addAdditionalRefVsReadsAlignmentOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.addAdditionalRefVsReadsAlignmentOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.addAdditionalSelfAlignmentOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.addAdditionalSelfAlignmentOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.addAdditionalTandemAlignmentOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.addAdditionalTandemAlignmentOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.additionalConsensusAlignmentOptions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.additionalConsensusAlignmentOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.additionalDaccordOptions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.additionalDaccordOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.additionalReadsDustOptions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.additionalReadsDustOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.additionalReadsVsReadsAlignmentOptions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.additionalReadsVsReadsAlignmentOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.additionalRefDustOptions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.additionalRefDustOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.additionalRefVsReadsAlignmentOptions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.additionalRefVsReadsAlignmentOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.additionalSelfAlignmentOptions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.additionalSelfAlignmentOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.additionalTandemAlignmentOptions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.additionalTandemAlignmentOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.addMask', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.addMask.html', attributes: ["pure"]},
{name: 'dentist.commandline.OptionsFor.addRevertOption', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.addRevertOption.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.agpFile', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.agpFile.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.agpVersion', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.agpVersion.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.allowSingleReads', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.allowSingleReads.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.anchorSkippingPileUpsOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.anchorSkippingPileUpsOptions.html', attributes: ["auto", "const", "property"]},
{name: 'dentist.commandline.OptionsFor.AnchorSkippingPileUpsOptions', kind: "structdeclaration", path: './dentist/commandline/OptionsFor.AnchorSkippingPileUpsOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.AnchorSkippingPileUpsOptions.damapperOptions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.AnchorSkippingPileUpsOptions.damapperOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.AnchorSkippingPileUpsOptions.dbsplitOptions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.AnchorSkippingPileUpsOptions.dbsplitOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.AnchorSkippingPileUpsOptions.tmpdir', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.AnchorSkippingPileUpsOptions.tmpdir.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.argReadsMultiplicity', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.argReadsMultiplicity.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.assemblyGraphFile', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.assemblyGraphFile.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.badFraction', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.badFraction.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.bedFile', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.bedFile.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.bedFileName', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.bedFileName.html', attributes: ["const", "property"]},
{name: 'dentist.commandline.OptionsFor.bestPileUpMargin', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.bestPileUpMargin.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.bucketSize', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.bucketSize.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.cacheOnly', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.cacheOnly.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.chainedAlignments', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.chainedAlignments.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.chainingOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.chainingOptions.html', attributes: ["const", "property"]},
{name: 'dentist.commandline.OptionsFor.closedGapsBedFile', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.closedGapsBedFile.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.command', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.command.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.commandName', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.commandName.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.configFile', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.configFile.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.configHelpString', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.configHelpString.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.consensusOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.consensusOptions.html', attributes: ["auto", "const", "property"]},
{name: 'dentist.commandline.OptionsFor.ConsensusOptions', kind: "structdeclaration", path: './dentist/commandline/OptionsFor.ConsensusOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.ConsensusOptions.daccordOptions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.ConsensusOptions.daccordOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.ConsensusOptions.dalignerOptions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.ConsensusOptions.dalignerOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.ConsensusOptions.dbdustOptions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.ConsensusOptions.dbdustOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.ConsensusOptions.dbsplitOptions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.ConsensusOptions.dbsplitOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.ConsensusOptions.properAlignmentAllowance', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.ConsensusOptions.properAlignmentAllowance.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.ConsensusOptions.tmpdir', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.ConsensusOptions.tmpdir.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.contigAlignmentsCache', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.contigAlignmentsCache.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.contigCutoff', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.contigCutoff.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.contigsExtraName', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.contigsExtraName.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.coordStrings', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.coordStrings.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.coverageBoundsReads', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.coverageBoundsReads.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.coverageBoundsSelf', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.coverageBoundsSelf.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.createProgressMeter', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.createProgressMeter.html', attributes: ["const", "safe"]},
{name: 'dentist.commandline.OptionsFor.cropAlignment', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.cropAlignment.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.cropAmbiguous', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.cropAmbiguous.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.daccordOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.daccordOptions.html', attributes: ["auto", "const", "property"]},
{name: 'dentist.commandline.OptionsFor.dataComments', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.dataComments.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.dbAlignmentFile', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.dbAlignmentFile.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.debugRepeatMasks', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.debugRepeatMasks.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.defaultMinSpanningReads', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.defaultMinSpanningReads.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.defaultValue', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.defaultValue.html', attributes: ["auto", "pure", "nothrow"]},
{name: 'dentist.commandline.OptionsFor.dustMask', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.dustMask.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.executableVersion', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.executableVersion.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.existingGapBonus', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.existingGapBonus.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.fastaLineWidth', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.fastaLineWidth.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.fixDefaultDustMask', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.fixDefaultDustMask.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.flankingContigsRepeatMaskName', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.flankingContigsRepeatMaskName.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.gapDetailsContext', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.gapDetailsContext.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.gapDetailsJson', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.gapDetailsJson.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.hasMaxCoverageReads', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hasMaxCoverageReads.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.commandline.OptionsFor.hasMaxImproperCoverageReads', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hasMaxImproperCoverageReads.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.commandline.OptionsFor.hasMinCoverageReads', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hasMinCoverageReads.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.commandline.OptionsFor.hasReadCoverage', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hasReadCoverage.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.commandline.OptionsFor.hasReadsDb', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hasReadsDb.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'dentist.commandline.OptionsFor.help', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.help.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.hookCleanTmpdir', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hookCleanTmpdir.html', attributes: ["const"]},
{name: 'dentist.commandline.OptionsFor.hookCreateTmpdir', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hookCreateTmpdir.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.hookEnsurePresenceOfBatchRange', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hookEnsurePresenceOfBatchRange.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.hookEnsurePresenceOfBatchRanges', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hookEnsurePresenceOfBatchRanges.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.hookEnsurePresenceOfMinScore', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hookEnsurePresenceOfMinScore.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.hookEnsurePresenceOfProperAlignmentAllowance', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hookEnsurePresenceOfProperAlignmentAllowance.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.hookGetTracePointDistance', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hookGetTracePointDistance.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.hookInitDaccordThreads', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hookInitDaccordThreads.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.hookInitLogLevel', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hookInitLogLevel.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.hookInitThreads', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hookInitThreads.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.hookOptimizeBatchRanges', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hookOptimizeBatchRanges.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.hookParseCoordStrings', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hookParseCoordStrings.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.hookReadSkipGapsFile', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hookReadSkipGapsFile.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.hookSortSkipGaps', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.hookSortSkipGaps.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.improperCoverageBoundsReads', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.improperCoverageBoundsReads.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.increaseVerbosity', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.increaseVerbosity.html', attributes: ["pure"]},
{name: 'dentist.commandline.OptionsFor.initOnlyFlags', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.initOnlyFlags.html', attributes: ["pure", "nothrow"]},
{name: 'dentist.commandline.OptionsFor.inMask', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.inMask.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.inMasks', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.inMasks.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.insertionsFile', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.insertionsFile.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.insertionsFiles', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.insertionsFiles.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.intermediatePileUpsStem', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.intermediatePileUpsStem.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.joinPolicy', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.joinPolicy.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.keepTemp', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.keepTemp.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.mappedRegionsMask', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.mappedRegionsMask.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.masks', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.masks.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.maxAlignmentError', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.maxAlignmentError.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.maxBubbleResolverIterations', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.maxBubbleResolverIterations.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.maxBubbleSize', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.maxBubbleSize.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.maxChainGapBps', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.maxChainGapBps.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.maxCoverageReads', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.maxCoverageReads.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.maxCoverageSelf', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.maxCoverageSelf.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.maxImperfectContigError', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.maxImperfectContigError.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.maxImproperCoverageReads', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.maxImproperCoverageReads.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.maxIndelBps', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.maxIndelBps.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.maxInsertionError', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.maxInsertionError.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.maxRelativeOverlap', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.maxRelativeOverlap.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.mergedInsertionsFile', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.mergedInsertionsFile.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.mergeExtensions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.mergeExtensions.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'dentist.commandline.OptionsFor.minAnchorLength', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.minAnchorLength.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.minCoverageReads', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.minCoverageReads.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.minExtensionLength', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.minExtensionLength.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.minGapSize', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.minGapSize.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.minIntervalSize', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.minIntervalSize.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.minReadsPerPileUp', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.minReadsPerPileUp.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.minRelativeScore', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.minRelativeScore.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.minScore', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.minScore.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.minSpanningReads', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.minSpanningReads.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.needChainingOptions', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.needChainingOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.needTmpdir', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.needTmpdir.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.nodePerContig', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.nodePerContig.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.noHighlightInsertions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.noHighlightInsertions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.noMergeExtensions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.noMergeExtensions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.numArguments', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.numArguments.html', attributes: ["auto", "static", "pure", "nothrow"]},
{name: 'dentist.commandline.OptionsFor.numAuxiliaryThreads', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.numAuxiliaryThreads.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.numBubblesEscapeNodes', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.numBubblesEscapeNodes.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.numIntermediateContigs', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.numIntermediateContigs.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.numPileUps', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.numPileUps.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'dentist.commandline.OptionsFor.numReferenceContigs', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.numReferenceContigs.html', attributes: ["inout", "property"]},
{name: 'dentist.commandline.OptionsFor.numThreads', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.numThreads.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.onlyFlag', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.onlyFlag.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.OnlyFlag', kind: "enumdeclaration", path: './dentist/commandline/OptionsFor.OnlyFlag.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.OnlyFlag.both', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.OnlyFlag.html#both', attributes: []},
{name: 'dentist.commandline.OptionsFor.OnlyFlag.extending', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.OnlyFlag.html#extending', attributes: []},
{name: 'dentist.commandline.OptionsFor.OnlyFlag.spanning', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.OnlyFlag.html#spanning', attributes: []},
{name: 'dentist.commandline.OptionsFor.OnlyFlags', kind: "aliasdeclaration", path: './dentist/commandline/OptionsFor.OnlyFlags.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.onlyFlags', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.onlyFlags.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.openBedFile', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.openBedFile.html', attributes: ["const"]},
{name: 'dentist.commandline.OptionsFor.outMask', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.outMask.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.outputCoordinates', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.outputCoordinates.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.parseArguments', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.parseArguments.html', attributes: ["auto"]},
{name: 'dentist.commandline.OptionsFor.parseGapSpec', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.parseGapSpec.html', attributes: ["static", "pure"]},
{name: 'dentist.commandline.OptionsFor.parsePileUpBatch', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.parsePileUpBatch.html', attributes: ["pure"]},
{name: 'dentist.commandline.OptionsFor.parsePileUpIdxSpec', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.parsePileUpIdxSpec.html', attributes: ["static", "pure"]},
{name: 'dentist.commandline.OptionsFor.parseReferenceContigBatch', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.parseReferenceContigBatch.html', attributes: ["pure"]},
{name: 'dentist.commandline.OptionsFor.parseSkipGaps', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.parseSkipGaps.html', attributes: ["pure"]},
{name: 'dentist.commandline.OptionsFor.pileUpAlignmentOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.pileUpAlignmentOptions.html', attributes: ["const", "property"]},
{name: 'dentist.commandline.OptionsFor.pileUpBatches', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.pileUpBatches.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.pileUpDustOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.pileUpDustOptions.html', attributes: ["const", "property"]},
{name: 'dentist.commandline.OptionsFor.pileUpLength', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.pileUpLength.html', attributes: ["inout", "property"]},
{name: 'dentist.commandline.OptionsFor.pileUpsFile', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.pileUpsFile.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.ploidy', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.ploidy.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.postConsensusAlignmentOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.postConsensusAlignmentOptions.html', attributes: ["const", "property"]},
{name: 'dentist.commandline.OptionsFor.printProgress', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.printProgress.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.printProgressEvery', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.printProgressEvery.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.progressFormat', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.progressFormat.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.properAlignmentAllowance', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.properAlignmentAllowance.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.quiet', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.quiet.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.readCoverage', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.readCoverage.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.readsAlignmentFile', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.readsAlignmentFile.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.readsDb', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.readsDb.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.readsExtraName', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.readsExtraName.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.readsMap', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.readsMap.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.recoverImperfectContigs', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.recoverImperfectContigs.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.recoverImperfectContigsAlignmentOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.recoverImperfectContigsAlignmentOptions.html', attributes: ["const", "property"]},
{name: 'dentist.commandline.OptionsFor.refDb', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.refDb.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.referenceContigBatch', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.referenceContigBatch.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.referenceContigBatchSize', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.referenceContigBatchSize.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'dentist.commandline.OptionsFor.refVsReadsAlignmentOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.refVsReadsAlignmentOptions.html', attributes: ["const", "property"]},
{name: 'dentist.commandline.OptionsFor.regionContext', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.regionContext.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.regions', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.regions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.repeatMask', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.repeatMask.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.repeatMasks', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.repeatMasks.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.reportAll', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.reportAll.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.requestUsage', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.requestUsage.html', attributes: ["pure"]},
{name: 'dentist.commandline.OptionsFor.resultDb', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.resultDb.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.resultFile', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.resultFile.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.revertOption', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.revertOption.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.revertOptionNames', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.revertOptionNames.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.revertOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.revertOptions.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.selfAlignmentOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.selfAlignmentOptions.html', attributes: ["const", "property"]},
{name: 'dentist.commandline.OptionsFor.setCoverageBoundsReads', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.setCoverageBoundsReads.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.setCoverageBoundsSelf', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.setCoverageBoundsSelf.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.setImproperCoverageBoundsReads', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.setImproperCoverageBoundsReads.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.skipGaps', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.skipGaps.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.skipGapsFile', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.skipGapsFile.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.tandemAlignmentOptions', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.tandemAlignmentOptions.html', attributes: ["const", "property"]},
{name: 'dentist.commandline.OptionsFor.tmpdir', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.tmpdir.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.tmpdirTemplate', kind: "enummemberdeclaration", path: './dentist/commandline/OptionsFor.tmpdirTemplate.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.tracePointDistance', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.tracePointDistance.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.trueAssemblyDb', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.trueAssemblyDb.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.useJson', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.useJson.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.validatePileUpBatches', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.validatePileUpBatches.html', attributes: ["static"]},
{name: 'dentist.commandline.OptionsFor.validatePileUpBatchesDontIntersect', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.validatePileUpBatchesDontIntersect.html', attributes: ["static"]},
{name: 'dentist.commandline.OptionsFor.validatePileUpBatchRange', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.validatePileUpBatchRange.html', attributes: ["static"]},
{name: 'dentist.commandline.OptionsFor.validatePileUpSkipGap', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.validatePileUpSkipGap.html', attributes: ["static"]},
{name: 'dentist.commandline.OptionsFor.validateReadsDb', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.validateReadsDb.html', attributes: ["static"]},
{name: 'dentist.commandline.OptionsFor.validateReferenceContigBatchRange', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.validateReferenceContigBatchRange.html', attributes: ["static"]},
{name: 'dentist.commandline.OptionsFor.validateSkipGaps', kind: "functiondeclaration", path: './dentist/commandline/OptionsFor.validateSkipGaps.html', attributes: ["static"]},
{name: 'dentist.commandline.OptionsFor.verbosity', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.verbosity.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.weakCoverageMask', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.weakCoverageMask.html', attributes: []},
{name: 'dentist.commandline.OptionsFor.weakCoverageWindow', kind: "variabledeclaration", path: './dentist/commandline/OptionsFor.weakCoverageWindow.html', attributes: []},
{name: 'dentist.commandline.printListOfAllOptions', kind: "functiondeclaration", path: './dentist/commandline/printListOfAllOptions.html', attributes: []},
{name: 'dentist.commandline.ReturnCode', kind: "enumdeclaration", path: './dentist/commandline/ReturnCode.html', attributes: []},
{name: 'dentist.commandline.ReturnCode.commandlineError', kind: "enummemberdeclaration", path: './dentist/commandline/ReturnCode.html#commandlineError', attributes: []},
{name: 'dentist.commandline.ReturnCode.ok', kind: "enummemberdeclaration", path: './dentist/commandline/ReturnCode.html#ok', attributes: []},
{name: 'dentist.commandline.ReturnCode.runtimeError', kind: "enummemberdeclaration", path: './dentist/commandline/ReturnCode.html#runtimeError', attributes: []},
{name: 'dentist.commandline.run', kind: "functiondeclaration", path: './dentist/commandline/run.html', attributes: []},
{name: 'dentist.commandline.CleanUp', kind: "structdeclaration", path: './dentist/commandline/CleanUp.html', attributes: []},
{name: 'dentist.commandline.CleanUp.priority', kind: "variabledeclaration", path: './dentist/commandline/CleanUp.priority.html', attributes: []},
{name: 'dentist.commandline.cleanUp', kind: "functiondeclaration", path: './dentist/commandline/cleanUp.html', attributes: []},
{name: 'dentist.commandline.CLIException', kind: "classdeclaration", path: './dentist/commandline/CLIException.html', attributes: []},
{name: 'dentist.commandline.cmpPriority', kind: "templatedeclaration", path: './dentist/commandline/cmpPriority.html', attributes: []},
{name: 'dentist.commandline.cmpPriority.cmpPriority', kind: "enummemberdeclaration", path: './dentist/commandline/cmpPriority.cmpPriority.html', attributes: []},
{name: 'dentist.commandline.getUDA', kind: "enummemberdeclaration", path: './dentist/commandline/getUDA.html', attributes: []},
{name: 'dentist.commandline.parseCoordString', kind: "functiondeclaration", path: './dentist/commandline/parseCoordString.html', attributes: []},
{name: 'dentist.commandline.parseRange', kind: "functiondeclaration", path: './dentist/commandline/parseRange.html', attributes: ["pure"]},
{name: 'dentist.commandline.PostValidate', kind: "structdeclaration", path: './dentist/commandline/PostValidate.html', attributes: []},
{name: 'dentist.commandline.PostValidate.priority', kind: "variabledeclaration", path: './dentist/commandline/PostValidate.priority.html', attributes: []},
{name: 'dentist.commandline.PreValidate', kind: "structdeclaration", path: './dentist/commandline/PreValidate.html', attributes: []},
{name: 'dentist.commandline.PreValidate.priority', kind: "variabledeclaration", path: './dentist/commandline/PreValidate.priority.html', attributes: []},
{name: 'dentist.commandline.printExternalDependencies', kind: "functiondeclaration", path: './dentist/commandline/printExternalDependencies.html', attributes: []},
{name: 'dentist.commandline.Priority', kind: "enumdeclaration", path: './dentist/commandline/Priority.html', attributes: []},
{name: 'dentist.commandline.Priority.high', kind: "enummemberdeclaration", path: './dentist/commandline/Priority.html#high', attributes: []},
{name: 'dentist.commandline.Priority.low', kind: "enummemberdeclaration", path: './dentist/commandline/Priority.html#low', attributes: []},
{name: 'dentist.commandline.Priority.medium', kind: "enummemberdeclaration", path: './dentist/commandline/Priority.html#medium', attributes: []},
{name: 'dentist.commandline.processOptions', kind: "functiondeclaration", path: './dentist/commandline/processOptions.html', attributes: []},
{name: 'dentist.commandline.runCommand', kind: "functiondeclaration", path: './dentist/commandline/runCommand.html', attributes: []},
{name: 'dentist.commandline.Validate', kind: "structdeclaration", path: './dentist/commandline/Validate.html', attributes: []},
{name: 'dentist.commandline.Validate.sourceLocation', kind: "enummemberdeclaration", path: './dentist/commandline/Validate.sourceLocation.html', attributes: []},
{name: 'dentist.commandline.Validate.validate', kind: "aliasdeclaration", path: './dentist/commandline/Validate.validate.html', attributes: []},
{name: 'dentist.commandline.validate', kind: "aliasdeclaration", path: './dentist/commandline/validate.html', attributes: []},
{name: 'dentist.commandline.validateCoordStrings', kind: "functiondeclaration", path: './dentist/commandline/validateCoordStrings.html', attributes: []},
{name: 'dentist.commandline.validateDB', kind: "functiondeclaration", path: './dentist/commandline/validateDB.html', attributes: []},
{name: 'dentist.commandline.validateFileExists', kind: "functiondeclaration", path: './dentist/commandline/validateFileExists.html', attributes: []},
{name: 'dentist.commandline.validateFileExtension', kind: "functiondeclaration", path: './dentist/commandline/validateFileExtension.html', attributes: []},
{name: 'dentist.commandline.validateFilesExist', kind: "functiondeclaration", path: './dentist/commandline/validateFilesExist.html', attributes: []},
{name: 'dentist.commandline.validateFileWritable', kind: "functiondeclaration", path: './dentist/commandline/validateFileWritable.html', attributes: []},
{name: 'dentist.commandline.validateInputMask', kind: "functiondeclaration", path: './dentist/commandline/validateInputMask.html', attributes: []},
{name: 'dentist.commandline.validateInputMasks', kind: "functiondeclaration", path: './dentist/commandline/validateInputMasks.html', attributes: []},
{name: 'dentist.commandline.validateLasFile', kind: "functiondeclaration", path: './dentist/commandline/validateLasFile.html', attributes: []},
{name: 'dentist.commandline.validateOutputMask', kind: "functiondeclaration", path: './dentist/commandline/validateOutputMask.html', attributes: []},
{name: 'dentist.commandline.validatePositive', kind: "functiondeclaration", path: './dentist/commandline/validatePositive.html', attributes: []},
{name: 'dentist.commands', kind: "module", path: './dentist/commands.html', attributes: []},
{name: 'dentist.common', kind: "module", path: './dentist/common.html', attributes: []},
{name: 'dentist.common.dentistEnforce', kind: "functiondeclaration", path: './dentist/common/dentistEnforce.html', attributes: []},
{name: 'dentist.common.DentistException', kind: "classdeclaration", path: './dentist/common/DentistException.html', attributes: []},
{name: 'dentist.common.DentistException.payload', kind: "variabledeclaration", path: './dentist/common/DentistException.payload.html', attributes: []},
{name: 'dentist.common.DentistException.this', kind: "functiondeclaration", path: './dentist/common/DentistException.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dentist.common.isTesting', kind: "enummemberdeclaration", path: './dentist/common/isTesting.html', attributes: []},
{name: 'dentist.common.OutputCoordinate', kind: "structdeclaration", path: './dentist/common/OutputCoordinate.html', attributes: []},
{name: 'dentist.common.OutputCoordinate.contigId', kind: "variabledeclaration", path: './dentist/common/OutputCoordinate.contigId.html', attributes: []},
{name: 'dentist.common.OutputCoordinate.coord', kind: "variabledeclaration", path: './dentist/common/OutputCoordinate.coord.html', attributes: []},
{name: 'dentist.common.OutputCoordinate.idx', kind: "functiondeclaration", path: './dentist/common/OutputCoordinate.idx.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.OutputCoordinate.OriginType', kind: "enumdeclaration", path: './dentist/common/OutputCoordinate.OriginType.html', attributes: []},
{name: 'dentist.common.OutputCoordinate.OriginType.contig', kind: "enummemberdeclaration", path: './dentist/common/OutputCoordinate.OriginType.html#contig', attributes: []},
{name: 'dentist.common.OutputCoordinate.OriginType.global', kind: "enummemberdeclaration", path: './dentist/common/OutputCoordinate.OriginType.html#global', attributes: []},
{name: 'dentist.common.OutputCoordinate.OriginType.scaffold', kind: "enummemberdeclaration", path: './dentist/common/OutputCoordinate.OriginType.html#scaffold', attributes: []},
{name: 'dentist.common.OutputCoordinate.OriginType.scaffoldContig', kind: "enummemberdeclaration", path: './dentist/common/OutputCoordinate.OriginType.html#scaffoldContig', attributes: []},
{name: 'dentist.common.OutputCoordinate.originType', kind: "functiondeclaration", path: './dentist/common/OutputCoordinate.originType.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.common.OutputCoordinate.scaffoldId', kind: "variabledeclaration", path: './dentist/common/OutputCoordinate.scaffoldId.html', attributes: []},
{name: 'dentist.common.OutputCoordinate.toString', kind: "functiondeclaration", path: './dentist/common/OutputCoordinate.toString.html', attributes: ["const"]},
{name: 'dentist.common.ReadInterval', kind: "aliasdeclaration", path: './dentist/common/ReadInterval.html', attributes: []},
{name: 'dentist.common.ReadPoint', kind: "aliasdeclaration", path: './dentist/common/ReadPoint.html', attributes: []},
{name: 'dentist.common.ReadRegion', kind: "aliasdeclaration", path: './dentist/common/ReadRegion.html', attributes: []},
{name: 'dentist.common.ReferenceInterval', kind: "aliasdeclaration", path: './dentist/common/ReferenceInterval.html', attributes: []},
{name: 'dentist.common.ReferencePoint', kind: "aliasdeclaration", path: './dentist/common/ReferencePoint.html', attributes: []},
{name: 'dentist.common.ReferenceRegion', kind: "aliasdeclaration", path: './dentist/common/ReferenceRegion.html', attributes: []},
{name: 'dentist.common.testingOnly', kind: "enummemberdeclaration", path: './dentist/common/testingOnly.html', attributes: []},
{name: 'dentist.common.to', kind: "functiondeclaration", path: './dentist/common/to.html', attributes: ["pure"]},
{name: 'dentist.common.toInterval', kind: "functiondeclaration", path: './dentist/common/toInterval.html', attributes: []},
{name: 'dentist.dazzler', kind: "module", path: './dentist/dazzler.html', attributes: []},
{name: 'dentist.dazzler.AccumMode', kind: "enumdeclaration", path: './dentist/dazzler/AccumMode.html', attributes: []},
{name: 'dentist.dazzler.AccumMode.exact', kind: "enummemberdeclaration", path: './dentist/dazzler/AccumMode.html#exact', attributes: []},
{name: 'dentist.dazzler.AccumMode.sum', kind: "enummemberdeclaration", path: './dentist/dazzler/AccumMode.html#sum', attributes: []},
{name: 'dentist.dazzler.AlignmentChainPacker', kind: "structdeclaration", path: './dentist/dazzler/AlignmentChainPacker.html', attributes: []},
{name: 'dentist.dazzler.AlignmentChainPacker.alignments', kind: "variabledeclaration", path: './dentist/dazzler/AlignmentChainPacker.alignments.html', attributes: []},
{name: 'dentist.dazzler.AlignmentChainPacker.assertMatchingAlignmentHead', kind: "functiondeclaration", path: './dentist/dazzler/AlignmentChainPacker.assertMatchingAlignmentHead.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.dazzler.AlignmentChainPacker.bufferCurrentLocalAlignment', kind: "functiondeclaration", path: './dentist/dazzler/AlignmentChainPacker.bufferCurrentLocalAlignment.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.dazzler.AlignmentChainPacker.bufferMode', kind: "variabledeclaration", path: './dentist/dazzler/AlignmentChainPacker.bufferMode.html', attributes: []},
{name: 'dentist.dazzler.AlignmentChainPacker.currentChain', kind: "variabledeclaration", path: './dentist/dazzler/AlignmentChainPacker.currentChain.html', attributes: []},
{name: 'dentist.dazzler.AlignmentChainPacker.currentFLA', kind: "functiondeclaration", path: './dentist/dazzler/AlignmentChainPacker.currentFLA.html', attributes: ["auto", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.dazzler.AlignmentChainPacker.empty', kind: "functiondeclaration", path: './dentist/dazzler/AlignmentChainPacker.empty.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'dentist.dazzler.AlignmentChainPacker.finishLocalAlignmentBuffer', kind: "functiondeclaration", path: './dentist/dazzler/AlignmentChainPacker.finishLocalAlignmentBuffer.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.dazzler.AlignmentChainPacker.front', kind: "functiondeclaration", path: './dentist/dazzler/AlignmentChainPacker.front.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'dentist.dazzler.AlignmentChainPacker.lastTracePointLocation', kind: "variabledeclaration", path: './dentist/dazzler/AlignmentChainPacker.lastTracePointLocation.html', attributes: []},
{name: 'dentist.dazzler.AlignmentChainPacker.LocalAlignment', kind: "aliasdeclaration", path: './dentist/dazzler/AlignmentChainPacker.LocalAlignment.html', attributes: []},
{name: 'dentist.dazzler.AlignmentChainPacker.localAlignmentAcc', kind: "variabledeclaration", path: './dentist/dazzler/AlignmentChainPacker.localAlignmentAcc.html', attributes: []},
{name: 'dentist.dazzler.AlignmentChainPacker.localAlignmentBuffer', kind: "variabledeclaration", path: './dentist/dazzler/AlignmentChainPacker.localAlignmentBuffer.html', attributes: []},
{name: 'dentist.dazzler.AlignmentChainPacker.makeCurrentLocalAlignment', kind: "functiondeclaration", path: './dentist/dazzler/AlignmentChainPacker.makeCurrentLocalAlignment.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.dazzler.AlignmentChainPacker.numBufferedLocalAlignments', kind: "variabledeclaration", path: './dentist/dazzler/AlignmentChainPacker.numBufferedLocalAlignments.html', attributes: []},
{name: 'dentist.dazzler.AlignmentChainPacker.popFront', kind: "functiondeclaration", path: './dentist/dazzler/AlignmentChainPacker.popFront.html', attributes: []},
{name: 'dentist.dazzler.AlignmentChainPacker.setEmpty', kind: "functiondeclaration", path: './dentist/dazzler/AlignmentChainPacker.setEmpty.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.dazzler.AlignmentChainPacker.this', kind: "functiondeclaration", path: './dentist/dazzler/AlignmentChainPacker.this.html', attributes: []},
{name: 'dentist.dazzler.alignmentChainPacker', kind: "functiondeclaration", path: './dentist/dazzler/alignmentChainPacker.html', attributes: ["auto"]},
{name: 'dentist.dazzler.AlignmentHeader', kind: "structdeclaration", path: './dentist/dazzler/AlignmentHeader.html', attributes: []},
{name: 'dentist.dazzler.AlignmentHeader.inferFrom', kind: "functiondeclaration", path: './dentist/dazzler/AlignmentHeader.inferFrom.html', attributes: []},
{name: 'dentist.dazzler.AlignmentHeader.inferTracePointDistanceFrom', kind: "functiondeclaration", path: './dentist/dazzler/AlignmentHeader.inferTracePointDistanceFrom.html', attributes: []},
{name: 'dentist.dazzler.AlignmentHeader.maxLocalAlignments', kind: "variabledeclaration", path: './dentist/dazzler/AlignmentHeader.maxLocalAlignments.html', attributes: []},
{name: 'dentist.dazzler.AlignmentHeader.maxLocalAlignmentsPerContig', kind: "variabledeclaration", path: './dentist/dazzler/AlignmentHeader.maxLocalAlignmentsPerContig.html', attributes: []},
{name: 'dentist.dazzler.AlignmentHeader.maxTracePoints', kind: "variabledeclaration", path: './dentist/dazzler/AlignmentHeader.maxTracePoints.html', attributes: []},
{name: 'dentist.dazzler.AlignmentHeader.numAlignmentChains', kind: "variabledeclaration", path: './dentist/dazzler/AlignmentHeader.numAlignmentChains.html', attributes: []},
{name: 'dentist.dazzler.AlignmentHeader.numAlignments', kind: "variabledeclaration", path: './dentist/dazzler/AlignmentHeader.numAlignments.html', attributes: []},
{name: 'dentist.dazzler.AlignmentHeader.numLocalAlignments', kind: "variabledeclaration", path: './dentist/dazzler/AlignmentHeader.numLocalAlignments.html', attributes: []},
{name: 'dentist.dazzler.AlignmentHeader.numTracePoints', kind: "variabledeclaration", path: './dentist/dazzler/AlignmentHeader.numTracePoints.html', attributes: []},
{name: 'dentist.dazzler.AlignmentHeader.tracePointDistance', kind: "variabledeclaration", path: './dentist/dazzler/AlignmentHeader.tracePointDistance.html', attributes: []},
{name: 'dentist.dazzler.AlignmentReaderFlag', kind: "enumdeclaration", path: './dentist/dazzler/AlignmentReaderFlag.html', attributes: []},
{name: 'dentist.dazzler.AlignmentReaderFlag.includeTracePoints', kind: "enummemberdeclaration", path: './dentist/dazzler/AlignmentReaderFlag.html#includeTracePoints', attributes: []},
{name: 'dentist.dazzler.AlignmentReaderFlag.none', kind: "enummemberdeclaration", path: './dentist/dazzler/AlignmentReaderFlag.html#none', attributes: []},
{name: 'dentist.dazzler.AlignmentReaderFlag.sort', kind: "enummemberdeclaration", path: './dentist/dazzler/AlignmentReaderFlag.html#sort', attributes: []},
{name: 'dentist.dazzler.Append', kind: "aliasdeclaration", path: './dentist/dazzler/Append.html', attributes: []},
{name: 'dentist.dazzler.BufferMode', kind: "enumdeclaration", path: './dentist/dazzler/BufferMode.html', attributes: []},
{name: 'dentist.dazzler.BufferMode.dynamic', kind: "enummemberdeclaration", path: './dentist/dazzler/BufferMode.html#dynamic', attributes: []},
{name: 'dentist.dazzler.BufferMode.overwrite', kind: "enummemberdeclaration", path: './dentist/dazzler/BufferMode.html#overwrite', attributes: []},
{name: 'dentist.dazzler.BufferMode.preallocated', kind: "enummemberdeclaration", path: './dentist/dazzler/BufferMode.html#preallocated', attributes: []},
{name: 'dentist.dazzler.BufferMode.skip', kind: "enummemberdeclaration", path: './dentist/dazzler/BufferMode.html#skip', attributes: []},
{name: 'dentist.dazzler.buildDamFile', kind: "functiondeclaration", path: './dentist/dazzler/buildDamFile.html', attributes: []},
{name: 'dentist.dazzler.buildDbFile', kind: "functiondeclaration", path: './dentist/dazzler/buildDbFile.html', attributes: []},
{name: 'dentist.dazzler.chainLocalAlignments', kind: "functiondeclaration", path: './dentist/dazzler/chainLocalAlignments.html', attributes: []},
{name: 'dentist.dazzler.ComputeIntrinsicQVOptions', kind: "enumdeclaration", path: './dentist/dazzler/ComputeIntrinsicQVOptions.html', attributes: []},
{name: 'dentist.dazzler.ComputeIntrinsicQVOptions.readDepth', kind: "enummemberdeclaration", path: './dentist/dazzler/ComputeIntrinsicQVOptions.html#readDepth', attributes: []},
{name: 'dentist.dazzler.computeQVs', kind: "functiondeclaration", path: './dentist/dazzler/computeQVs.html', attributes: []},
{name: 'dentist.dazzler.ContigSegment', kind: "structdeclaration", path: './dentist/dazzler/ContigSegment.html', attributes: []},
{name: 'dentist.dazzler.ContigSegment.begin', kind: "variabledeclaration", path: './dentist/dazzler/ContigSegment.begin.html', attributes: []},
{name: 'dentist.dazzler.ContigSegment.contigId', kind: "variabledeclaration", path: './dentist/dazzler/ContigSegment.contigId.html', attributes: []},
{name: 'dentist.dazzler.ContigSegment.end', kind: "variabledeclaration", path: './dentist/dazzler/ContigSegment.end.html', attributes: []},
{name: 'dentist.dazzler.ContigSegment.globalContigId', kind: "variabledeclaration", path: './dentist/dazzler/ContigSegment.globalContigId.html', attributes: []},
{name: 'dentist.dazzler.ContigSegment.header', kind: "variabledeclaration", path: './dentist/dazzler/ContigSegment.header.html', attributes: []},
{name: 'dentist.dazzler.ContigSegment.length', kind: "functiondeclaration", path: './dentist/dazzler/ContigSegment.length.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.dazzler.ContigSegment.scaffoldId', kind: "variabledeclaration", path: './dentist/dazzler/ContigSegment.scaffoldId.html', attributes: []},
{name: 'dentist.dazzler.DaccordOptions', kind: "enumdeclaration", path: './dentist/dazzler/DaccordOptions.html', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.advanceSize', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#advanceSize', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.computeErrorDistributionEstimate', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#computeErrorDistributionEstimate', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.computeErrorProfileOnly', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#computeErrorProfileOnly', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.errorProfileFileName', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#errorProfileFileName', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.kmerSize', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#kmerSize', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.maxAlignmentsPerRead', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#maxAlignmentsPerRead', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.maxAlignmentsPerReadVard', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#maxAlignmentsPerReadVard', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.maxDepth', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#maxDepth', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.maxKMerFilterFrequency', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#maxKMerFilterFrequency', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.maxWindowError', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#maxWindowError', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.minKMerFilterFrequency', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#minKMerFilterFrequency', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.minLengthOfOutput', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#minLengthOfOutput', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.minWindowCoverage', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#minWindowCoverage', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.numberOfThreads', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#numberOfThreads', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.produceFullSequences', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#produceFullSequences', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.readInterval', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#readInterval', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.readsPart', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#readsPart', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.temporaryFilePrefix', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#temporaryFilePrefix', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.verbosity', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#verbosity', attributes: []},
{name: 'dentist.dazzler.DaccordOptions.windowSize', kind: "enummemberdeclaration", path: './dentist/dazzler/DaccordOptions.html#windowSize', attributes: []},
{name: 'dentist.dazzler.DalignerOptions', kind: "enumdeclaration", path: './dentist/dazzler/DalignerOptions.html', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.asymmetric', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#asymmetric', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.averageCorrelationRate', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#averageCorrelationRate', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.bandWidth', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#bandWidth', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.bridge', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#bridge', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.hitBaseCoverage', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#hitBaseCoverage', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.identity', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#identity', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.kMerSize', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#kMerSize', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.masks', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#masks', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.maxKmerMemory', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#maxKmerMemory', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.maxKmerOccurence', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#maxKmerOccurence', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.minAlignmentLength', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#minAlignmentLength', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.minAReadLength', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#minAReadLength', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.modimerPercentage', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#modimerPercentage', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.numThreads', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#numThreads', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.sortMap', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#sortMap', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.strongCompositionalBias', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#strongCompositionalBias', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.tempDir', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#tempDir', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.tracePointDistance', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#tracePointDistance', attributes: []},
{name: 'dentist.dazzler.DalignerOptions.verbose', kind: "enummemberdeclaration", path: './dentist/dazzler/DalignerOptions.html#verbose', attributes: []},
{name: 'dentist.dazzler.DamapperOptions', kind: "enumdeclaration", path: './dentist/dazzler/DamapperOptions.html', attributes: []},
{name: 'dentist.dazzler.DamapperOptions.averageCorrelationRate', kind: "enummemberdeclaration", path: './dentist/dazzler/DamapperOptions.html#averageCorrelationRate', attributes: []},
{name: 'dentist.dazzler.DamapperOptions.bestMatches', kind: "enummemberdeclaration", path: './dentist/dazzler/DamapperOptions.html#bestMatches', attributes: []},
{name: 'dentist.dazzler.DamapperOptions.kMerSize', kind: "enummemberdeclaration", path: './dentist/dazzler/DamapperOptions.html#kMerSize', attributes: []},
{name: 'dentist.dazzler.DamapperOptions.masks', kind: "enummemberdeclaration", path: './dentist/dazzler/DamapperOptions.html#masks', attributes: []},
{name: 'dentist.dazzler.DamapperOptions.maxKmerMemory', kind: "enummemberdeclaration", path: './dentist/dazzler/DamapperOptions.html#maxKmerMemory', attributes: []},
{name: 'dentist.dazzler.DamapperOptions.maxKmerOccurence', kind: "enummemberdeclaration", path: './dentist/dazzler/DamapperOptions.html#maxKmerOccurence', attributes: []},
{name: 'dentist.dazzler.DamapperOptions.numThreads', kind: "enummemberdeclaration", path: './dentist/dazzler/DamapperOptions.html#numThreads', attributes: []},
{name: 'dentist.dazzler.DamapperOptions.oneDirection', kind: "enummemberdeclaration", path: './dentist/dazzler/DamapperOptions.html#oneDirection', attributes: []},
{name: 'dentist.dazzler.DamapperOptions.repeatProfileTrack', kind: "enummemberdeclaration", path: './dentist/dazzler/DamapperOptions.html#repeatProfileTrack', attributes: []},
{name: 'dentist.dazzler.DamapperOptions.sortPileOrder', kind: "enummemberdeclaration", path: './dentist/dazzler/DamapperOptions.html#sortPileOrder', attributes: []},
{name: 'dentist.dazzler.DamapperOptions.strongCompositionalBias', kind: "enummemberdeclaration", path: './dentist/dazzler/DamapperOptions.html#strongCompositionalBias', attributes: []},
{name: 'dentist.dazzler.DamapperOptions.symmetric', kind: "enummemberdeclaration", path: './dentist/dazzler/DamapperOptions.html#symmetric', attributes: []},
{name: 'dentist.dazzler.DamapperOptions.tempDir', kind: "enummemberdeclaration", path: './dentist/dazzler/DamapperOptions.html#tempDir', attributes: []},
{name: 'dentist.dazzler.DamapperOptions.tracePointDistance', kind: "enummemberdeclaration", path: './dentist/dazzler/DamapperOptions.html#tracePointDistance', attributes: []},
{name: 'dentist.dazzler.DamapperOptions.verbose', kind: "enummemberdeclaration", path: './dentist/dazzler/DamapperOptions.html#verbose', attributes: []},
{name: 'dentist.dazzler.damFileExtension', kind: "enummemberdeclaration", path: './dentist/dazzler/damFileExtension.html', attributes: []},
{name: 'dentist.dazzler.DatanderOptions', kind: "enumdeclaration", path: './dentist/dazzler/DatanderOptions.html', attributes: []},
{name: 'dentist.dazzler.DatanderOptions.averageCorrelationRate', kind: "enummemberdeclaration", path: './dentist/dazzler/DatanderOptions.html#averageCorrelationRate', attributes: []},
{name: 'dentist.dazzler.DatanderOptions.bandWidth', kind: "enummemberdeclaration", path: './dentist/dazzler/DatanderOptions.html#bandWidth', attributes: []},
{name: 'dentist.dazzler.DatanderOptions.hitBaseCoverage', kind: "enummemberdeclaration", path: './dentist/dazzler/DatanderOptions.html#hitBaseCoverage', attributes: []},
{name: 'dentist.dazzler.DatanderOptions.kMerSize', kind: "enummemberdeclaration", path: './dentist/dazzler/DatanderOptions.html#kMerSize', attributes: []},
{name: 'dentist.dazzler.DatanderOptions.minAlignmentLength', kind: "enummemberdeclaration", path: './dentist/dazzler/DatanderOptions.html#minAlignmentLength', attributes: []},
{name: 'dentist.dazzler.DatanderOptions.numThreads', kind: "enummemberdeclaration", path: './dentist/dazzler/DatanderOptions.html#numThreads', attributes: []},
{name: 'dentist.dazzler.DatanderOptions.tempDir', kind: "enummemberdeclaration", path: './dentist/dazzler/DatanderOptions.html#tempDir', attributes: []},
{name: 'dentist.dazzler.DatanderOptions.tracePointDistance', kind: "enummemberdeclaration", path: './dentist/dazzler/DatanderOptions.html#tracePointDistance', attributes: []},
{name: 'dentist.dazzler.DatanderOptions.verbose', kind: "enummemberdeclaration", path: './dentist/dazzler/DatanderOptions.html#verbose', attributes: []},
{name: 'dentist.dazzler.DazzExtra', kind: "structdeclaration", path: './dentist/dazzler/DazzExtra.html', attributes: []},
{name: 'dentist.dazzler.DazzExtra.accumMode', kind: "variabledeclaration", path: './dentist/dazzler/DazzExtra.accumMode.html', attributes: []},
{name: 'dentist.dazzler.DazzExtra.data', kind: "variabledeclaration", path: './dentist/dazzler/DazzExtra.data.html', attributes: []},
{name: 'dentist.dazzler.DazzExtra.name', kind: "variabledeclaration", path: './dentist/dazzler/DazzExtra.name.html', attributes: []},
{name: 'dentist.dazzler.DazzExtra.vtype', kind: "enummemberdeclaration", path: './dentist/dazzler/DazzExtra.vtype.html', attributes: []},
{name: 'dentist.dazzler.dazzExtra', kind: "functiondeclaration", path: './dentist/dazzler/dazzExtra.html', attributes: []},
{name: 'dentist.dazzler.DazzExtraNotFound', kind: "classdeclaration", path: './dentist/dazzler/DazzExtraNotFound.html', attributes: []},
{name: 'dentist.dazzler.DazzlerCommandException', kind: "classdeclaration", path: './dentist/dazzler/DazzlerCommandException.html', attributes: []},
{name: 'dentist.dazzler.DazzlerCommandException.this', kind: "functiondeclaration", path: './dentist/dazzler/DazzlerCommandException.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dentist.dazzler.DBdumpOptions', kind: "enumdeclaration", path: './dentist/dazzler/DBdumpOptions.html', attributes: []},
{name: 'dentist.dazzler.DBdumpOptions.intrinsicQualityVector', kind: "enummemberdeclaration", path: './dentist/dazzler/DBdumpOptions.html#intrinsicQualityVector', attributes: []},
{name: 'dentist.dazzler.DBdumpOptions.masks', kind: "enummemberdeclaration", path: './dentist/dazzler/DBdumpOptions.html#masks', attributes: []},
{name: 'dentist.dazzler.DBdumpOptions.originalHeader', kind: "enummemberdeclaration", path: './dentist/dazzler/DBdumpOptions.html#originalHeader', attributes: []},
{name: 'dentist.dazzler.DBdumpOptions.quivaValues', kind: "enummemberdeclaration", path: './dentist/dazzler/DBdumpOptions.html#quivaValues', attributes: []},
{name: 'dentist.dazzler.DBdumpOptions.readNumber', kind: "enummemberdeclaration", path: './dentist/dazzler/DBdumpOptions.html#readNumber', attributes: []},
{name: 'dentist.dazzler.DBdumpOptions.repeatProfileVector', kind: "enummemberdeclaration", path: './dentist/dazzler/DBdumpOptions.html#repeatProfileVector', attributes: []},
{name: 'dentist.dazzler.DBdumpOptions.sequenceString', kind: "enummemberdeclaration", path: './dentist/dazzler/DBdumpOptions.html#sequenceString', attributes: []},
{name: 'dentist.dazzler.DBdumpOptions.sNROfACGTChannels', kind: "enummemberdeclaration", path: './dentist/dazzler/DBdumpOptions.html#sNROfACGTChannels', attributes: []},
{name: 'dentist.dazzler.DBdumpOptions.untrimmedDatabase', kind: "enummemberdeclaration", path: './dentist/dazzler/DBdumpOptions.html#untrimmedDatabase', attributes: []},
{name: 'dentist.dazzler.DBdumpOptions.upperCase', kind: "enummemberdeclaration", path: './dentist/dazzler/DBdumpOptions.html#upperCase', attributes: []},
{name: 'dentist.dazzler.dbdust', kind: "functiondeclaration", path: './dentist/dazzler/dbdust.html', attributes: []},
{name: 'dentist.dazzler.dbdustMaskName', kind: "enummemberdeclaration", path: './dentist/dazzler/dbdustMaskName.html', attributes: []},
{name: 'dentist.dazzler.DBdustOptions', kind: "enumdeclaration", path: './dentist/dazzler/DBdustOptions.html', attributes: []},
{name: 'dentist.dazzler.DBdustOptions.baseCompositionBias', kind: "enummemberdeclaration", path: './dentist/dazzler/DBdustOptions.html#baseCompositionBias', attributes: []},
{name: 'dentist.dazzler.DBdustOptions.dustThreshold', kind: "enummemberdeclaration", path: './dentist/dazzler/DBdustOptions.html#dustThreshold', attributes: []},
{name: 'dentist.dazzler.DBdustOptions.minIntervalSize', kind: "enummemberdeclaration", path: './dentist/dazzler/DBdustOptions.html#minIntervalSize', attributes: []},
{name: 'dentist.dazzler.DBdustOptions.windowSize', kind: "enummemberdeclaration", path: './dentist/dazzler/DBdustOptions.html#windowSize', attributes: []},
{name: 'dentist.dazzler.dbEmpty', kind: "functiondeclaration", path: './dentist/dazzler/dbEmpty.html', attributes: []},
{name: 'dentist.dazzler.dbFileExtension', kind: "enummemberdeclaration", path: './dentist/dazzler/dbFileExtension.html', attributes: []},
{name: 'dentist.dazzler.DbRecord', kind: "structdeclaration", path: './dentist/dazzler/DbRecord.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.contigId', kind: "aliasdeclaration", path: './dentist/dazzler/DbRecord.contigId.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.fromQVChar', kind: "functiondeclaration", path: './dentist/dazzler/DbRecord.fromQVChar.html', attributes: ["static"]},
{name: 'dentist.dazzler.DbRecord.header', kind: "variabledeclaration", path: './dentist/dazzler/DbRecord.header.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.intrinsicQualityVector', kind: "variabledeclaration", path: './dentist/dazzler/DbRecord.intrinsicQualityVector.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.intrinsicQVs', kind: "aliasdeclaration", path: './dentist/dazzler/DbRecord.intrinsicQVs.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.location', kind: "aliasdeclaration", path: './dentist/dazzler/DbRecord.location.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.maxQV', kind: "enummemberdeclaration", path: './dentist/dazzler/DbRecord.maxQV.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.PacBioReadInfo', kind: "structdeclaration", path: './dentist/dazzler/DbRecord.PacBioReadInfo.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.PacBioReadInfo.begin', kind: "aliasdeclaration", path: './dentist/dazzler/DbRecord.PacBioReadInfo.begin.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.PacBioReadInfo.contigIdx', kind: "aliasdeclaration", path: './dentist/dazzler/DbRecord.PacBioReadInfo.contigIdx.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.PacBioReadInfo.end', kind: "aliasdeclaration", path: './dentist/dazzler/DbRecord.PacBioReadInfo.end.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.PacBioReadInfo.length', kind: "aliasdeclaration", path: './dentist/dazzler/DbRecord.PacBioReadInfo.length.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.PacBioReadInfo.pulseEnd', kind: "variabledeclaration", path: './dentist/dazzler/DbRecord.PacBioReadInfo.pulseEnd.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.PacBioReadInfo.pulseLength', kind: "functiondeclaration", path: './dentist/dazzler/DbRecord.PacBioReadInfo.pulseLength.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'dentist.dazzler.DbRecord.PacBioReadInfo.pulseStart', kind: "variabledeclaration", path: './dentist/dazzler/DbRecord.PacBioReadInfo.pulseStart.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.PacBioReadInfo.readQuality', kind: "variabledeclaration", path: './dentist/dazzler/DbRecord.PacBioReadInfo.readQuality.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.PacBioReadInfo.well', kind: "variabledeclaration", path: './dentist/dazzler/DbRecord.PacBioReadInfo.well.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.pacBioReadInfo', kind: "variabledeclaration", path: './dentist/dazzler/DbRecord.pacBioReadInfo.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.readNumber', kind: "variabledeclaration", path: './dentist/dazzler/DbRecord.readNumber.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.sequence', kind: "variabledeclaration", path: './dentist/dazzler/DbRecord.sequence.html', attributes: []},
{name: 'dentist.dazzler.DbRecord.toQVChar', kind: "functiondeclaration", path: './dentist/dazzler/DbRecord.toQVChar.html', attributes: ["static"]},
{name: 'dentist.dazzler.DBshowOptions', kind: "enumdeclaration", path: './dentist/dazzler/DBshowOptions.html', attributes: []},
{name: 'dentist.dazzler.DBshowOptions.fastaLineWidth', kind: "enummemberdeclaration", path: './dentist/dazzler/DBshowOptions.html#fastaLineWidth', attributes: []},
{name: 'dentist.dazzler.DBshowOptions.masks', kind: "enummemberdeclaration", path: './dentist/dazzler/DBshowOptions.html#masks', attributes: []},
{name: 'dentist.dazzler.DBshowOptions.noSequence', kind: "enummemberdeclaration", path: './dentist/dazzler/DBshowOptions.html#noSequence', attributes: []},
{name: 'dentist.dazzler.DBshowOptions.produceArrowFile', kind: "enummemberdeclaration", path: './dentist/dazzler/DBshowOptions.html#produceArrowFile', attributes: []},
{name: 'dentist.dazzler.DBshowOptions.produceQuivaFile', kind: "enummemberdeclaration", path: './dentist/dazzler/DBshowOptions.html#produceQuivaFile', attributes: []},
{name: 'dentist.dazzler.DBshowOptions.showArrowPulseSequence', kind: "enummemberdeclaration", path: './dentist/dazzler/DBshowOptions.html#showArrowPulseSequence', attributes: []},
{name: 'dentist.dazzler.DBshowOptions.showQuiva', kind: "enummemberdeclaration", path: './dentist/dazzler/DBshowOptions.html#showQuiva', attributes: []},
{name: 'dentist.dazzler.DBshowOptions.untrimmedDatabase', kind: "enummemberdeclaration", path: './dentist/dazzler/DBshowOptions.html#untrimmedDatabase', attributes: []},
{name: 'dentist.dazzler.DBshowOptions.upperCase', kind: "enummemberdeclaration", path: './dentist/dazzler/DBshowOptions.html#upperCase', attributes: []},
{name: 'dentist.dazzler.DbSplitOptions', kind: "enumdeclaration", path: './dentist/dazzler/DbSplitOptions.html', attributes: []},
{name: 'dentist.dazzler.DbSplitOptions.allReads', kind: "enummemberdeclaration", path: './dentist/dazzler/DbSplitOptions.html#allReads', attributes: []},
{name: 'dentist.dazzler.DbSplitOptions.blockSize', kind: "enummemberdeclaration", path: './dentist/dazzler/DbSplitOptions.html#blockSize', attributes: []},
{name: 'dentist.dazzler.DbSplitOptions.force', kind: "enummemberdeclaration", path: './dentist/dazzler/DbSplitOptions.html#force', attributes: []},
{name: 'dentist.dazzler.DbSplitOptions.minReadLength', kind: "enummemberdeclaration", path: './dentist/dazzler/DbSplitOptions.html#minReadLength', attributes: []},
{name: 'dentist.dazzler.DbSplitOptions.onlyLongest', kind: "enummemberdeclaration", path: './dentist/dazzler/DbSplitOptions.html#onlyLongest', attributes: []},
{name: 'dentist.dazzler.DbSplitOptions.onlyMedian', kind: "enummemberdeclaration", path: './dentist/dazzler/DbSplitOptions.html#onlyMedian', attributes: []},
{name: 'dentist.dazzler.dbSubset', kind: "functiondeclaration", path: './dentist/dazzler/dbSubset.html', attributes: []},
{name: 'dentist.dazzler.Fasta2DazzlerOptions', kind: "enumdeclaration", path: './dentist/dazzler/Fasta2DazzlerOptions.html', attributes: []},
{name: 'dentist.dazzler.Fasta2DazzlerOptions.fromFile', kind: "enummemberdeclaration", path: './dentist/dazzler/Fasta2DazzlerOptions.html#fromFile', attributes: []},
{name: 'dentist.dazzler.Fasta2DazzlerOptions.fromStdin', kind: "enummemberdeclaration", path: './dentist/dazzler/Fasta2DazzlerOptions.html#fromStdin', attributes: []},
{name: 'dentist.dazzler.Fasta2DazzlerOptions.verbose', kind: "enummemberdeclaration", path: './dentist/dazzler/Fasta2DazzlerOptions.html#verbose', attributes: []},
{name: 'dentist.dazzler.filterLocalAlignments', kind: "functiondeclaration", path: './dentist/dazzler/filterLocalAlignments.html', attributes: []},
{name: 'dentist.dazzler.filterPileUpAlignments', kind: "functiondeclaration", path: './dentist/dazzler/filterPileUpAlignments.html', attributes: []},
{name: 'dentist.dazzler.forceLargeTracePointType', kind: "enummemberdeclaration", path: './dentist/dazzler/forceLargeTracePointType.html', attributes: []},
{name: 'dentist.dazzler.GapSegment', kind: "structdeclaration", path: './dentist/dazzler/GapSegment.html', attributes: []},
{name: 'dentist.dazzler.GapSegment.begin', kind: "variabledeclaration", path: './dentist/dazzler/GapSegment.begin.html', attributes: []},
{name: 'dentist.dazzler.GapSegment.beginContigId', kind: "variabledeclaration", path: './dentist/dazzler/GapSegment.beginContigId.html', attributes: []},
{name: 'dentist.dazzler.GapSegment.beginGlobalContigId', kind: "variabledeclaration", path: './dentist/dazzler/GapSegment.beginGlobalContigId.html', attributes: []},
{name: 'dentist.dazzler.GapSegment.end', kind: "variabledeclaration", path: './dentist/dazzler/GapSegment.end.html', attributes: []},
{name: 'dentist.dazzler.GapSegment.endContigId', kind: "variabledeclaration", path: './dentist/dazzler/GapSegment.endContigId.html', attributes: []},
{name: 'dentist.dazzler.GapSegment.endGlobalContigId', kind: "variabledeclaration", path: './dentist/dazzler/GapSegment.endGlobalContigId.html', attributes: []},
{name: 'dentist.dazzler.GapSegment.length', kind: "functiondeclaration", path: './dentist/dazzler/GapSegment.length.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'dentist.dazzler.GapSegment.scaffoldId', kind: "variabledeclaration", path: './dentist/dazzler/GapSegment.scaffoldId.html', attributes: []},
{name: 'dentist.dazzler.getAlignments', kind: "functiondeclaration", path: './dentist/dazzler/getAlignments.html', attributes: []},
{name: 'dentist.dazzler.getBlockSize', kind: "functiondeclaration", path: './dentist/dazzler/getBlockSize.html', attributes: []},
{name: 'dentist.dazzler.getConsensus', kind: "functiondeclaration", path: './dentist/dazzler/getConsensus.html', attributes: []},
{name: 'dentist.dazzler.getContigCutoff', kind: "functiondeclaration", path: './dentist/dazzler/getContigCutoff.html', attributes: []},
{name: 'dentist.dazzler.getDalignment', kind: "functiondeclaration", path: './dentist/dazzler/getDalignment.html', attributes: []},
{name: 'dentist.dazzler.getDamapping', kind: "functiondeclaration", path: './dentist/dazzler/getDamapping.html', attributes: []},
{name: 'dentist.dazzler.getDbRecords', kind: "functiondeclaration", path: './dentist/dazzler/getDbRecords.html', attributes: ["auto"]},
{name: 'dentist.dazzler.getExactAlignment', kind: "functiondeclaration", path: './dentist/dazzler/getExactAlignment.html', attributes: ["auto"]},
{name: 'dentist.dazzler.getFastaEntries', kind: "functiondeclaration", path: './dentist/dazzler/getFastaEntries.html', attributes: ["auto"]},
{name: 'dentist.dazzler.getFastaSequence', kind: "functiondeclaration", path: './dentist/dazzler/getFastaSequence.html', attributes: []},
{name: 'dentist.dazzler.getFastaSequences', kind: "functiondeclaration", path: './dentist/dazzler/getFastaSequences.html', attributes: ["auto"]},
{name: 'dentist.dazzler.getFlatLocalAlignments', kind: "functiondeclaration", path: './dentist/dazzler/getFlatLocalAlignments.html', attributes: ["auto"]},
{name: 'dentist.dazzler.getHiddenDbFiles', kind: "functiondeclaration", path: './dentist/dazzler/getHiddenDbFiles.html', attributes: ["auto", "pure", "safe"]},
{name: 'dentist.dazzler.getLasFile', kind: "functiondeclaration", path: './dentist/dazzler/getLasFile.html', attributes: []},
{name: 'dentist.dazzler.getLocalAlignments', kind: "functiondeclaration", path: './dentist/dazzler/getLocalAlignments.html', attributes: []},
{name: 'dentist.dazzler.getMappings', kind: "functiondeclaration", path: './dentist/dazzler/getMappings.html', attributes: []},
{name: 'dentist.dazzler.getMaskFiles', kind: "functiondeclaration", path: './dentist/dazzler/getMaskFiles.html', attributes: ["auto", "pure", "safe"]},
{name: 'dentist.dazzler.getNumBlocks', kind: "functiondeclaration", path: './dentist/dazzler/getNumBlocks.html', attributes: []},
{name: 'dentist.dazzler.getNumContigs', kind: "functiondeclaration", path: './dentist/dazzler/getNumContigs.html', attributes: []},
{name: 'dentist.dazzler.getScaffoldStructure', kind: "functiondeclaration", path: './dentist/dazzler/getScaffoldStructure.html', attributes: ["auto"]},
{name: 'dentist.dazzler.getTracePointDistance', kind: "functiondeclaration", path: './dentist/dazzler/getTracePointDistance.html', attributes: []},
{name: 'dentist.dazzler.handleExistingDb', kind: "variabledeclaration", path: './dentist/dazzler/handleExistingDb.html', attributes: []},
{name: 'dentist.dazzler.isOptionsList', kind: "enummemberdeclaration", path: './dentist/dazzler/isOptionsList.html', attributes: []},
{name: 'dentist.dazzler.isValidPileUpAlignment', kind: "functiondeclaration", path: './dentist/dazzler/isValidPileUpAlignment.html', attributes: []},
{name: 'dentist.dazzler.LAmerge', kind: "functiondeclaration", path: './dentist/dazzler/LAmerge.html', attributes: []},
{name: 'dentist.dazzler.lasEmpty', kind: "functiondeclaration", path: './dentist/dazzler/lasEmpty.html', attributes: []},
{name: 'dentist.dazzler.lasFileGenerated', kind: "functiondeclaration", path: './dentist/dazzler/lasFileGenerated.html', attributes: []},
{name: 'dentist.dazzler.LocalAlignmentReader', kind: "classdeclaration", path: './dentist/dazzler/LocalAlignmentReader.html', attributes: []},
{name: 'dentist.dazzler.LocalAlignmentReader.currentNumTracePoints', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.currentNumTracePoints.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'dentist.dazzler.LocalAlignmentReader.empty', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.empty.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'dentist.dazzler.LocalAlignmentReader.front', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.front.html', attributes: ["pure", "nothrow", "property", "safe"]},
{name: 'dentist.dazzler.LocalAlignmentReader.length', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.length.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'dentist.dazzler.LocalAlignmentReader.numLocalAlignments', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.numLocalAlignments.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'dentist.dazzler.LocalAlignmentReader.popFront', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.popFront.html', attributes: []},
{name: 'dentist.dazzler.LocalAlignmentReader.reset', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.reset.html', attributes: []},
{name: 'dentist.dazzler.LocalAlignmentReader.skipTracePoints', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.skipTracePoints.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'dentist.dazzler.LocalAlignmentReader.tracePointDistance', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.tracePointDistance.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'dentist.dazzler.LocalAlignmentReader.fillInContigLengths', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.fillInContigLengths.html', attributes: ["pure", "safe"]},
{name: 'dentist.dazzler.LocalAlignmentReader.fillInOverlapHead', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.fillInOverlapHead.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.dazzler.LocalAlignmentReader.getRawTracePointBuffer', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.getRawTracePointBuffer.html', attributes: ["pure", "nothrow", "property"]},
{name: 'dentist.dazzler.LocalAlignmentReader.getTraceVectorLength', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.getTraceVectorLength.html', attributes: ["pure", "safe", "const"]},
{name: 'dentist.dazzler.LocalAlignmentReader.readHeader', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.readHeader.html', attributes: []},
{name: 'dentist.dazzler.LocalAlignmentReader.readLocalAlignment', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.readLocalAlignment.html', attributes: []},
{name: 'dentist.dazzler.LocalAlignmentReader.readNumLocalAlignments', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.readNumLocalAlignments.html', attributes: []},
{name: 'dentist.dazzler.LocalAlignmentReader.readOverlapHead', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.readOverlapHead.html', attributes: []},
{name: 'dentist.dazzler.LocalAlignmentReader.readTracePointDistance', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.readTracePointDistance.html', attributes: []},
{name: 'dentist.dazzler.LocalAlignmentReader.readTraceVector', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.readTraceVector.html', attributes: []},
{name: 'dentist.dazzler.LocalAlignmentReader.rewriteTracePointBufferToLargeTracePointType', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.rewriteTracePointBufferToLargeTracePointType.html', attributes: []},
{name: 'dentist.dazzler.LocalAlignmentReader.skipTraceVector', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.skipTraceVector.html', attributes: []},
{name: 'dentist.dazzler.LocalAlignmentReader.this', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.this.html', attributes: []},
{name: 'dentist.dazzler.LocalAlignmentReader.unexpectedEOF', kind: "functiondeclaration", path: './dentist/dazzler/LocalAlignmentReader.unexpectedEOF.html', attributes: []},
{name: 'dentist.dazzler.MaskReaderException', kind: "classdeclaration", path: './dentist/dazzler/MaskReaderException.html', attributes: []},
{name: 'dentist.dazzler.MaskReaderException.this', kind: "functiondeclaration", path: './dentist/dazzler/MaskReaderException.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dentist.dazzler.minAverageCorrelationRate', kind: "enummemberdeclaration", path: './dentist/dazzler/minAverageCorrelationRate.html', attributes: []},
{name: 'dentist.dazzler.minBestMatches', kind: "enummemberdeclaration", path: './dentist/dazzler/minBestMatches.html', attributes: []},
{name: 'dentist.dazzler.minQVCoverage', kind: "enummemberdeclaration", path: './dentist/dazzler/minQVCoverage.html', attributes: []},
{name: 'dentist.dazzler.minSequenceLength', kind: "enummemberdeclaration", path: './dentist/dazzler/minSequenceLength.html', attributes: []},
{name: 'dentist.dazzler.numDbRecords', kind: "functiondeclaration", path: './dentist/dazzler/numDbRecords.html', attributes: []},
{name: 'dentist.dazzler.OptionModifier', kind: "enumdeclaration", path: './dentist/dazzler/OptionModifier.html', attributes: []},
{name: 'dentist.dazzler.OptionModifier.add', kind: "enummemberdeclaration", path: './dentist/dazzler/OptionModifier.html#add', attributes: []},
{name: 'dentist.dazzler.OptionModifier.defaultValue', kind: "enummemberdeclaration", path: './dentist/dazzler/OptionModifier.html#defaultValue', attributes: []},
{name: 'dentist.dazzler.OptionModifier.ensurePresent', kind: "enummemberdeclaration", path: './dentist/dazzler/OptionModifier.html#ensurePresent', attributes: []},
{name: 'dentist.dazzler.OptionModifier.remove', kind: "enummemberdeclaration", path: './dentist/dazzler/OptionModifier.html#remove', attributes: []},
{name: 'dentist.dazzler.OptionModifier.replace', kind: "enummemberdeclaration", path: './dentist/dazzler/OptionModifier.html#replace', attributes: []},
{name: 'dentist.dazzler.OptionModifier.replaceOrAdd', kind: "enummemberdeclaration", path: './dentist/dazzler/OptionModifier.html#replaceOrAdd', attributes: []},
{name: 'dentist.dazzler.readDazzExtra', kind: "functiondeclaration", path: './dentist/dazzler/readDazzExtra.html', attributes: []},
{name: 'dentist.dazzler.readMask', kind: "functiondeclaration", path: './dentist/dazzler/readMask.html', attributes: []},
{name: 'dentist.dazzler.removeDB', kind: "functiondeclaration", path: './dentist/dazzler/removeDB.html', attributes: []},
{name: 'dentist.dazzler.ScaffoldSegment', kind: "aliasdeclaration", path: './dentist/dazzler/ScaffoldSegment.html', attributes: []},
{name: 'dentist.dazzler.stripDbExtension', kind: "functiondeclaration", path: './dentist/dazzler/stripDbExtension.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dentist.dazzler.withOption', kind: "functiondeclaration", path: './dentist/dazzler/withOption.html', attributes: ["auto"]},
{name: 'dentist.dazzler.writeAlignments', kind: "functiondeclaration", path: './dentist/dazzler/writeAlignments.html', attributes: []},
{name: 'dentist.dazzler.writeDazzExtra', kind: "functiondeclaration", path: './dentist/dazzler/writeDazzExtra.html', attributes: []},
{name: 'dentist.dazzler.writeMask', kind: "functiondeclaration", path: './dentist/dazzler/writeMask.html', attributes: []},
{name: 'dentist.dazzler.fingerprint', kind: "functiondeclaration", path: './dentist/dazzler/fingerprint.html', attributes: ["auto", "pure", "nothrow", "safe"]},
{name: 'app', kind: "module", path: './app.html', attributes: []},
{name: 'app.main', kind: "functiondeclaration", path: './app/main.html', attributes: []},
{name: 'dentist', kind: "module", path: './dentist.html', attributes: []},
];
